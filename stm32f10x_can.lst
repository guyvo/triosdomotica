
D:\cortex\gateway\stm32f10x_can.o:     file format elf32-littlearm
D:\cortex\gateway\stm32f10x_can.o

Disassembly of section .text.CAN_StructInit:

00000000 <CAN_StructInit>:
CAN_StructInit():
   0:	f04f 0300 	mov.w	r3, #0	; 0x0
   4:	7183      	strb	r3, [r0, #6]
   6:	71c3      	strb	r3, [r0, #7]
   8:	7203      	strb	r3, [r0, #8]
   a:	7243      	strb	r3, [r0, #9]
   c:	7283      	strb	r3, [r0, #10]
   e:	72c3      	strb	r3, [r0, #11]
  10:	7083      	strb	r3, [r0, #2]
  12:	70c3      	strb	r3, [r0, #3]
  14:	f103 0303 	add.w	r3, r3, #3	; 0x3
  18:	7103      	strb	r3, [r0, #4]
  1a:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
  1e:	7143      	strb	r3, [r0, #5]
  20:	f04f 0301 	mov.w	r3, #1	; 0x1
  24:	8003      	strh	r3, [r0, #0]
  26:	4770      	bx	lr
Disassembly of section .text.CheckITStatus:

00000000 <CheckITStatus>:
CheckITStatus():
   0:	4201      	tst	r1, r0
   2:	bf0c      	ite	eq
   4:	2000      	moveq	r0, #0
   6:	2001      	movne	r0, #1
   8:	4770      	bx	lr
   a:	46c0      	nop			(mov r8, r8)
Disassembly of section .text.CAN_ClearITPendingBit:

00000000 <CAN_ClearITPendingBit>:
CAN_ClearITPendingBit():
   0:	b570      	push	{r4, r5, r6, lr}
   2:	4605      	mov	r5, r0
   4:	460c      	mov	r4, r1
   6:	f246 4300 	movw	r3, #25600	; 0x6400
   a:	f2c4 0300 	movt	r3, #16384	; 0x4000
   e:	f646 0000 	movw	r0, #26624	; 0x6800
  12:	f2c4 0000 	movt	r0, #16384	; 0x4000
  16:	4285      	cmp	r5, r0
  18:	bf14      	ite	ne
  1a:	2000      	movne	r0, #0
  1c:	2001      	moveq	r0, #1
  1e:	429d      	cmp	r5, r3
  20:	bf08      	it	eq
  22:	f040 0001 	orreq.w	r0, r0, #1	; 0x1
  26:	f7ff fffe 	bl	0 <assert_param>
  2a:	f1a4 0204 	sub.w	r2, r4, #4	; 0x4
  2e:	2c20      	cmp	r4, #32
  30:	bf14      	ite	ne
  32:	2300      	movne	r3, #0
  34:	2301      	moveq	r3, #1
  36:	2a04      	cmp	r2, #4
  38:	bf98      	it	ls
  3a:	f043 0301 	orrls.w	r3, r3, #1	; 0x1
  3e:	bb03      	cbnz	r3, 82 <CAN_ClearITPendingBit+0x82>
  40:	f5b4 7f80 	cmp.w	r4, #256	; 0x100
  44:	bf14      	ite	ne
  46:	2300      	movne	r3, #0
  48:	2301      	moveq	r3, #1
  4a:	2c40      	cmp	r4, #64
  4c:	bf08      	it	eq
  4e:	f043 0301 	orreq.w	r3, r3, #1	; 0x1
  52:	b9b3      	cbnz	r3, 82 <CAN_ClearITPendingBit+0x82>
  54:	f5b4 6f80 	cmp.w	r4, #1024	; 0x400
  58:	bf14      	ite	ne
  5a:	2300      	movne	r3, #0
  5c:	2301      	moveq	r3, #1
  5e:	f5b4 7f00 	cmp.w	r4, #512	; 0x200
  62:	bf08      	it	eq
  64:	f043 0301 	orreq.w	r3, r3, #1	; 0x1
  68:	b95b      	cbnz	r3, 82 <CAN_ClearITPendingBit+0x82>
  6a:	f5b4 3f00 	cmp.w	r4, #131072	; 0x20000
  6e:	bf14      	ite	ne
  70:	2300      	movne	r3, #0
  72:	2301      	moveq	r3, #1
  74:	f5b4 3f80 	cmp.w	r4, #65536	; 0x10000
  78:	bf14      	ite	ne
  7a:	4618      	movne	r0, r3
  7c:	f043 0001 	orreq.w	r0, r3, #1	; 0x1
  80:	e001      	b.n	86 <CAN_ClearITPendingBit+0x86>
  82:	f04f 0001 	mov.w	r0, #1	; 0x1
  86:	f7ff fffe 	bl	0 <assert_param>
  8a:	2c20      	cmp	r4, #32
  8c:	bf04      	itt	eq
  8e:	2308      	moveq	r3, #8
  90:	612b      	streq	r3, [r5, #16]
  92:	d04b      	beq.n	12c <assert_param+0x12c>
  94:	d817      	bhi.n	c6 <assert_param+0xc6>
  96:	2c06      	cmp	r4, #6
  98:	bf04      	itt	eq
  9a:	f44f 7380 	moveq.w	r3, #256	; 0x100
  9e:	60ab      	streq	r3, [r5, #8]
  a0:	d044      	beq.n	12c <assert_param+0x12c>
  a2:	d807      	bhi.n	b4 <assert_param+0xb4>
  a4:	2c04      	cmp	r4, #4
  a6:	bf04      	itt	eq
  a8:	2308      	moveq	r3, #8
  aa:	60eb      	streq	r3, [r5, #12]
  ac:	d03e      	beq.n	12c <assert_param+0x12c>
  ae:	2c05      	cmp	r4, #5
  b0:	d13c      	bne.n	12c <assert_param+0x12c>
  b2:	e02a      	b.n	10a <assert_param+0x10a>
  b4:	2c07      	cmp	r4, #7
  b6:	bf04      	itt	eq
  b8:	f44f 3380 	moveq.w	r3, #65536	; 0x10000
  bc:	60ab      	streq	r3, [r5, #8]
  be:	d035      	beq.n	12c <assert_param+0x12c>
  c0:	2c08      	cmp	r4, #8
  c2:	d133      	bne.n	12c <assert_param+0x12c>
  c4:	e025      	b.n	112 <assert_param+0x112>
  c6:	f5b4 7f00 	cmp.w	r4, #512	; 0x200
  ca:	bf02      	ittt	eq
  cc:	69ab      	ldreq	r3, [r5, #24]
  ce:	f023 0302 	biceq.w	r3, r3, #2	; 0x2
  d2:	61ab      	streq	r3, [r5, #24]
  d4:	d02a      	beq.n	12c <assert_param+0x12c>
  d6:	d808      	bhi.n	ea <assert_param+0xea>
  d8:	2c40      	cmp	r4, #64
  da:	bf04      	itt	eq
  dc:	2310      	moveq	r3, #16
  de:	612b      	streq	r3, [r5, #16]
  e0:	d024      	beq.n	12c <assert_param+0x12c>
  e2:	f5b4 7f80 	cmp.w	r4, #256	; 0x100
  e6:	d121      	bne.n	12c <assert_param+0x12c>
  e8:	e017      	b.n	11a <assert_param+0x11a>
  ea:	f5b4 3f80 	cmp.w	r4, #65536	; 0x10000
  ee:	bf04      	itt	eq
  f0:	2308      	moveq	r3, #8
  f2:	606b      	streq	r3, [r5, #4]
  f4:	d01a      	beq.n	12c <assert_param+0x12c>
  f6:	f5b4 3f00 	cmp.w	r4, #131072	; 0x20000
  fa:	bf04      	itt	eq
  fc:	2310      	moveq	r3, #16
  fe:	606b      	streq	r3, [r5, #4]
 100:	d014      	beq.n	12c <assert_param+0x12c>
 102:	f5b4 6f80 	cmp.w	r4, #1024	; 0x400
 106:	d111      	bne.n	12c <assert_param+0x12c>
 108:	e00c      	b.n	124 <assert_param+0x124>
 10a:	f04f 0301 	mov.w	r3, #1	; 0x1
 10e:	60ab      	str	r3, [r5, #8]
 110:	e00c      	b.n	12c <assert_param+0x12c>
 112:	f04f 0310 	mov.w	r3, #16	; 0x10
 116:	60eb      	str	r3, [r5, #12]
 118:	e008      	b.n	12c <assert_param+0x12c>
 11a:	69ab      	ldr	r3, [r5, #24]
 11c:	f023 0301 	bic.w	r3, r3, #1	; 0x1
 120:	61ab      	str	r3, [r5, #24]
 122:	e003      	b.n	12c <assert_param+0x12c>
 124:	69ab      	ldr	r3, [r5, #24]
 126:	f023 0304 	bic.w	r3, r3, #4	; 0x4
 12a:	61ab      	str	r3, [r5, #24]
 12c:	bd70      	pop	{r4, r5, r6, pc}
 12e:	46c0      	nop			(mov r8, r8)
Disassembly of section .text.CAN_GetITStatus:

00000000 <CAN_GetITStatus>:
CAN_GetITStatus():
   0:	b570      	push	{r4, r5, r6, lr}
   2:	4605      	mov	r5, r0
   4:	460c      	mov	r4, r1
   6:	f246 4300 	movw	r3, #25600	; 0x6400
   a:	f2c4 0300 	movt	r3, #16384	; 0x4000
   e:	f646 0000 	movw	r0, #26624	; 0x6800
  12:	f2c4 0000 	movt	r0, #16384	; 0x4000
  16:	4285      	cmp	r5, r0
  18:	bf14      	ite	ne
  1a:	2000      	movne	r0, #0
  1c:	2001      	moveq	r0, #1
  1e:	429d      	cmp	r5, r3
  20:	bf08      	it	eq
  22:	f040 0001 	orreq.w	r0, r0, #1	; 0x1
  26:	f7ff fffe 	bl	0 <assert_param>
  2a:	f1a4 0204 	sub.w	r2, r4, #4	; 0x4
  2e:	2c20      	cmp	r4, #32
  30:	bf14      	ite	ne
  32:	2300      	movne	r3, #0
  34:	2301      	moveq	r3, #1
  36:	2a04      	cmp	r2, #4
  38:	bf98      	it	ls
  3a:	f043 0301 	orrls.w	r3, r3, #1	; 0x1
  3e:	bb03      	cbnz	r3, 82 <CAN_GetITStatus+0x82>
  40:	f5b4 7f80 	cmp.w	r4, #256	; 0x100
  44:	bf14      	ite	ne
  46:	2300      	movne	r3, #0
  48:	2301      	moveq	r3, #1
  4a:	2c40      	cmp	r4, #64
  4c:	bf08      	it	eq
  4e:	f043 0301 	orreq.w	r3, r3, #1	; 0x1
  52:	b9b3      	cbnz	r3, 82 <CAN_GetITStatus+0x82>
  54:	f5b4 6f80 	cmp.w	r4, #1024	; 0x400
  58:	bf14      	ite	ne
  5a:	2300      	movne	r3, #0
  5c:	2301      	moveq	r3, #1
  5e:	f5b4 7f00 	cmp.w	r4, #512	; 0x200
  62:	bf08      	it	eq
  64:	f043 0301 	orreq.w	r3, r3, #1	; 0x1
  68:	b95b      	cbnz	r3, 82 <CAN_GetITStatus+0x82>
  6a:	f5b4 3f00 	cmp.w	r4, #131072	; 0x20000
  6e:	bf14      	ite	ne
  70:	2300      	movne	r3, #0
  72:	2301      	moveq	r3, #1
  74:	f5b4 3f80 	cmp.w	r4, #65536	; 0x10000
  78:	bf14      	ite	ne
  7a:	4618      	movne	r0, r3
  7c:	f043 0001 	orreq.w	r0, r3, #1	; 0x1
  80:	e001      	b.n	86 <CAN_GetITStatus+0x86>
  82:	f04f 0001 	mov.w	r0, #1	; 0x1
  86:	f7ff fffe 	bl	0 <assert_param>
  8a:	2c20      	cmp	r4, #32
  8c:	d041      	beq.n	112 <CAN_GetITStatus+0x112>
  8e:	d80c      	bhi.n	aa <CAN_GetITStatus+0xaa>
  90:	2c06      	cmp	r4, #6
  92:	d026      	beq.n	e2 <CAN_GetITStatus+0xe2>
  94:	d804      	bhi.n	a0 <CAN_GetITStatus+0xa0>
  96:	2c04      	cmp	r4, #4
  98:	d02f      	beq.n	fa <CAN_GetITStatus+0xfa>
  9a:	2c05      	cmp	r4, #5
  9c:	d118      	bne.n	d0 <CAN_GetITStatus+0xd0>
  9e:	e01a      	b.n	d6 <CAN_GetITStatus+0xd6>
  a0:	2c07      	cmp	r4, #7
  a2:	d024      	beq.n	ee <CAN_GetITStatus+0xee>
  a4:	2c08      	cmp	r4, #8
  a6:	d113      	bne.n	d0 <CAN_GetITStatus+0xd0>
  a8:	e02d      	b.n	106 <CAN_GetITStatus+0x106>
  aa:	f5b4 7f00 	cmp.w	r4, #512	; 0x200
  ae:	d042      	beq.n	136 <CAN_GetITStatus+0x136>
  b0:	d805      	bhi.n	be <CAN_GetITStatus+0xbe>
  b2:	2c40      	cmp	r4, #64
  b4:	d033      	beq.n	11e <CAN_GetITStatus+0x11e>
  b6:	f5b4 7f80 	cmp.w	r4, #256	; 0x100
  ba:	d109      	bne.n	d0 <CAN_GetITStatus+0xd0>
  bc:	e035      	b.n	12a <CAN_GetITStatus+0x12a>
  be:	f5b4 3f80 	cmp.w	r4, #65536	; 0x10000
  c2:	d04a      	beq.n	15a <CAN_GetITStatus+0x15a>
  c4:	f5b4 3f00 	cmp.w	r4, #131072	; 0x20000
  c8:	d041      	beq.n	14e <CAN_GetITStatus+0x14e>
  ca:	f5b4 6f80 	cmp.w	r4, #1024	; 0x400
  ce:	d038      	beq.n	142 <CAN_GetITStatus+0x142>
  d0:	f04f 0000 	mov.w	r0, #0	; 0x0
  d4:	e046      	b.n	164 <CAN_GetITStatus+0x164>
  d6:	68a8      	ldr	r0, [r5, #8]
  d8:	f04f 0101 	mov.w	r1, #1	; 0x1
  dc:	f7ff fffe 	bl	0 <CAN_GetITStatus>
  e0:	e040      	b.n	164 <CAN_GetITStatus+0x164>
  e2:	68a8      	ldr	r0, [r5, #8]
  e4:	f44f 7180 	mov.w	r1, #256	; 0x100
  e8:	f7ff fffe 	bl	0 <CAN_GetITStatus>
  ec:	e03a      	b.n	164 <CAN_GetITStatus+0x164>
  ee:	68a8      	ldr	r0, [r5, #8]
  f0:	f44f 3180 	mov.w	r1, #65536	; 0x10000
  f4:	f7ff fffe 	bl	0 <CAN_GetITStatus>
  f8:	e034      	b.n	164 <CAN_GetITStatus+0x164>
  fa:	68e8      	ldr	r0, [r5, #12]
  fc:	f04f 0108 	mov.w	r1, #8	; 0x8
 100:	f7ff fffe 	bl	0 <CAN_GetITStatus>
 104:	e02e      	b.n	164 <CAN_GetITStatus+0x164>
 106:	68e8      	ldr	r0, [r5, #12]
 108:	f04f 0110 	mov.w	r1, #16	; 0x10
 10c:	f7ff fffe 	bl	0 <CAN_GetITStatus>
 110:	e028      	b.n	164 <CAN_GetITStatus+0x164>
 112:	6928      	ldr	r0, [r5, #16]
 114:	f04f 0108 	mov.w	r1, #8	; 0x8
 118:	f7ff fffe 	bl	0 <CAN_GetITStatus>
 11c:	e022      	b.n	164 <CAN_GetITStatus+0x164>
 11e:	6928      	ldr	r0, [r5, #16]
 120:	f04f 0110 	mov.w	r1, #16	; 0x10
 124:	f7ff fffe 	bl	0 <CAN_GetITStatus>
 128:	e01c      	b.n	164 <CAN_GetITStatus+0x164>
 12a:	69a8      	ldr	r0, [r5, #24]
 12c:	f04f 0101 	mov.w	r1, #1	; 0x1
 130:	f7ff fffe 	bl	0 <CAN_GetITStatus>
 134:	e016      	b.n	164 <CAN_GetITStatus+0x164>
 136:	69a8      	ldr	r0, [r5, #24]
 138:	f04f 0102 	mov.w	r1, #2	; 0x2
 13c:	f7ff fffe 	bl	0 <CAN_GetITStatus>
 140:	e010      	b.n	164 <CAN_GetITStatus+0x164>
 142:	69a8      	ldr	r0, [r5, #24]
 144:	f04f 0104 	mov.w	r1, #4	; 0x4
 148:	f7ff fffe 	bl	0 <CAN_GetITStatus>
 14c:	e00a      	b.n	164 <CAN_GetITStatus+0x164>
 14e:	6868      	ldr	r0, [r5, #4]
 150:	f04f 0110 	mov.w	r1, #16	; 0x10
 154:	f7ff fffe 	bl	0 <CAN_GetITStatus>
 158:	e004      	b.n	164 <CAN_GetITStatus+0x164>
 15a:	6868      	ldr	r0, [r5, #4]
 15c:	f04f 0108 	mov.w	r1, #8	; 0x8
 160:	f7ff fffe 	bl	0 <CAN_GetITStatus>
 164:	bd70      	pop	{r4, r5, r6, pc}
 166:	46c0      	nop			(mov r8, r8)
Disassembly of section .text.CAN_ClearFlag:

00000000 <CAN_ClearFlag>:
CAN_ClearFlag():
   0:	b570      	push	{r4, r5, r6, lr}
   2:	4605      	mov	r5, r0
   4:	460c      	mov	r4, r1
   6:	f246 4300 	movw	r3, #25600	; 0x6400
   a:	f2c4 0300 	movt	r3, #16384	; 0x4000
   e:	f646 0000 	movw	r0, #26624	; 0x6800
  12:	f2c4 0000 	movt	r0, #16384	; 0x4000
  16:	4285      	cmp	r5, r0
  18:	bf14      	ite	ne
  1a:	2000      	movne	r0, #0
  1c:	2001      	moveq	r0, #1
  1e:	429d      	cmp	r5, r3
  20:	bf08      	it	eq
  22:	f040 0001 	orreq.w	r0, r0, #1	; 0x1
  26:	f7ff fffe 	bl	0 <assert_param>
  2a:	f104 33ff 	add.w	r3, r4, #4294967295	; 0xffffffff
  2e:	2c04      	cmp	r4, #4
  30:	bf14      	ite	ne
  32:	2000      	movne	r0, #0
  34:	2001      	moveq	r0, #1
  36:	2b01      	cmp	r3, #1
  38:	bf98      	it	ls
  3a:	f040 0001 	orrls.w	r0, r0, #1	; 0x1
  3e:	f7ff fffe 	bl	0 <assert_param>
  42:	69ab      	ldr	r3, [r5, #24]
  44:	ea6f 0404 	mvn.w	r4, r4
  48:	ea04 0403 	and.w	r4, r4, r3
  4c:	61ac      	str	r4, [r5, #24]
  4e:	bd70      	pop	{r4, r5, r6, pc}
Disassembly of section .text.CAN_GetFlagStatus:

00000000 <CAN_GetFlagStatus>:
CAN_GetFlagStatus():
   0:	b570      	push	{r4, r5, r6, lr}
   2:	4604      	mov	r4, r0
   4:	460d      	mov	r5, r1
   6:	f246 4300 	movw	r3, #25600	; 0x6400
   a:	f2c4 0300 	movt	r3, #16384	; 0x4000
   e:	f646 0000 	movw	r0, #26624	; 0x6800
  12:	f2c4 0000 	movt	r0, #16384	; 0x4000
  16:	4284      	cmp	r4, r0
  18:	bf14      	ite	ne
  1a:	2000      	movne	r0, #0
  1c:	2001      	moveq	r0, #1
  1e:	429c      	cmp	r4, r3
  20:	bf08      	it	eq
  22:	f040 0001 	orreq.w	r0, r0, #1	; 0x1
  26:	f7ff fffe 	bl	0 <assert_param>
  2a:	f105 33ff 	add.w	r3, r5, #4294967295	; 0xffffffff
  2e:	2d04      	cmp	r5, #4
  30:	bf14      	ite	ne
  32:	2000      	movne	r0, #0
  34:	2001      	moveq	r0, #1
  36:	2b01      	cmp	r3, #1
  38:	bf98      	it	ls
  3a:	f040 0001 	orrls.w	r0, r0, #1	; 0x1
  3e:	f7ff fffe 	bl	0 <assert_param>
  42:	69a3      	ldr	r3, [r4, #24]
  44:	421d      	tst	r5, r3
  46:	bf0c      	ite	eq
  48:	2000      	moveq	r0, #0
  4a:	2001      	movne	r0, #1
  4c:	bd70      	pop	{r4, r5, r6, pc}
  4e:	46c0      	nop			(mov r8, r8)
Disassembly of section .text.CAN_WakeUp:

00000000 <CAN_WakeUp>:
CAN_WakeUp():
   0:	b510      	push	{r4, lr}
   2:	4604      	mov	r4, r0
   4:	f246 4300 	movw	r3, #25600	; 0x6400
   8:	f2c4 0300 	movt	r3, #16384	; 0x4000
   c:	f646 0000 	movw	r0, #26624	; 0x6800
  10:	f2c4 0000 	movt	r0, #16384	; 0x4000
  14:	4284      	cmp	r4, r0
  16:	bf14      	ite	ne
  18:	2000      	movne	r0, #0
  1a:	2001      	moveq	r0, #1
  1c:	429c      	cmp	r4, r3
  1e:	bf08      	it	eq
  20:	f040 0001 	orreq.w	r0, r0, #1	; 0x1
  24:	f7ff fffe 	bl	0 <assert_param>
  28:	6823      	ldr	r3, [r4, #0]
  2a:	f023 0302 	bic.w	r3, r3, #2	; 0x2
  2e:	6023      	str	r3, [r4, #0]
  30:	6863      	ldr	r3, [r4, #4]
  32:	f013 0f02 	tst.w	r3, #2	; 0x2
  36:	d008      	beq.n	4a <assert_param+0x4a>
  38:	f64f 72ff 	movw	r2, #65535	; 0xffff
  3c:	6863      	ldr	r3, [r4, #4]
  3e:	f013 0f02 	tst.w	r3, #2	; 0x2
  42:	d002      	beq.n	4a <assert_param+0x4a>
  44:	f112 32ff 	adds.w	r2, r2, #4294967295	; 0xffffffff
  48:	d1f8      	bne.n	3c <assert_param+0x3c>
  4a:	6860      	ldr	r0, [r4, #4]
  4c:	ea4f 0050 	mov.w	r0, r0, lsr #1
  50:	f080 0001 	eor.w	r0, r0, #1	; 0x1
  54:	f000 0001 	and.w	r0, r0, #1	; 0x1
  58:	bd10      	pop	{r4, pc}
  5a:	46c0      	nop			(mov r8, r8)
Disassembly of section .text.CAN_Sleep:

00000000 <CAN_Sleep>:
CAN_Sleep():
   0:	b510      	push	{r4, lr}
   2:	4604      	mov	r4, r0
   4:	f246 4300 	movw	r3, #25600	; 0x6400
   8:	f2c4 0300 	movt	r3, #16384	; 0x4000
   c:	f646 0000 	movw	r0, #26624	; 0x6800
  10:	f2c4 0000 	movt	r0, #16384	; 0x4000
  14:	4284      	cmp	r4, r0
  16:	bf14      	ite	ne
  18:	2000      	movne	r0, #0
  1a:	2001      	moveq	r0, #1
  1c:	429c      	cmp	r4, r3
  1e:	bf08      	it	eq
  20:	f040 0001 	orreq.w	r0, r0, #1	; 0x1
  24:	f7ff fffe 	bl	0 <assert_param>
  28:	6823      	ldr	r3, [r4, #0]
  2a:	f023 0303 	bic.w	r3, r3, #3	; 0x3
  2e:	f043 0302 	orr.w	r3, r3, #2	; 0x2
  32:	6023      	str	r3, [r4, #0]
  34:	6860      	ldr	r0, [r4, #4]
  36:	f000 0003 	and.w	r0, r0, #3	; 0x3
  3a:	2802      	cmp	r0, #2
  3c:	bf14      	ite	ne
  3e:	2000      	movne	r0, #0
  40:	2001      	moveq	r0, #1
  42:	bd10      	pop	{r4, pc}
Disassembly of section .text.CAN_DBGFreeze:

00000000 <CAN_DBGFreeze>:
CAN_DBGFreeze():
   0:	b570      	push	{r4, r5, r6, lr}
   2:	4605      	mov	r5, r0
   4:	460c      	mov	r4, r1
   6:	f246 4300 	movw	r3, #25600	; 0x6400
   a:	f2c4 0300 	movt	r3, #16384	; 0x4000
   e:	f646 0000 	movw	r0, #26624	; 0x6800
  12:	f2c4 0000 	movt	r0, #16384	; 0x4000
  16:	4285      	cmp	r5, r0
  18:	bf14      	ite	ne
  1a:	2000      	movne	r0, #0
  1c:	2001      	moveq	r0, #1
  1e:	429d      	cmp	r5, r3
  20:	bf08      	it	eq
  22:	f040 0001 	orreq.w	r0, r0, #1	; 0x1
  26:	f7ff fffe 	bl	0 <assert_param>
  2a:	2c01      	cmp	r4, #1
  2c:	bf8c      	ite	hi
  2e:	2000      	movhi	r0, #0
  30:	2001      	movls	r0, #1
  32:	f7ff fffe 	bl	0 <assert_param>
  36:	b124      	cbz	r4, 42 <assert_param+0x42>
  38:	682b      	ldr	r3, [r5, #0]
  3a:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
  3e:	602b      	str	r3, [r5, #0]
  40:	e003      	b.n	4a <assert_param+0x4a>
  42:	682b      	ldr	r3, [r5, #0]
  44:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
  48:	602b      	str	r3, [r5, #0]
  4a:	bd70      	pop	{r4, r5, r6, pc}
Disassembly of section .text.CAN_MessagePending:

00000000 <CAN_MessagePending>:
CAN_MessagePending():
   0:	b570      	push	{r4, r5, r6, lr}
   2:	4605      	mov	r5, r0
   4:	460c      	mov	r4, r1
   6:	f246 4300 	movw	r3, #25600	; 0x6400
   a:	f2c4 0300 	movt	r3, #16384	; 0x4000
   e:	f646 0000 	movw	r0, #26624	; 0x6800
  12:	f2c4 0000 	movt	r0, #16384	; 0x4000
  16:	4285      	cmp	r5, r0
  18:	bf14      	ite	ne
  1a:	2000      	movne	r0, #0
  1c:	2001      	moveq	r0, #1
  1e:	429d      	cmp	r5, r3
  20:	bf08      	it	eq
  22:	f040 0001 	orreq.w	r0, r0, #1	; 0x1
  26:	f7ff fffe 	bl	0 <assert_param>
  2a:	2c01      	cmp	r4, #1
  2c:	bf8c      	ite	hi
  2e:	2000      	movhi	r0, #0
  30:	2001      	movls	r0, #1
  32:	f7ff fffe 	bl	0 <assert_param>
  36:	b91c      	cbnz	r4, 40 <assert_param+0x40>
  38:	68eb      	ldr	r3, [r5, #12]
  3a:	f003 0003 	and.w	r0, r3, #3	; 0x3
  3e:	e005      	b.n	4c <assert_param+0x4c>
  40:	2c01      	cmp	r4, #1
  42:	bf12      	itee	ne
  44:	2000      	movne	r0, #0
  46:	692b      	ldreq	r3, [r5, #16]
  48:	f003 0003 	andeq.w	r0, r3, #3	; 0x3
  4c:	bd70      	pop	{r4, r5, r6, pc}
  4e:	46c0      	nop			(mov r8, r8)
Disassembly of section .text.CAN_FIFORelease:

00000000 <CAN_FIFORelease>:
CAN_FIFORelease():
   0:	b570      	push	{r4, r5, r6, lr}
   2:	4605      	mov	r5, r0
   4:	460c      	mov	r4, r1
   6:	f246 4300 	movw	r3, #25600	; 0x6400
   a:	f2c4 0300 	movt	r3, #16384	; 0x4000
   e:	f646 0000 	movw	r0, #26624	; 0x6800
  12:	f2c4 0000 	movt	r0, #16384	; 0x4000
  16:	4285      	cmp	r5, r0
  18:	bf14      	ite	ne
  1a:	2000      	movne	r0, #0
  1c:	2001      	moveq	r0, #1
  1e:	429d      	cmp	r5, r3
  20:	bf08      	it	eq
  22:	f040 0001 	orreq.w	r0, r0, #1	; 0x1
  26:	f7ff fffe 	bl	0 <assert_param>
  2a:	2c01      	cmp	r4, #1
  2c:	bf8c      	ite	hi
  2e:	2000      	movhi	r0, #0
  30:	2001      	movls	r0, #1
  32:	f7ff fffe 	bl	0 <assert_param>
  36:	b91c      	cbnz	r4, 40 <assert_param+0x40>
  38:	f04f 0320 	mov.w	r3, #32	; 0x20
  3c:	60eb      	str	r3, [r5, #12]
  3e:	e002      	b.n	46 <assert_param+0x46>
  40:	f04f 0320 	mov.w	r3, #32	; 0x20
  44:	612b      	str	r3, [r5, #16]
  46:	bd70      	pop	{r4, r5, r6, pc}
Disassembly of section .text.CAN_Receive:

00000000 <CAN_Receive>:
CAN_Receive():
   0:	b570      	push	{r4, r5, r6, lr}
   2:	4605      	mov	r5, r0
   4:	460e      	mov	r6, r1
   6:	4614      	mov	r4, r2
   8:	f246 4300 	movw	r3, #25600	; 0x6400
   c:	f2c4 0300 	movt	r3, #16384	; 0x4000
  10:	f646 0000 	movw	r0, #26624	; 0x6800
  14:	f2c4 0000 	movt	r0, #16384	; 0x4000
  18:	4285      	cmp	r5, r0
  1a:	bf14      	ite	ne
  1c:	2000      	movne	r0, #0
  1e:	2001      	moveq	r0, #1
  20:	429d      	cmp	r5, r3
  22:	bf08      	it	eq
  24:	f040 0001 	orreq.w	r0, r0, #1	; 0x1
  28:	f7ff fffe 	bl	0 <assert_param>
  2c:	2e01      	cmp	r6, #1
  2e:	bf8c      	ite	hi
  30:	2000      	movhi	r0, #0
  32:	2001      	movls	r0, #1
  34:	f7ff fffe 	bl	0 <assert_param>
  38:	4631      	mov	r1, r6
  3a:	f106 031b 	add.w	r3, r6, #27	; 0x1b
  3e:	ea4f 1303 	mov.w	r3, r3, lsl #4
  42:	442b      	add	r3, r5
  44:	681b      	ldr	r3, [r3, #0]
  46:	f003 0304 	and.w	r3, r3, #4	; 0x4
  4a:	7223      	strb	r3, [r4, #8]
  4c:	b94b      	cbnz	r3, 62 <CAN_Receive+0x62>
  4e:	f106 031b 	add.w	r3, r6, #27	; 0x1b
  52:	ea4f 1303 	mov.w	r3, r3, lsl #4
  56:	442b      	add	r3, r5
  58:	681b      	ldr	r3, [r3, #0]
  5a:	ea4f 5353 	mov.w	r3, r3, lsr #21
  5e:	6023      	str	r3, [r4, #0]
  60:	e008      	b.n	74 <CAN_Receive+0x74>
  62:	f106 031b 	add.w	r3, r6, #27	; 0x1b
  66:	ea4f 1303 	mov.w	r3, r3, lsl #4
  6a:	442b      	add	r3, r5
  6c:	681b      	ldr	r3, [r3, #0]
  6e:	ea4f 03d3 	mov.w	r3, r3, lsr #3
  72:	6063      	str	r3, [r4, #4]
  74:	f101 021b 	add.w	r2, r1, #27	; 0x1b
  78:	ea4f 1202 	mov.w	r2, r2, lsl #4
  7c:	442a      	add	r2, r5
  7e:	6813      	ldr	r3, [r2, #0]
  80:	f003 0302 	and.w	r3, r3, #2	; 0x2
  84:	7263      	strb	r3, [r4, #9]
  86:	f852 3f04 	ldr.w	r3, [r2, #4]!
  8a:	f003 030f 	and.w	r3, r3, #15	; 0xf
  8e:	72a3      	strb	r3, [r4, #10]
  90:	6813      	ldr	r3, [r2, #0]
  92:	ea4f 2313 	mov.w	r3, r3, lsr #8
  96:	74e3      	strb	r3, [r4, #19]
  98:	ea4f 1201 	mov.w	r2, r1, lsl #4
  9c:	442a      	add	r2, r5
  9e:	f502 71dc 	add.w	r1, r2, #440	; 0x1b8
  a2:	680b      	ldr	r3, [r1, #0]
  a4:	72e3      	strb	r3, [r4, #11]
  a6:	680b      	ldr	r3, [r1, #0]
  a8:	ea4f 2313 	mov.w	r3, r3, lsr #8
  ac:	7323      	strb	r3, [r4, #12]
  ae:	680b      	ldr	r3, [r1, #0]
  b0:	ea4f 4313 	mov.w	r3, r3, lsr #16
  b4:	7363      	strb	r3, [r4, #13]
  b6:	680b      	ldr	r3, [r1, #0]
  b8:	ea4f 6313 	mov.w	r3, r3, lsr #24
  bc:	73a3      	strb	r3, [r4, #14]
  be:	f502 72de 	add.w	r2, r2, #444	; 0x1bc
  c2:	6813      	ldr	r3, [r2, #0]
  c4:	73e3      	strb	r3, [r4, #15]
  c6:	6813      	ldr	r3, [r2, #0]
  c8:	ea4f 2313 	mov.w	r3, r3, lsr #8
  cc:	7423      	strb	r3, [r4, #16]
  ce:	6813      	ldr	r3, [r2, #0]
  d0:	ea4f 4313 	mov.w	r3, r3, lsr #16
  d4:	7463      	strb	r3, [r4, #17]
  d6:	6813      	ldr	r3, [r2, #0]
  d8:	ea4f 6313 	mov.w	r3, r3, lsr #24
  dc:	74a3      	strb	r3, [r4, #18]
  de:	4628      	mov	r0, r5
  e0:	4631      	mov	r1, r6
  e2:	f7ff fffe 	bl	0 <CAN_Receive>
  e6:	bd70      	pop	{r4, r5, r6, pc}
Disassembly of section .text.CAN_CancelTransmit:

00000000 <CAN_CancelTransmit>:
CAN_CancelTransmit():
   0:	b570      	push	{r4, r5, r6, lr}
   2:	4605      	mov	r5, r0
   4:	460c      	mov	r4, r1
   6:	f246 4300 	movw	r3, #25600	; 0x6400
   a:	f2c4 0300 	movt	r3, #16384	; 0x4000
   e:	f646 0000 	movw	r0, #26624	; 0x6800
  12:	f2c4 0000 	movt	r0, #16384	; 0x4000
  16:	4285      	cmp	r5, r0
  18:	bf14      	ite	ne
  1a:	2000      	movne	r0, #0
  1c:	2001      	moveq	r0, #1
  1e:	429d      	cmp	r5, r3
  20:	bf08      	it	eq
  22:	f040 0001 	orreq.w	r0, r0, #1	; 0x1
  26:	f7ff fffe 	bl	0 <assert_param>
  2a:	2c02      	cmp	r4, #2
  2c:	bf8c      	ite	hi
  2e:	2000      	movhi	r0, #0
  30:	2001      	movls	r0, #1
  32:	f7ff fffe 	bl	0 <assert_param>
  36:	2c01      	cmp	r4, #1
  38:	bf02      	ittt	eq
  3a:	68ab      	ldreq	r3, [r5, #8]
  3c:	f443 4300 	orreq.w	r3, r3, #32768	; 0x8000
  40:	60ab      	streq	r3, [r5, #8]
  42:	d00c      	beq.n	5e <assert_param+0x5e>
  44:	b114      	cbz	r4, 4c <assert_param+0x4c>
  46:	2c02      	cmp	r4, #2
  48:	d109      	bne.n	5e <assert_param+0x5e>
  4a:	e004      	b.n	56 <assert_param+0x56>
  4c:	68ab      	ldr	r3, [r5, #8]
  4e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  52:	60ab      	str	r3, [r5, #8]
  54:	e003      	b.n	5e <assert_param+0x5e>
  56:	68ab      	ldr	r3, [r5, #8]
  58:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
  5c:	60ab      	str	r3, [r5, #8]
  5e:	bd70      	pop	{r4, r5, r6, pc}
Disassembly of section .text.CAN_TransmitStatus:

00000000 <CAN_TransmitStatus>:
CAN_TransmitStatus():
   0:	b570      	push	{r4, r5, r6, lr}
   2:	4605      	mov	r5, r0
   4:	460c      	mov	r4, r1
   6:	f246 4300 	movw	r3, #25600	; 0x6400
   a:	f2c4 0300 	movt	r3, #16384	; 0x4000
   e:	f646 0000 	movw	r0, #26624	; 0x6800
  12:	f2c4 0000 	movt	r0, #16384	; 0x4000
  16:	4285      	cmp	r5, r0
  18:	bf14      	ite	ne
  1a:	2000      	movne	r0, #0
  1c:	2001      	moveq	r0, #1
  1e:	429d      	cmp	r5, r3
  20:	bf08      	it	eq
  22:	f040 0001 	orreq.w	r0, r0, #1	; 0x1
  26:	f7ff fffe 	bl	0 <assert_param>
  2a:	2c02      	cmp	r4, #2
  2c:	bf8c      	ite	hi
  2e:	2000      	movhi	r0, #0
  30:	2001      	movls	r0, #1
  32:	f7ff fffe 	bl	0 <assert_param>
  36:	2c01      	cmp	r4, #1
  38:	d014      	beq.n	64 <assert_param+0x64>
  3a:	b124      	cbz	r4, 46 <assert_param+0x46>
  3c:	2c02      	cmp	r4, #2
  3e:	bf18      	it	ne
  40:	2000      	movne	r0, #0
  42:	d130      	bne.n	a6 <assert_param+0xa6>
  44:	e01f      	b.n	86 <assert_param+0x86>
  46:	68ab      	ldr	r3, [r5, #8]
  48:	68aa      	ldr	r2, [r5, #8]
  4a:	f003 0301 	and.w	r3, r3, #1	; 0x1
  4e:	f002 0202 	and.w	r2, r2, #2	; 0x2
  52:	ea42 0283 	orr.w	r2, r2, r3, lsl #2
  56:	b2d2      	uxtb	r2, r2
  58:	68ab      	ldr	r3, [r5, #8]
  5a:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
  5e:	ea42 6093 	orr.w	r0, r2, r3, lsr #26
  62:	e020      	b.n	a6 <assert_param+0xa6>
  64:	68ab      	ldr	r3, [r5, #8]
  66:	68aa      	ldr	r2, [r5, #8]
  68:	68a9      	ldr	r1, [r5, #8]
  6a:	f402 7200 	and.w	r2, r2, #512	; 0x200
  6e:	f403 7380 	and.w	r3, r3, #256	; 0x100
  72:	ea4f 1393 	mov.w	r3, r3, lsr #6
  76:	ea43 2312 	orr.w	r3, r3, r2, lsr #8
  7a:	b2db      	uxtb	r3, r3
  7c:	f001 6100 	and.w	r1, r1, #134217728	; 0x8000000
  80:	ea43 60d1 	orr.w	r0, r3, r1, lsr #27
  84:	e00f      	b.n	a6 <assert_param+0xa6>
  86:	68ab      	ldr	r3, [r5, #8]
  88:	68aa      	ldr	r2, [r5, #8]
  8a:	68a9      	ldr	r1, [r5, #8]
  8c:	f402 3200 	and.w	r2, r2, #131072	; 0x20000
  90:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
  94:	ea4f 3393 	mov.w	r3, r3, lsr #14
  98:	ea43 4312 	orr.w	r3, r3, r2, lsr #16
  9c:	b2db      	uxtb	r3, r3
  9e:	f001 5180 	and.w	r1, r1, #268435456	; 0x10000000
  a2:	ea43 7011 	orr.w	r0, r3, r1, lsr #28
  a6:	b120      	cbz	r0, b2 <assert_param+0xb2>
  a8:	2807      	cmp	r0, #7
  aa:	bf14      	ite	ne
  ac:	2000      	movne	r0, #0
  ae:	2001      	moveq	r0, #1
  b0:	e001      	b.n	b6 <assert_param+0xb6>
  b2:	f04f 0002 	mov.w	r0, #2	; 0x2
  b6:	bd70      	pop	{r4, r5, r6, pc}
Disassembly of section .text.CAN_Transmit:

00000000 <CAN_Transmit>:
CAN_Transmit():
   0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   4:	4605      	mov	r5, r0
   6:	460c      	mov	r4, r1
   8:	f246 4300 	movw	r3, #25600	; 0x6400
   c:	f2c4 0300 	movt	r3, #16384	; 0x4000
  10:	f646 0000 	movw	r0, #26624	; 0x6800
  14:	f2c4 0000 	movt	r0, #16384	; 0x4000
  18:	4285      	cmp	r5, r0
  1a:	bf14      	ite	ne
  1c:	2000      	movne	r0, #0
  1e:	2001      	moveq	r0, #1
  20:	429d      	cmp	r5, r3
  22:	bf08      	it	eq
  24:	f040 0001 	orreq.w	r0, r0, #1	; 0x1
  28:	f7ff fffe 	bl	0 <assert_param>
  2c:	7a23      	ldrb	r3, [r4, #8]
  2e:	2b04      	cmp	r3, #4
  30:	bf14      	ite	ne
  32:	2000      	movne	r0, #0
  34:	2001      	moveq	r0, #1
  36:	2b00      	cmp	r3, #0
  38:	bf08      	it	eq
  3a:	f040 0001 	orreq.w	r0, r0, #1	; 0x1
  3e:	f7ff fffe 	bl	0 <assert_param>
  42:	7a63      	ldrb	r3, [r4, #9]
  44:	2b02      	cmp	r3, #2
  46:	bf14      	ite	ne
  48:	2000      	movne	r0, #0
  4a:	2001      	moveq	r0, #1
  4c:	2b00      	cmp	r3, #0
  4e:	bf08      	it	eq
  50:	f040 0001 	orreq.w	r0, r0, #1	; 0x1
  54:	f7ff fffe 	bl	0 <assert_param>
  58:	7aa0      	ldrb	r0, [r4, #10]
  5a:	2808      	cmp	r0, #8
  5c:	bf8c      	ite	hi
  5e:	2000      	movhi	r0, #0
  60:	2001      	movls	r0, #1
  62:	f7ff fffe 	bl	0 <assert_param>
  66:	68ab      	ldr	r3, [r5, #8]
  68:	f013 6f80 	tst.w	r3, #67108864	; 0x4000000
  6c:	bf18      	it	ne
  6e:	2700      	movne	r7, #0
  70:	d10d      	bne.n	8e <CAN_Transmit+0x8e>
  72:	68ab      	ldr	r3, [r5, #8]
  74:	f013 6f00 	tst.w	r3, #134217728	; 0x8000000
  78:	bf18      	it	ne
  7a:	2701      	movne	r7, #1
  7c:	d107      	bne.n	8e <CAN_Transmit+0x8e>
  7e:	68ab      	ldr	r3, [r5, #8]
  80:	f013 5f80 	tst.w	r3, #268435456	; 0x10000000
  84:	bf08      	it	eq
  86:	2704      	moveq	r7, #4
  88:	d074      	beq.n	174 <CAN_Transmit+0x174>
  8a:	f04f 0702 	mov.w	r7, #2	; 0x2
  8e:	463e      	mov	r6, r7
  90:	f107 0318 	add.w	r3, r7, #24	; 0x18
  94:	ea4f 1303 	mov.w	r3, r3, lsl #4
  98:	442b      	add	r3, r5
  9a:	681a      	ldr	r2, [r3, #0]
  9c:	f002 0201 	and.w	r2, r2, #1	; 0x1
  a0:	601a      	str	r2, [r3, #0]
  a2:	7a23      	ldrb	r3, [r4, #8]
  a4:	b9ab      	cbnz	r3, d2 <CAN_Transmit+0xd2>
  a6:	6820      	ldr	r0, [r4, #0]
  a8:	f5b0 6f00 	cmp.w	r0, #2048	; 0x800
  ac:	bf2c      	ite	cs
  ae:	2000      	movcs	r0, #0
  b0:	2001      	movcc	r0, #1
  b2:	f7ff fffe 	bl	0 <assert_param>
  b6:	f107 0218 	add.w	r2, r7, #24	; 0x18
  ba:	ea4f 1202 	mov.w	r2, r2, lsl #4
  be:	442a      	add	r2, r5
  c0:	6810      	ldr	r0, [r2, #0]
  c2:	6821      	ldr	r1, [r4, #0]
  c4:	7a63      	ldrb	r3, [r4, #9]
  c6:	ea43 5341 	orr.w	r3, r3, r1, lsl #21
  ca:	ea43 0300 	orr.w	r3, r3, r0
  ce:	6013      	str	r3, [r2, #0]
  d0:	e017      	b.n	102 <CAN_Transmit+0x102>
  d2:	6860      	ldr	r0, [r4, #4]
  d4:	f1b0 5f00 	cmp.w	r0, #536870912	; 0x20000000
  d8:	bf2c      	ite	cs
  da:	2000      	movcs	r0, #0
  dc:	2001      	movcc	r0, #1
  de:	f7ff fffe 	bl	0 <assert_param>
  e2:	f107 0118 	add.w	r1, r7, #24	; 0x18
  e6:	ea4f 1101 	mov.w	r1, r1, lsl #4
  ea:	4429      	add	r1, r5
  ec:	6808      	ldr	r0, [r1, #0]
  ee:	6862      	ldr	r2, [r4, #4]
  f0:	7a23      	ldrb	r3, [r4, #8]
  f2:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
  f6:	ea43 0300 	orr.w	r3, r3, r0
  fa:	7a62      	ldrb	r2, [r4, #9]
  fc:	ea43 0302 	orr.w	r3, r3, r2
 100:	600b      	str	r3, [r1, #0]
 102:	7aa3      	ldrb	r3, [r4, #10]
 104:	f003 030f 	and.w	r3, r3, #15	; 0xf
 108:	72a3      	strb	r3, [r4, #10]
 10a:	f106 0018 	add.w	r0, r6, #24	; 0x18
 10e:	ea4f 1000 	mov.w	r0, r0, lsl #4
 112:	4428      	add	r0, r5
 114:	4602      	mov	r2, r0
 116:	f852 3f04 	ldr.w	r3, [r2, #4]!
 11a:	f023 030f 	bic.w	r3, r3, #15	; 0xf
 11e:	6013      	str	r3, [r2, #0]
 120:	6811      	ldr	r1, [r2, #0]
 122:	7aa3      	ldrb	r3, [r4, #10]
 124:	ea43 0301 	orr.w	r3, r3, r1
 128:	6013      	str	r3, [r2, #0]
 12a:	7ba2      	ldrb	r2, [r4, #14]
 12c:	7b63      	ldrb	r3, [r4, #13]
 12e:	ea4f 4303 	mov.w	r3, r3, lsl #16
 132:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 136:	7ae2      	ldrb	r2, [r4, #11]
 138:	ea43 0302 	orr.w	r3, r3, r2
 13c:	7b22      	ldrb	r2, [r4, #12]
 13e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 142:	ea4f 1106 	mov.w	r1, r6, lsl #4
 146:	4429      	add	r1, r5
 148:	f501 72c4 	add.w	r2, r1, #392	; 0x188
 14c:	6013      	str	r3, [r2, #0]
 14e:	7ca2      	ldrb	r2, [r4, #18]
 150:	7c63      	ldrb	r3, [r4, #17]
 152:	ea4f 4303 	mov.w	r3, r3, lsl #16
 156:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 15a:	7be2      	ldrb	r2, [r4, #15]
 15c:	ea43 0302 	orr.w	r3, r3, r2
 160:	7c22      	ldrb	r2, [r4, #16]
 162:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 166:	f501 71c6 	add.w	r1, r1, #396	; 0x18c
 16a:	600b      	str	r3, [r1, #0]
 16c:	6803      	ldr	r3, [r0, #0]
 16e:	f043 0301 	orr.w	r3, r3, #1	; 0x1
 172:	6003      	str	r3, [r0, #0]
 174:	4638      	mov	r0, r7
 176:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 17a:	46c0      	nop			(mov r8, r8)
Disassembly of section .text.CAN_ITConfig:

00000000 <CAN_ITConfig>:
CAN_ITConfig():
   0:	b570      	push	{r4, r5, r6, lr}
   2:	4605      	mov	r5, r0
   4:	460c      	mov	r4, r1
   6:	4616      	mov	r6, r2
   8:	f246 4300 	movw	r3, #25600	; 0x6400
   c:	f2c4 0300 	movt	r3, #16384	; 0x4000
  10:	f646 0000 	movw	r0, #26624	; 0x6800
  14:	f2c4 0000 	movt	r0, #16384	; 0x4000
  18:	4285      	cmp	r5, r0
  1a:	bf14      	ite	ne
  1c:	2000      	movne	r0, #0
  1e:	2001      	moveq	r0, #1
  20:	429d      	cmp	r5, r3
  22:	bf08      	it	eq
  24:	f040 0001 	orreq.w	r0, r0, #1	; 0x1
  28:	f7ff fffe 	bl	0 <assert_param>
  2c:	f104 32ff 	add.w	r2, r4, #4294967295	; 0xffffffff
  30:	2c04      	cmp	r4, #4
  32:	bf14      	ite	ne
  34:	2300      	movne	r3, #0
  36:	2301      	moveq	r3, #1
  38:	2a01      	cmp	r2, #1
  3a:	bf98      	it	ls
  3c:	f043 0301 	orrls.w	r3, r3, #1	; 0x1
  40:	2b00      	cmp	r3, #0
  42:	d139      	bne.n	b8 <CAN_ITConfig+0xb8>
  44:	2c10      	cmp	r4, #16
  46:	bf14      	ite	ne
  48:	2300      	movne	r3, #0
  4a:	2301      	moveq	r3, #1
  4c:	2c08      	cmp	r4, #8
  4e:	bf08      	it	eq
  50:	f043 0301 	orreq.w	r3, r3, #1	; 0x1
  54:	2b00      	cmp	r3, #0
  56:	d12f      	bne.n	b8 <CAN_ITConfig+0xb8>
  58:	2c40      	cmp	r4, #64
  5a:	bf14      	ite	ne
  5c:	2300      	movne	r3, #0
  5e:	2301      	moveq	r3, #1
  60:	2c20      	cmp	r4, #32
  62:	bf08      	it	eq
  64:	f043 0301 	orreq.w	r3, r3, #1	; 0x1
  68:	bb33      	cbnz	r3, b8 <CAN_ITConfig+0xb8>
  6a:	f5b4 7f00 	cmp.w	r4, #512	; 0x200
  6e:	bf14      	ite	ne
  70:	2300      	movne	r3, #0
  72:	2301      	moveq	r3, #1
  74:	f5b4 7f80 	cmp.w	r4, #256	; 0x100
  78:	bf08      	it	eq
  7a:	f043 0301 	orreq.w	r3, r3, #1	; 0x1
  7e:	b9db      	cbnz	r3, b8 <CAN_ITConfig+0xb8>
  80:	f5b4 6f00 	cmp.w	r4, #2048	; 0x800
  84:	bf14      	ite	ne
  86:	2300      	movne	r3, #0
  88:	2301      	moveq	r3, #1
  8a:	f5b4 6f80 	cmp.w	r4, #1024	; 0x400
  8e:	bf08      	it	eq
  90:	f043 0301 	orreq.w	r3, r3, #1	; 0x1
  94:	b983      	cbnz	r3, b8 <CAN_ITConfig+0xb8>
  96:	f5b4 3f80 	cmp.w	r4, #65536	; 0x10000
  9a:	bf14      	ite	ne
  9c:	2300      	movne	r3, #0
  9e:	2301      	moveq	r3, #1
  a0:	f5b4 4f00 	cmp.w	r4, #32768	; 0x8000
  a4:	bf08      	it	eq
  a6:	f043 0301 	orreq.w	r3, r3, #1	; 0x1
  aa:	b92b      	cbnz	r3, b8 <CAN_ITConfig+0xb8>
  ac:	f5b4 3f00 	cmp.w	r4, #131072	; 0x20000
  b0:	bf14      	ite	ne
  b2:	2000      	movne	r0, #0
  b4:	2001      	moveq	r0, #1
  b6:	e001      	b.n	bc <CAN_ITConfig+0xbc>
  b8:	f04f 0001 	mov.w	r0, #1	; 0x1
  bc:	f7ff fffe 	bl	0 <assert_param>
  c0:	2e01      	cmp	r6, #1
  c2:	bf8c      	ite	hi
  c4:	2000      	movhi	r0, #0
  c6:	2001      	movls	r0, #1
  c8:	f7ff fffe 	bl	0 <assert_param>
  cc:	b126      	cbz	r6, d8 <assert_param+0xd8>
  ce:	696b      	ldr	r3, [r5, #20]
  d0:	ea44 0303 	orr.w	r3, r4, r3
  d4:	616b      	str	r3, [r5, #20]
  d6:	e005      	b.n	e4 <assert_param+0xe4>
  d8:	696a      	ldr	r2, [r5, #20]
  da:	ea6f 0304 	mvn.w	r3, r4
  de:	ea03 0302 	and.w	r3, r3, r2
  e2:	616b      	str	r3, [r5, #20]
  e4:	bd70      	pop	{r4, r5, r6, pc}
  e6:	46c0      	nop			(mov r8, r8)
Disassembly of section .text.CAN_SlaveStartBank:

00000000 <CAN_SlaveStartBank>:
CAN_SlaveStartBank():
   0:	b510      	push	{r4, lr}
   2:	4604      	mov	r4, r0
   4:	f100 30ff 	add.w	r0, r0, #4294967295	; 0xffffffff
   8:	b2c0      	uxtb	r0, r0
   a:	281a      	cmp	r0, #26
   c:	bf8c      	ite	hi
   e:	2000      	movhi	r0, #0
  10:	2001      	movls	r0, #1
  12:	f7ff fffe 	bl	0 <assert_param>
  16:	f246 4200 	movw	r2, #25600	; 0x6400
  1a:	f2c4 0200 	movt	r2, #16384	; 0x4000
  1e:	f8d2 3200 	ldr.w	r3, [r2, #512]
  22:	f043 0301 	orr.w	r3, r3, #1	; 0x1
  26:	f8c2 3200 	str.w	r3, [r2, #512]
  2a:	f8d2 1200 	ldr.w	r1, [r2, #512]
  2e:	f24c 03f1 	movw	r3, #49393	; 0xc0f1
  32:	f6cf 73ff 	movt	r3, #65535	; 0xffff
  36:	ea01 0103 	and.w	r1, r1, r3
  3a:	f8c2 1200 	str.w	r1, [r2, #512]
  3e:	f8d2 3200 	ldr.w	r3, [r2, #512]
  42:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
  46:	f8c2 3200 	str.w	r3, [r2, #512]
  4a:	f8d2 3200 	ldr.w	r3, [r2, #512]
  4e:	f023 0301 	bic.w	r3, r3, #1	; 0x1
  52:	f8c2 3200 	str.w	r3, [r2, #512]
  56:	bd10      	pop	{r4, pc}
Disassembly of section .text.CAN_FilterInit:

00000000 <CAN_FilterInit>:
CAN_FilterInit():
   0:	b510      	push	{r4, lr}
   2:	4604      	mov	r4, r0
   4:	7a80      	ldrb	r0, [r0, #10]
   6:	280d      	cmp	r0, #13
   8:	bf8c      	ite	hi
   a:	2000      	movhi	r0, #0
   c:	2001      	movls	r0, #1
   e:	f7ff fffe 	bl	0 <assert_param>
  12:	7ae0      	ldrb	r0, [r4, #11]
  14:	2801      	cmp	r0, #1
  16:	bf8c      	ite	hi
  18:	2000      	movhi	r0, #0
  1a:	2001      	movls	r0, #1
  1c:	f7ff fffe 	bl	0 <assert_param>
  20:	7b20      	ldrb	r0, [r4, #12]
  22:	2801      	cmp	r0, #1
  24:	bf8c      	ite	hi
  26:	2000      	movhi	r0, #0
  28:	2001      	movls	r0, #1
  2a:	f7ff fffe 	bl	0 <assert_param>
  2e:	8920      	ldrh	r0, [r4, #8]
  30:	2801      	cmp	r0, #1
  32:	bf8c      	ite	hi
  34:	2000      	movhi	r0, #0
  36:	2001      	movls	r0, #1
  38:	f7ff fffe 	bl	0 <assert_param>
  3c:	7b60      	ldrb	r0, [r4, #13]
  3e:	2801      	cmp	r0, #1
  40:	bf8c      	ite	hi
  42:	2000      	movhi	r0, #0
  44:	2001      	movls	r0, #1
  46:	f7ff fffe 	bl	0 <assert_param>
  4a:	7aa0      	ldrb	r0, [r4, #10]
  4c:	f04f 0301 	mov.w	r3, #1	; 0x1
  50:	fa03 fc00 	lsl.w	ip, r3, r0
  54:	f246 4200 	movw	r2, #25600	; 0x6400
  58:	f2c4 0200 	movt	r2, #16384	; 0x4000
  5c:	f8d2 3200 	ldr.w	r3, [r2, #512]
  60:	f043 0301 	orr.w	r3, r3, #1	; 0x1
  64:	f8c2 3200 	str.w	r3, [r2, #512]
  68:	f8d2 321c 	ldr.w	r3, [r2, #540]
  6c:	ea6f 0e0c 	mvn.w	lr, ip
  70:	ea0e 0303 	and.w	r3, lr, r3
  74:	f8c2 321c 	str.w	r3, [r2, #540]
  78:	7b23      	ldrb	r3, [r4, #12]
  7a:	b9d3      	cbnz	r3, b2 <assert_param+0xb2>
  7c:	f246 4200 	movw	r2, #25600	; 0x6400
  80:	f2c4 0200 	movt	r2, #16384	; 0x4000
  84:	f8d2 320c 	ldr.w	r3, [r2, #524]
  88:	ea0e 0303 	and.w	r3, lr, r3
  8c:	f8c2 320c 	str.w	r3, [r2, #524]
  90:	88e1      	ldrh	r1, [r4, #6]
  92:	8863      	ldrh	r3, [r4, #2]
  94:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  98:	f100 0148 	add.w	r1, r0, #72	; 0x48
  9c:	f842 3031 	str.w	r3, [r2, r1, lsl #3]
  a0:	88a0      	ldrh	r0, [r4, #4]
  a2:	8823      	ldrh	r3, [r4, #0]
  a4:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
  a8:	ea4f 01c1 	mov.w	r1, r1, lsl #3
  ac:	440a      	add	r2, r1
  ae:	6053      	str	r3, [r2, #4]
  b0:	e01b      	b.n	ea <assert_param+0xea>
  b2:	2b01      	cmp	r3, #1
  b4:	d119      	bne.n	ea <assert_param+0xea>
  b6:	f246 4200 	movw	r2, #25600	; 0x6400
  ba:	f2c4 0200 	movt	r2, #16384	; 0x4000
  be:	f8d2 320c 	ldr.w	r3, [r2, #524]
  c2:	ea4c 0303 	orr.w	r3, ip, r3
  c6:	f8c2 320c 	str.w	r3, [r2, #524]
  ca:	8821      	ldrh	r1, [r4, #0]
  cc:	8863      	ldrh	r3, [r4, #2]
  ce:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  d2:	f100 0148 	add.w	r1, r0, #72	; 0x48
  d6:	f842 3031 	str.w	r3, [r2, r1, lsl #3]
  da:	88a0      	ldrh	r0, [r4, #4]
  dc:	88e3      	ldrh	r3, [r4, #6]
  de:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
  e2:	ea4f 01c1 	mov.w	r1, r1, lsl #3
  e6:	440a      	add	r2, r1
  e8:	6053      	str	r3, [r2, #4]
  ea:	7ae3      	ldrb	r3, [r4, #11]
  ec:	b953      	cbnz	r3, 104 <assert_param+0x104>
  ee:	f246 4200 	movw	r2, #25600	; 0x6400
  f2:	f2c4 0200 	movt	r2, #16384	; 0x4000
  f6:	f8d2 3204 	ldr.w	r3, [r2, #516]
  fa:	ea0e 0303 	and.w	r3, lr, r3
  fe:	f8c2 3204 	str.w	r3, [r2, #516]
 102:	e009      	b.n	118 <assert_param+0x118>
 104:	f246 4200 	movw	r2, #25600	; 0x6400
 108:	f2c4 0200 	movt	r2, #16384	; 0x4000
 10c:	f8d2 3204 	ldr.w	r3, [r2, #516]
 110:	ea4c 0303 	orr.w	r3, ip, r3
 114:	f8c2 3204 	str.w	r3, [r2, #516]
 118:	8923      	ldrh	r3, [r4, #8]
 11a:	b953      	cbnz	r3, 132 <assert_param+0x132>
 11c:	f246 4200 	movw	r2, #25600	; 0x6400
 120:	f2c4 0200 	movt	r2, #16384	; 0x4000
 124:	f8d2 3214 	ldr.w	r3, [r2, #532]
 128:	ea0e 0303 	and.w	r3, lr, r3
 12c:	f8c2 3214 	str.w	r3, [r2, #532]
 130:	e00c      	b.n	14c <assert_param+0x14c>
 132:	2b01      	cmp	r3, #1
 134:	bf01      	itttt	eq
 136:	f246 4200 	movweq	r2, #25600	; 0x6400
 13a:	f2c4 0200 	movteq	r2, #16384	; 0x4000
 13e:	f8d2 3214 	ldreq.w	r3, [r2, #532]
 142:	ea4c 0303 	orreq.w	r3, ip, r3
 146:	bf08      	it	eq
 148:	f8c2 3214 	streq.w	r3, [r2, #532]
 14c:	7b63      	ldrb	r3, [r4, #13]
 14e:	2b01      	cmp	r3, #1
 150:	bf01      	itttt	eq
 152:	f246 4200 	movweq	r2, #25600	; 0x6400
 156:	f2c4 0200 	movteq	r2, #16384	; 0x4000
 15a:	f8d2 321c 	ldreq.w	r3, [r2, #540]
 15e:	ea4c 0303 	orreq.w	r3, ip, r3
 162:	bf08      	it	eq
 164:	f8c2 321c 	streq.w	r3, [r2, #540]
 168:	f246 4200 	movw	r2, #25600	; 0x6400
 16c:	f2c4 0200 	movt	r2, #16384	; 0x4000
 170:	f8d2 3200 	ldr.w	r3, [r2, #512]
 174:	f023 0301 	bic.w	r3, r3, #1	; 0x1
 178:	f8c2 3200 	str.w	r3, [r2, #512]
 17c:	bd10      	pop	{r4, pc}
 17e:	46c0      	nop			(mov r8, r8)
Disassembly of section .text.CAN_Init:

00000000 <CAN_Init>:
CAN_Init():
   0:	b570      	push	{r4, r5, r6, lr}
   2:	4604      	mov	r4, r0
   4:	460d      	mov	r5, r1
   6:	f246 4300 	movw	r3, #25600	; 0x6400
   a:	f2c4 0300 	movt	r3, #16384	; 0x4000
   e:	f646 0000 	movw	r0, #26624	; 0x6800
  12:	f2c4 0000 	movt	r0, #16384	; 0x4000
  16:	4284      	cmp	r4, r0
  18:	bf14      	ite	ne
  1a:	2000      	movne	r0, #0
  1c:	2001      	moveq	r0, #1
  1e:	429c      	cmp	r4, r3
  20:	bf08      	it	eq
  22:	f040 0001 	orreq.w	r0, r0, #1	; 0x1
  26:	f7ff fffe 	bl	0 <assert_param>
  2a:	79a8      	ldrb	r0, [r5, #6]
  2c:	2801      	cmp	r0, #1
  2e:	bf8c      	ite	hi
  30:	2000      	movhi	r0, #0
  32:	2001      	movls	r0, #1
  34:	f7ff fffe 	bl	0 <assert_param>
  38:	79e8      	ldrb	r0, [r5, #7]
  3a:	2801      	cmp	r0, #1
  3c:	bf8c      	ite	hi
  3e:	2000      	movhi	r0, #0
  40:	2001      	movls	r0, #1
  42:	f7ff fffe 	bl	0 <assert_param>
  46:	7a28      	ldrb	r0, [r5, #8]
  48:	2801      	cmp	r0, #1
  4a:	bf8c      	ite	hi
  4c:	2000      	movhi	r0, #0
  4e:	2001      	movls	r0, #1
  50:	f7ff fffe 	bl	0 <assert_param>
  54:	7a68      	ldrb	r0, [r5, #9]
  56:	2801      	cmp	r0, #1
  58:	bf8c      	ite	hi
  5a:	2000      	movhi	r0, #0
  5c:	2001      	movls	r0, #1
  5e:	f7ff fffe 	bl	0 <assert_param>
  62:	7aa8      	ldrb	r0, [r5, #10]
  64:	2801      	cmp	r0, #1
  66:	bf8c      	ite	hi
  68:	2000      	movhi	r0, #0
  6a:	2001      	movls	r0, #1
  6c:	f7ff fffe 	bl	0 <assert_param>
  70:	7ae8      	ldrb	r0, [r5, #11]
  72:	2801      	cmp	r0, #1
  74:	bf8c      	ite	hi
  76:	2000      	movhi	r0, #0
  78:	2001      	movls	r0, #1
  7a:	f7ff fffe 	bl	0 <assert_param>
  7e:	78a8      	ldrb	r0, [r5, #2]
  80:	2803      	cmp	r0, #3
  82:	bf8c      	ite	hi
  84:	2000      	movhi	r0, #0
  86:	2001      	movls	r0, #1
  88:	f7ff fffe 	bl	0 <assert_param>
  8c:	78e8      	ldrb	r0, [r5, #3]
  8e:	2803      	cmp	r0, #3
  90:	bf8c      	ite	hi
  92:	2000      	movhi	r0, #0
  94:	2001      	movls	r0, #1
  96:	f7ff fffe 	bl	0 <assert_param>
  9a:	7928      	ldrb	r0, [r5, #4]
  9c:	280f      	cmp	r0, #15
  9e:	bf8c      	ite	hi
  a0:	2000      	movhi	r0, #0
  a2:	2001      	movls	r0, #1
  a4:	f7ff fffe 	bl	0 <assert_param>
  a8:	7968      	ldrb	r0, [r5, #5]
  aa:	2807      	cmp	r0, #7
  ac:	bf8c      	ite	hi
  ae:	2000      	movhi	r0, #0
  b0:	2001      	movls	r0, #1
  b2:	f7ff fffe 	bl	0 <assert_param>
  b6:	8828      	ldrh	r0, [r5, #0]
  b8:	f100 30ff 	add.w	r0, r0, #4294967295	; 0xffffffff
  bc:	b280      	uxth	r0, r0
  be:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
  c2:	bf2c      	ite	cs
  c4:	2000      	movcs	r0, #0
  c6:	2001      	movcc	r0, #1
  c8:	f7ff fffe 	bl	0 <assert_param>
  cc:	6823      	ldr	r3, [r4, #0]
  ce:	f023 0302 	bic.w	r3, r3, #2	; 0x2
  d2:	6023      	str	r3, [r4, #0]
  d4:	6823      	ldr	r3, [r4, #0]
  d6:	f043 0301 	orr.w	r3, r3, #1	; 0x1
  da:	6023      	str	r3, [r4, #0]
  dc:	6863      	ldr	r3, [r4, #4]
  de:	f013 0f01 	tst.w	r3, #1	; 0x1
  e2:	d10b      	bne.n	fc <assert_param+0xfc>
  e4:	f04f 0200 	mov.w	r2, #0	; 0x0
  e8:	f64f 71ff 	movw	r1, #65535	; 0xffff
  ec:	6863      	ldr	r3, [r4, #4]
  ee:	f013 0f01 	tst.w	r3, #1	; 0x1
  f2:	d103      	bne.n	fc <assert_param+0xfc>
  f4:	f102 0201 	add.w	r2, r2, #1	; 0x1
  f8:	428a      	cmp	r2, r1
  fa:	d1f7      	bne.n	ec <assert_param+0xec>
  fc:	6863      	ldr	r3, [r4, #4]
  fe:	f013 0f01 	tst.w	r3, #1	; 0x1
 102:	bf08      	it	eq
 104:	2000      	moveq	r0, #0
 106:	d072      	beq.n	1ee <assert_param+0x1ee>
 108:	79ab      	ldrb	r3, [r5, #6]
 10a:	2b01      	cmp	r3, #1
 10c:	bf03      	ittte	eq
 10e:	6823      	ldreq	r3, [r4, #0]
 110:	f043 0380 	orreq.w	r3, r3, #128	; 0x80
 114:	6023      	streq	r3, [r4, #0]
 116:	6823      	ldrne	r3, [r4, #0]
 118:	bf1c      	itt	ne
 11a:	f023 0380 	bicne.w	r3, r3, #128	; 0x80
 11e:	6023      	strne	r3, [r4, #0]
 120:	79eb      	ldrb	r3, [r5, #7]
 122:	2b01      	cmp	r3, #1
 124:	bf03      	ittte	eq
 126:	6823      	ldreq	r3, [r4, #0]
 128:	f043 0340 	orreq.w	r3, r3, #64	; 0x40
 12c:	6023      	streq	r3, [r4, #0]
 12e:	6823      	ldrne	r3, [r4, #0]
 130:	bf1c      	itt	ne
 132:	f023 0340 	bicne.w	r3, r3, #64	; 0x40
 136:	6023      	strne	r3, [r4, #0]
 138:	7a2b      	ldrb	r3, [r5, #8]
 13a:	2b01      	cmp	r3, #1
 13c:	bf03      	ittte	eq
 13e:	6823      	ldreq	r3, [r4, #0]
 140:	f043 0320 	orreq.w	r3, r3, #32	; 0x20
 144:	6023      	streq	r3, [r4, #0]
 146:	6823      	ldrne	r3, [r4, #0]
 148:	bf1c      	itt	ne
 14a:	f023 0320 	bicne.w	r3, r3, #32	; 0x20
 14e:	6023      	strne	r3, [r4, #0]
 150:	7a6b      	ldrb	r3, [r5, #9]
 152:	2b01      	cmp	r3, #1
 154:	bf03      	ittte	eq
 156:	6823      	ldreq	r3, [r4, #0]
 158:	f043 0310 	orreq.w	r3, r3, #16	; 0x10
 15c:	6023      	streq	r3, [r4, #0]
 15e:	6823      	ldrne	r3, [r4, #0]
 160:	bf1c      	itt	ne
 162:	f023 0310 	bicne.w	r3, r3, #16	; 0x10
 166:	6023      	strne	r3, [r4, #0]
 168:	7aab      	ldrb	r3, [r5, #10]
 16a:	2b01      	cmp	r3, #1
 16c:	bf03      	ittte	eq
 16e:	6823      	ldreq	r3, [r4, #0]
 170:	f043 0308 	orreq.w	r3, r3, #8	; 0x8
 174:	6023      	streq	r3, [r4, #0]
 176:	6823      	ldrne	r3, [r4, #0]
 178:	bf1c      	itt	ne
 17a:	f023 0308 	bicne.w	r3, r3, #8	; 0x8
 17e:	6023      	strne	r3, [r4, #0]
 180:	7aeb      	ldrb	r3, [r5, #11]
 182:	2b01      	cmp	r3, #1
 184:	bf03      	ittte	eq
 186:	6823      	ldreq	r3, [r4, #0]
 188:	f043 0304 	orreq.w	r3, r3, #4	; 0x4
 18c:	6023      	streq	r3, [r4, #0]
 18e:	6823      	ldrne	r3, [r4, #0]
 190:	bf1c      	itt	ne
 192:	f023 0304 	bicne.w	r3, r3, #4	; 0x4
 196:	6023      	strne	r3, [r4, #0]
 198:	78eb      	ldrb	r3, [r5, #3]
 19a:	78aa      	ldrb	r2, [r5, #2]
 19c:	ea4f 7282 	mov.w	r2, r2, lsl #30
 1a0:	ea42 6203 	orr.w	r2, r2, r3, lsl #24
 1a4:	792b      	ldrb	r3, [r5, #4]
 1a6:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 1aa:	796b      	ldrb	r3, [r5, #5]
 1ac:	ea42 5203 	orr.w	r2, r2, r3, lsl #20
 1b0:	882b      	ldrh	r3, [r5, #0]
 1b2:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
 1b6:	ea42 0203 	orr.w	r2, r2, r3
 1ba:	61e2      	str	r2, [r4, #28]
 1bc:	6823      	ldr	r3, [r4, #0]
 1be:	f023 0301 	bic.w	r3, r3, #1	; 0x1
 1c2:	6023      	str	r3, [r4, #0]
 1c4:	6863      	ldr	r3, [r4, #4]
 1c6:	f013 0f01 	tst.w	r3, #1	; 0x1
 1ca:	d00b      	beq.n	1e4 <assert_param+0x1e4>
 1cc:	f04f 0200 	mov.w	r2, #0	; 0x0
 1d0:	f64f 71ff 	movw	r1, #65535	; 0xffff
 1d4:	6863      	ldr	r3, [r4, #4]
 1d6:	f013 0f01 	tst.w	r3, #1	; 0x1
 1da:	d003      	beq.n	1e4 <assert_param+0x1e4>
 1dc:	f102 0201 	add.w	r2, r2, #1	; 0x1
 1e0:	428a      	cmp	r2, r1
 1e2:	d1f7      	bne.n	1d4 <assert_param+0x1d4>
 1e4:	6863      	ldr	r3, [r4, #4]
 1e6:	f083 0301 	eor.w	r3, r3, #1	; 0x1
 1ea:	f003 0001 	and.w	r0, r3, #1	; 0x1
 1ee:	bd70      	pop	{r4, r5, r6, pc}
Disassembly of section .text.CAN_DeInit:

00000000 <CAN_DeInit>:
CAN_DeInit():
   0:	b570      	push	{r4, r5, r6, lr}
   2:	4605      	mov	r5, r0
   4:	f246 4400 	movw	r4, #25600	; 0x6400
   8:	f2c4 0400 	movt	r4, #16384	; 0x4000
   c:	f646 0000 	movw	r0, #26624	; 0x6800
  10:	f2c4 0000 	movt	r0, #16384	; 0x4000
  14:	4285      	cmp	r5, r0
  16:	bf14      	ite	ne
  18:	2000      	movne	r0, #0
  1a:	2001      	moveq	r0, #1
  1c:	42a5      	cmp	r5, r4
  1e:	bf08      	it	eq
  20:	f040 0001 	orreq.w	r0, r0, #1	; 0x1
  24:	f7ff fffe 	bl	0 <assert_param>
  28:	42a5      	cmp	r5, r4
  2a:	d10c      	bne.n	46 <CAN_DeInit+0x46>
  2c:	f04f 7000 	mov.w	r0, #33554432	; 0x2000000
  30:	f04f 0101 	mov.w	r1, #1	; 0x1
  34:	f7ff fffe 	bl	0 <RCC_APB1PeriphResetCmd>
  38:	f04f 7000 	mov.w	r0, #33554432	; 0x2000000
  3c:	f04f 0100 	mov.w	r1, #0	; 0x0
  40:	f7ff fffe 	bl	0 <RCC_APB1PeriphResetCmd>
  44:	e00b      	b.n	5e <CAN_DeInit+0x5e>
  46:	f04f 6080 	mov.w	r0, #67108864	; 0x4000000
  4a:	f04f 0101 	mov.w	r1, #1	; 0x1
  4e:	f7ff fffe 	bl	0 <RCC_APB1PeriphResetCmd>
  52:	f04f 6080 	mov.w	r0, #67108864	; 0x4000000
  56:	f04f 0100 	mov.w	r1, #0	; 0x0
  5a:	f7ff fffe 	bl	0 <RCC_APB1PeriphResetCmd>
  5e:	bd70      	pop	{r4, r5, r6, pc}
