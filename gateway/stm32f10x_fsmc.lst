
D:\cortex\gateway\stm32f10x_fsmc.o:     file format elf32-littlearm
D:\cortex\gateway\stm32f10x_fsmc.o

Disassembly of section .text.FSMC_PCCARDDeInit:

00000000 <FSMC_PCCARDDeInit>:
FSMC_PCCARDDeInit():
   0:	f240 03a0 	movw	r3, #160	; 0xa0
   4:	f2ca 0300 	movt	r3, #40960	; 0xa000
   8:	f04f 0218 	mov.w	r2, #24	; 0x18
   c:	601a      	str	r2, [r3, #0]
   e:	f1a2 0218 	sub.w	r2, r2, #24	; 0x18
  12:	605a      	str	r2, [r3, #4]
  14:	f102 32fc 	add.w	r2, r2, #4244438268	; 0xfcfcfcfc
  18:	609a      	str	r2, [r3, #8]
  1a:	60da      	str	r2, [r3, #12]
  1c:	611a      	str	r2, [r3, #16]
  1e:	4770      	bx	lr
Disassembly of section .text.FSMC_NORSRAMStructInit:

00000000 <FSMC_NORSRAMStructInit>:
FSMC_NORSRAMStructInit():
   0:	b410      	push	{r4}
   2:	f04f 0100 	mov.w	r1, #0	; 0x0
   6:	6001      	str	r1, [r0, #0]
   8:	f04f 0302 	mov.w	r3, #2	; 0x2
   c:	6043      	str	r3, [r0, #4]
   e:	6081      	str	r1, [r0, #8]
  10:	60c1      	str	r1, [r0, #12]
  12:	6101      	str	r1, [r0, #16]
  14:	6141      	str	r1, [r0, #20]
  16:	6181      	str	r1, [r0, #24]
  18:	61c1      	str	r1, [r0, #28]
  1a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  1e:	6203      	str	r3, [r0, #32]
  20:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  24:	6243      	str	r3, [r0, #36]
  26:	6281      	str	r1, [r0, #40]
  28:	62c1      	str	r1, [r0, #44]
  2a:	6b03      	ldr	r3, [r0, #48]
  2c:	f04f 020f 	mov.w	r2, #15	; 0xf
  30:	601a      	str	r2, [r3, #0]
  32:	6b03      	ldr	r3, [r0, #48]
  34:	605a      	str	r2, [r3, #4]
  36:	6b03      	ldr	r3, [r0, #48]
  38:	f04f 04ff 	mov.w	r4, #255	; 0xff
  3c:	609c      	str	r4, [r3, #8]
  3e:	6b03      	ldr	r3, [r0, #48]
  40:	60da      	str	r2, [r3, #12]
  42:	6b03      	ldr	r3, [r0, #48]
  44:	611a      	str	r2, [r3, #16]
  46:	6b03      	ldr	r3, [r0, #48]
  48:	615a      	str	r2, [r3, #20]
  4a:	6b03      	ldr	r3, [r0, #48]
  4c:	6199      	str	r1, [r3, #24]
  4e:	6b43      	ldr	r3, [r0, #52]
  50:	601a      	str	r2, [r3, #0]
  52:	6b43      	ldr	r3, [r0, #52]
  54:	605a      	str	r2, [r3, #4]
  56:	6b43      	ldr	r3, [r0, #52]
  58:	609c      	str	r4, [r3, #8]
  5a:	6b43      	ldr	r3, [r0, #52]
  5c:	60da      	str	r2, [r3, #12]
  5e:	6b43      	ldr	r3, [r0, #52]
  60:	611a      	str	r2, [r3, #16]
  62:	6b43      	ldr	r3, [r0, #52]
  64:	615a      	str	r2, [r3, #20]
  66:	6b43      	ldr	r3, [r0, #52]
  68:	6199      	str	r1, [r3, #24]
  6a:	bc10      	pop	{r4}
  6c:	4770      	bx	lr
  6e:	46c0      	nop			(mov r8, r8)
Disassembly of section .text.FSMC_NANDStructInit:

00000000 <FSMC_NANDStructInit>:
FSMC_NANDStructInit():
   0:	f04f 0310 	mov.w	r3, #16	; 0x10
   4:	6003      	str	r3, [r0, #0]
   6:	f1a3 0310 	sub.w	r3, r3, #16	; 0x10
   a:	6043      	str	r3, [r0, #4]
   c:	6083      	str	r3, [r0, #8]
   e:	60c3      	str	r3, [r0, #12]
  10:	6103      	str	r3, [r0, #16]
  12:	6143      	str	r3, [r0, #20]
  14:	6183      	str	r3, [r0, #24]
  16:	69c3      	ldr	r3, [r0, #28]
  18:	f04f 02fc 	mov.w	r2, #252	; 0xfc
  1c:	601a      	str	r2, [r3, #0]
  1e:	69c3      	ldr	r3, [r0, #28]
  20:	605a      	str	r2, [r3, #4]
  22:	69c3      	ldr	r3, [r0, #28]
  24:	609a      	str	r2, [r3, #8]
  26:	69c3      	ldr	r3, [r0, #28]
  28:	60da      	str	r2, [r3, #12]
  2a:	6a03      	ldr	r3, [r0, #32]
  2c:	601a      	str	r2, [r3, #0]
  2e:	6a03      	ldr	r3, [r0, #32]
  30:	605a      	str	r2, [r3, #4]
  32:	6a03      	ldr	r3, [r0, #32]
  34:	609a      	str	r2, [r3, #8]
  36:	6a03      	ldr	r3, [r0, #32]
  38:	60da      	str	r2, [r3, #12]
  3a:	4770      	bx	lr
Disassembly of section .text.FSMC_PCCARDStructInit:

00000000 <FSMC_PCCARDStructInit>:
FSMC_PCCARDStructInit():
   0:	f04f 0300 	mov.w	r3, #0	; 0x0
   4:	6003      	str	r3, [r0, #0]
   6:	6043      	str	r3, [r0, #4]
   8:	6083      	str	r3, [r0, #8]
   a:	68c3      	ldr	r3, [r0, #12]
   c:	f04f 02fc 	mov.w	r2, #252	; 0xfc
  10:	601a      	str	r2, [r3, #0]
  12:	68c3      	ldr	r3, [r0, #12]
  14:	605a      	str	r2, [r3, #4]
  16:	68c3      	ldr	r3, [r0, #12]
  18:	609a      	str	r2, [r3, #8]
  1a:	68c3      	ldr	r3, [r0, #12]
  1c:	60da      	str	r2, [r3, #12]
  1e:	6903      	ldr	r3, [r0, #16]
  20:	601a      	str	r2, [r3, #0]
  22:	6903      	ldr	r3, [r0, #16]
  24:	605a      	str	r2, [r3, #4]
  26:	6903      	ldr	r3, [r0, #16]
  28:	609a      	str	r2, [r3, #8]
  2a:	6903      	ldr	r3, [r0, #16]
  2c:	60da      	str	r2, [r3, #12]
  2e:	6943      	ldr	r3, [r0, #20]
  30:	601a      	str	r2, [r3, #0]
  32:	6943      	ldr	r3, [r0, #20]
  34:	605a      	str	r2, [r3, #4]
  36:	6943      	ldr	r3, [r0, #20]
  38:	609a      	str	r2, [r3, #8]
  3a:	6943      	ldr	r3, [r0, #20]
  3c:	60da      	str	r2, [r3, #12]
  3e:	4770      	bx	lr
Disassembly of section .text.FSMC_GetECC:

00000000 <FSMC_GetECC>:
FSMC_GetECC():
   0:	2810      	cmp	r0, #16
   2:	bf03      	ittte	eq
   4:	f240 0360 	movweq	r3, #96	; 0x60
   8:	f2ca 0300 	movteq	r3, #40960	; 0xa000
   c:	6958      	ldreq	r0, [r3, #20]
   e:	f240 0380 	movwne	r3, #128	; 0x80
  12:	bf1c      	itt	ne
  14:	f2ca 0300 	movtne	r3, #40960	; 0xa000
  18:	6958      	ldrne	r0, [r3, #20]
  1a:	4770      	bx	lr
Disassembly of section .text.FSMC_ClearITPendingBit:

00000000 <FSMC_ClearITPendingBit>:
FSMC_ClearITPendingBit():
   0:	b570      	push	{r4, r5, r6, lr}
   2:	460c      	mov	r4, r1
   4:	2810      	cmp	r0, #16
   6:	bf14      	ite	ne
   8:	2500      	movne	r5, #0
   a:	2501      	moveq	r5, #1
   c:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
  10:	bf14      	ite	ne
  12:	2600      	movne	r6, #0
  14:	2601      	moveq	r6, #1
  16:	ea55 0306 	orrs.w	r3, r5, r6
  1a:	bf18      	it	ne
  1c:	2001      	movne	r0, #1
  1e:	d104      	bne.n	2a <FSMC_ClearITPendingBit+0x2a>
  20:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
  24:	d038      	beq.n	98 <FSMC_ClearITPendingBit+0x98>
  26:	f04f 0000 	mov.w	r0, #0	; 0x0
  2a:	f7ff fffe 	bl	0 <assert_param>
  2e:	f034 0338 	bics.w	r3, r4, #56	; 0x38
  32:	bf14      	ite	ne
  34:	2000      	movne	r0, #0
  36:	2001      	moveq	r0, #1
  38:	2c00      	cmp	r4, #0
  3a:	bf0c      	ite	eq
  3c:	2000      	moveq	r0, #0
  3e:	f000 0001 	andne.w	r0, r0, #1	; 0x1
  42:	f7ff fffe 	bl	0 <assert_param>
  46:	b165      	cbz	r5, 62 <FSMC_ClearITPendingBit+0x62>
  48:	f240 0360 	movw	r3, #96	; 0x60
  4c:	f2ca 0300 	movt	r3, #40960	; 0xa000
  50:	6859      	ldr	r1, [r3, #4]
  52:	ea4f 02d4 	mov.w	r2, r4, lsr #3
  56:	ea6f 0202 	mvn.w	r2, r2
  5a:	ea02 0201 	and.w	r2, r2, r1
  5e:	605a      	str	r2, [r3, #4]
  60:	e02b      	b.n	ba <FSMC_ClearITPendingBit+0xba>
  62:	b166      	cbz	r6, 7e <FSMC_ClearITPendingBit+0x7e>
  64:	f240 0380 	movw	r3, #128	; 0x80
  68:	f2ca 0300 	movt	r3, #40960	; 0xa000
  6c:	6859      	ldr	r1, [r3, #4]
  6e:	ea4f 02d4 	mov.w	r2, r4, lsr #3
  72:	ea6f 0202 	mvn.w	r2, r2
  76:	ea02 0201 	and.w	r2, r2, r1
  7a:	605a      	str	r2, [r3, #4]
  7c:	e01d      	b.n	ba <FSMC_ClearITPendingBit+0xba>
  7e:	f240 03a0 	movw	r3, #160	; 0xa0
  82:	f2ca 0300 	movt	r3, #40960	; 0xa000
  86:	6859      	ldr	r1, [r3, #4]
  88:	ea4f 02d4 	mov.w	r2, r4, lsr #3
  8c:	ea6f 0202 	mvn.w	r2, r2
  90:	ea02 0201 	and.w	r2, r2, r1
  94:	605a      	str	r2, [r3, #4]
  96:	e010      	b.n	ba <FSMC_ClearITPendingBit+0xba>
  98:	f04f 0001 	mov.w	r0, #1	; 0x1
  9c:	f7ff fffe 	bl	0 <assert_param>
  a0:	f034 0338 	bics.w	r3, r4, #56	; 0x38
  a4:	bf14      	ite	ne
  a6:	2000      	movne	r0, #0
  a8:	2001      	moveq	r0, #1
  aa:	2c00      	cmp	r4, #0
  ac:	bf0c      	ite	eq
  ae:	2000      	moveq	r0, #0
  b0:	f000 0001 	andne.w	r0, r0, #1	; 0x1
  b4:	f7ff fffe 	bl	0 <assert_param>
  b8:	e7d3      	b.n	62 <assert_param+0x62>
  ba:	bd70      	pop	{r4, r5, r6, pc}
Disassembly of section .text.FSMC_GetITStatus:

00000000 <FSMC_GetITStatus>:
FSMC_GetITStatus():
   0:	b570      	push	{r4, r5, r6, lr}
   2:	460c      	mov	r4, r1
   4:	2810      	cmp	r0, #16
   6:	bf14      	ite	ne
   8:	2500      	movne	r5, #0
   a:	2501      	moveq	r5, #1
   c:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
  10:	bf14      	ite	ne
  12:	2600      	movne	r6, #0
  14:	2601      	moveq	r6, #1
  16:	ea55 0306 	orrs.w	r3, r5, r6
  1a:	bf18      	it	ne
  1c:	2001      	movne	r0, #1
  1e:	d104      	bne.n	2a <FSMC_GetITStatus+0x2a>
  20:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
  24:	bf14      	ite	ne
  26:	2000      	movne	r0, #0
  28:	2001      	moveq	r0, #1
  2a:	f7ff fffe 	bl	0 <assert_param>
  2e:	2c10      	cmp	r4, #16
  30:	bf14      	ite	ne
  32:	2300      	movne	r3, #0
  34:	2301      	moveq	r3, #1
  36:	2c08      	cmp	r4, #8
  38:	bf08      	it	eq
  3a:	f043 0301 	orreq.w	r3, r3, #1	; 0x1
  3e:	b113      	cbz	r3, 46 <FSMC_GetITStatus+0x46>
  40:	f04f 0001 	mov.w	r0, #1	; 0x1
  44:	e003      	b.n	4e <FSMC_GetITStatus+0x4e>
  46:	2c20      	cmp	r4, #32
  48:	bf14      	ite	ne
  4a:	2000      	movne	r0, #0
  4c:	2001      	moveq	r0, #1
  4e:	f7ff fffe 	bl	0 <assert_param>
  52:	b12d      	cbz	r5, 60 <assert_param+0x60>
  54:	f240 0360 	movw	r3, #96	; 0x60
  58:	f2ca 0300 	movt	r3, #40960	; 0xa000
  5c:	685b      	ldr	r3, [r3, #4]
  5e:	e00b      	b.n	78 <assert_param+0x78>
  60:	b12e      	cbz	r6, 6e <assert_param+0x6e>
  62:	f240 0380 	movw	r3, #128	; 0x80
  66:	f2ca 0300 	movt	r3, #40960	; 0xa000
  6a:	685b      	ldr	r3, [r3, #4]
  6c:	e004      	b.n	78 <assert_param+0x78>
  6e:	f240 03a0 	movw	r3, #160	; 0xa0
  72:	f2ca 0300 	movt	r3, #40960	; 0xa000
  76:	685b      	ldr	r3, [r3, #4]
  78:	4223      	tst	r3, r4
  7a:	bf0c      	ite	eq
  7c:	2000      	moveq	r0, #0
  7e:	2001      	movne	r0, #1
  80:	ea13 04d4 	ands.w	r4, r3, r4, lsr #3
  84:	bf0c      	ite	eq
  86:	2000      	moveq	r0, #0
  88:	f000 0001 	andne.w	r0, r0, #1	; 0x1
  8c:	bd70      	pop	{r4, r5, r6, pc}
  8e:	46c0      	nop			(mov r8, r8)
Disassembly of section .text.FSMC_ClearFlag:

00000000 <FSMC_ClearFlag>:
FSMC_ClearFlag():
   0:	b570      	push	{r4, r5, r6, lr}
   2:	460c      	mov	r4, r1
   4:	2810      	cmp	r0, #16
   6:	bf14      	ite	ne
   8:	2500      	movne	r5, #0
   a:	2501      	moveq	r5, #1
   c:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
  10:	bf14      	ite	ne
  12:	2600      	movne	r6, #0
  14:	2601      	moveq	r6, #1
  16:	ea55 0306 	orrs.w	r3, r5, r6
  1a:	bf18      	it	ne
  1c:	2001      	movne	r0, #1
  1e:	d104      	bne.n	2a <FSMC_ClearFlag+0x2a>
  20:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
  24:	d032      	beq.n	8c <FSMC_ClearFlag+0x8c>
  26:	f04f 0000 	mov.w	r0, #0	; 0x0
  2a:	f7ff fffe 	bl	0 <assert_param>
  2e:	f034 0307 	bics.w	r3, r4, #7	; 0x7
  32:	bf14      	ite	ne
  34:	2000      	movne	r0, #0
  36:	2001      	moveq	r0, #1
  38:	2c00      	cmp	r4, #0
  3a:	bf0c      	ite	eq
  3c:	2000      	moveq	r0, #0
  3e:	f000 0001 	andne.w	r0, r0, #1	; 0x1
  42:	f7ff fffe 	bl	0 <assert_param>
  46:	b155      	cbz	r5, 5e <FSMC_ClearFlag+0x5e>
  48:	f240 0360 	movw	r3, #96	; 0x60
  4c:	f2ca 0300 	movt	r3, #40960	; 0xa000
  50:	6859      	ldr	r1, [r3, #4]
  52:	ea6f 0204 	mvn.w	r2, r4
  56:	ea02 0201 	and.w	r2, r2, r1
  5a:	605a      	str	r2, [r3, #4]
  5c:	e027      	b.n	ae <FSMC_ClearFlag+0xae>
  5e:	b156      	cbz	r6, 76 <FSMC_ClearFlag+0x76>
  60:	f240 0380 	movw	r3, #128	; 0x80
  64:	f2ca 0300 	movt	r3, #40960	; 0xa000
  68:	6859      	ldr	r1, [r3, #4]
  6a:	ea6f 0204 	mvn.w	r2, r4
  6e:	ea02 0201 	and.w	r2, r2, r1
  72:	605a      	str	r2, [r3, #4]
  74:	e01b      	b.n	ae <FSMC_ClearFlag+0xae>
  76:	f240 03a0 	movw	r3, #160	; 0xa0
  7a:	f2ca 0300 	movt	r3, #40960	; 0xa000
  7e:	6859      	ldr	r1, [r3, #4]
  80:	ea6f 0204 	mvn.w	r2, r4
  84:	ea02 0201 	and.w	r2, r2, r1
  88:	605a      	str	r2, [r3, #4]
  8a:	e010      	b.n	ae <FSMC_ClearFlag+0xae>
  8c:	f04f 0001 	mov.w	r0, #1	; 0x1
  90:	f7ff fffe 	bl	0 <assert_param>
  94:	f034 0307 	bics.w	r3, r4, #7	; 0x7
  98:	bf14      	ite	ne
  9a:	2000      	movne	r0, #0
  9c:	2001      	moveq	r0, #1
  9e:	2c00      	cmp	r4, #0
  a0:	bf0c      	ite	eq
  a2:	2000      	moveq	r0, #0
  a4:	f000 0001 	andne.w	r0, r0, #1	; 0x1
  a8:	f7ff fffe 	bl	0 <assert_param>
  ac:	e7d7      	b.n	5e <assert_param+0x5e>
  ae:	bd70      	pop	{r4, r5, r6, pc}
Disassembly of section .text.FSMC_GetFlagStatus:

00000000 <FSMC_GetFlagStatus>:
FSMC_GetFlagStatus():
   0:	b570      	push	{r4, r5, r6, lr}
   2:	460c      	mov	r4, r1
   4:	2810      	cmp	r0, #16
   6:	bf14      	ite	ne
   8:	2500      	movne	r5, #0
   a:	2501      	moveq	r5, #1
   c:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
  10:	bf14      	ite	ne
  12:	2600      	movne	r6, #0
  14:	2601      	moveq	r6, #1
  16:	ea55 0306 	orrs.w	r3, r5, r6
  1a:	bf18      	it	ne
  1c:	2001      	movne	r0, #1
  1e:	d104      	bne.n	2a <FSMC_GetFlagStatus+0x2a>
  20:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
  24:	bf14      	ite	ne
  26:	2000      	movne	r0, #0
  28:	2001      	moveq	r0, #1
  2a:	f7ff fffe 	bl	0 <assert_param>
  2e:	f104 32ff 	add.w	r2, r4, #4294967295	; 0xffffffff
  32:	2c04      	cmp	r4, #4
  34:	bf14      	ite	ne
  36:	2300      	movne	r3, #0
  38:	2301      	moveq	r3, #1
  3a:	2a01      	cmp	r2, #1
  3c:	bf98      	it	ls
  3e:	f043 0301 	orrls.w	r3, r3, #1	; 0x1
  42:	b113      	cbz	r3, 4a <FSMC_GetFlagStatus+0x4a>
  44:	f04f 0001 	mov.w	r0, #1	; 0x1
  48:	e003      	b.n	52 <FSMC_GetFlagStatus+0x52>
  4a:	2c40      	cmp	r4, #64
  4c:	bf14      	ite	ne
  4e:	2000      	movne	r0, #0
  50:	2001      	moveq	r0, #1
  52:	f7ff fffe 	bl	0 <assert_param>
  56:	b12d      	cbz	r5, 64 <assert_param+0x64>
  58:	f240 0360 	movw	r3, #96	; 0x60
  5c:	f2ca 0300 	movt	r3, #40960	; 0xa000
  60:	685b      	ldr	r3, [r3, #4]
  62:	e00b      	b.n	7c <assert_param+0x7c>
  64:	b12e      	cbz	r6, 72 <assert_param+0x72>
  66:	f240 0380 	movw	r3, #128	; 0x80
  6a:	f2ca 0300 	movt	r3, #40960	; 0xa000
  6e:	685b      	ldr	r3, [r3, #4]
  70:	e004      	b.n	7c <assert_param+0x7c>
  72:	f240 03a0 	movw	r3, #160	; 0xa0
  76:	f2ca 0300 	movt	r3, #40960	; 0xa000
  7a:	685b      	ldr	r3, [r3, #4]
  7c:	4223      	tst	r3, r4
  7e:	bf0c      	ite	eq
  80:	2000      	moveq	r0, #0
  82:	2001      	movne	r0, #1
  84:	bd70      	pop	{r4, r5, r6, pc}
  86:	46c0      	nop			(mov r8, r8)
Disassembly of section .text.FSMC_ITConfig:

00000000 <FSMC_ITConfig>:
FSMC_ITConfig():
   0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   4:	460e      	mov	r6, r1
   6:	4617      	mov	r7, r2
   8:	2810      	cmp	r0, #16
   a:	bf14      	ite	ne
   c:	2400      	movne	r4, #0
   e:	2401      	moveq	r4, #1
  10:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
  14:	bf14      	ite	ne
  16:	2500      	movne	r5, #0
  18:	2501      	moveq	r5, #1
  1a:	ea54 0305 	orrs.w	r3, r4, r5
  1e:	bf18      	it	ne
  20:	2001      	movne	r0, #1
  22:	d104      	bne.n	2e <FSMC_ITConfig+0x2e>
  24:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
  28:	bf14      	ite	ne
  2a:	2000      	movne	r0, #0
  2c:	2001      	moveq	r0, #1
  2e:	f7ff fffe 	bl	0 <assert_param>
  32:	f036 0338 	bics.w	r3, r6, #56	; 0x38
  36:	bf14      	ite	ne
  38:	2000      	movne	r0, #0
  3a:	2001      	moveq	r0, #1
  3c:	2e00      	cmp	r6, #0
  3e:	bf0c      	ite	eq
  40:	2000      	moveq	r0, #0
  42:	f000 0001 	andne.w	r0, r0, #1	; 0x1
  46:	f7ff fffe 	bl	0 <assert_param>
  4a:	2f01      	cmp	r7, #1
  4c:	bf8c      	ite	hi
  4e:	2000      	movhi	r0, #0
  50:	2001      	movls	r0, #1
  52:	f7ff fffe 	bl	0 <assert_param>
  56:	b1e7      	cbz	r7, 92 <assert_param+0x92>
  58:	b144      	cbz	r4, 6c <assert_param+0x6c>
  5a:	f240 0260 	movw	r2, #96	; 0x60
  5e:	f2ca 0200 	movt	r2, #40960	; 0xa000
  62:	6853      	ldr	r3, [r2, #4]
  64:	ea46 0303 	orr.w	r3, r6, r3
  68:	6053      	str	r3, [r2, #4]
  6a:	e034      	b.n	d6 <assert_param+0xd6>
  6c:	b145      	cbz	r5, 80 <assert_param+0x80>
  6e:	f240 0280 	movw	r2, #128	; 0x80
  72:	f2ca 0200 	movt	r2, #40960	; 0xa000
  76:	6853      	ldr	r3, [r2, #4]
  78:	ea46 0303 	orr.w	r3, r6, r3
  7c:	6053      	str	r3, [r2, #4]
  7e:	e02a      	b.n	d6 <assert_param+0xd6>
  80:	f240 02a0 	movw	r2, #160	; 0xa0
  84:	f2ca 0200 	movt	r2, #40960	; 0xa000
  88:	6853      	ldr	r3, [r2, #4]
  8a:	ea46 0303 	orr.w	r3, r6, r3
  8e:	6053      	str	r3, [r2, #4]
  90:	e021      	b.n	d6 <assert_param+0xd6>
  92:	b154      	cbz	r4, aa <assert_param+0xaa>
  94:	f240 0360 	movw	r3, #96	; 0x60
  98:	f2ca 0300 	movt	r3, #40960	; 0xa000
  9c:	6859      	ldr	r1, [r3, #4]
  9e:	ea6f 0206 	mvn.w	r2, r6
  a2:	ea02 0201 	and.w	r2, r2, r1
  a6:	605a      	str	r2, [r3, #4]
  a8:	e015      	b.n	d6 <assert_param+0xd6>
  aa:	b155      	cbz	r5, c2 <assert_param+0xc2>
  ac:	f240 0380 	movw	r3, #128	; 0x80
  b0:	f2ca 0300 	movt	r3, #40960	; 0xa000
  b4:	6859      	ldr	r1, [r3, #4]
  b6:	ea6f 0206 	mvn.w	r2, r6
  ba:	ea02 0201 	and.w	r2, r2, r1
  be:	605a      	str	r2, [r3, #4]
  c0:	e009      	b.n	d6 <assert_param+0xd6>
  c2:	f240 03a0 	movw	r3, #160	; 0xa0
  c6:	f2ca 0300 	movt	r3, #40960	; 0xa000
  ca:	6859      	ldr	r1, [r3, #4]
  cc:	ea6f 0206 	mvn.w	r2, r6
  d0:	ea02 0201 	and.w	r2, r2, r1
  d4:	605a      	str	r2, [r3, #4]
  d6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  da:	46c0      	nop			(mov r8, r8)
Disassembly of section .text.FSMC_NANDECCCmd:

00000000 <FSMC_NANDECCCmd>:
FSMC_NANDECCCmd():
   0:	b570      	push	{r4, r5, r6, lr}
   2:	4605      	mov	r5, r0
   4:	460c      	mov	r4, r1
   6:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
   a:	bf14      	ite	ne
   c:	2000      	movne	r0, #0
   e:	2001      	moveq	r0, #1
  10:	2d10      	cmp	r5, #16
  12:	bf08      	it	eq
  14:	f040 0001 	orreq.w	r0, r0, #1	; 0x1
  18:	f7ff fffe 	bl	0 <assert_param>
  1c:	2c01      	cmp	r4, #1
  1e:	bf8c      	ite	hi
  20:	2000      	movhi	r0, #0
  22:	2001      	movls	r0, #1
  24:	f7ff fffe 	bl	0 <assert_param>
  28:	b1a4      	cbz	r4, 54 <assert_param+0x54>
  2a:	2d10      	cmp	r5, #16
  2c:	bf01      	itttt	eq
  2e:	f240 0260 	movweq	r2, #96	; 0x60
  32:	f2ca 0200 	movteq	r2, #40960	; 0xa000
  36:	6813      	ldreq	r3, [r2, #0]
  38:	f043 0340 	orreq.w	r3, r3, #64	; 0x40
  3c:	bf0f      	iteee	eq
  3e:	6013      	streq	r3, [r2, #0]
  40:	f240 0280 	movwne	r2, #128	; 0x80
  44:	f2ca 0200 	movtne	r2, #40960	; 0xa000
  48:	6813      	ldrne	r3, [r2, #0]
  4a:	bf1c      	itt	ne
  4c:	f043 0340 	orrne.w	r3, r3, #64	; 0x40
  50:	6013      	strne	r3, [r2, #0]
  52:	e01a      	b.n	8a <assert_param+0x8a>
  54:	2d10      	cmp	r5, #16
  56:	d10c      	bne.n	72 <assert_param+0x72>
  58:	f240 0160 	movw	r1, #96	; 0x60
  5c:	f2ca 0100 	movt	r1, #40960	; 0xa000
  60:	680a      	ldr	r2, [r1, #0]
  62:	f64f 73bf 	movw	r3, #65471	; 0xffbf
  66:	f2c0 030f 	movt	r3, #15	; 0xf
  6a:	ea02 0203 	and.w	r2, r2, r3
  6e:	600a      	str	r2, [r1, #0]
  70:	e00b      	b.n	8a <assert_param+0x8a>
  72:	f240 0180 	movw	r1, #128	; 0x80
  76:	f2ca 0100 	movt	r1, #40960	; 0xa000
  7a:	680a      	ldr	r2, [r1, #0]
  7c:	f64f 73bf 	movw	r3, #65471	; 0xffbf
  80:	f2c0 030f 	movt	r3, #15	; 0xf
  84:	ea02 0203 	and.w	r2, r2, r3
  88:	600a      	str	r2, [r1, #0]
  8a:	bd70      	pop	{r4, r5, r6, pc}
Disassembly of section .text.FSMC_PCCARDCmd:

00000000 <FSMC_PCCARDCmd>:
FSMC_PCCARDCmd():
   0:	b510      	push	{r4, lr}
   2:	4604      	mov	r4, r0
   4:	2801      	cmp	r0, #1
   6:	bf8c      	ite	hi
   8:	2000      	movhi	r0, #0
   a:	2001      	movls	r0, #1
   c:	f7ff fffe 	bl	0 <assert_param>
  10:	b144      	cbz	r4, 24 <assert_param+0x24>
  12:	f240 02a0 	movw	r2, #160	; 0xa0
  16:	f2ca 0200 	movt	r2, #40960	; 0xa000
  1a:	6813      	ldr	r3, [r2, #0]
  1c:	f043 0304 	orr.w	r3, r3, #4	; 0x4
  20:	6013      	str	r3, [r2, #0]
  22:	e00b      	b.n	3c <assert_param+0x3c>
  24:	f240 01a0 	movw	r1, #160	; 0xa0
  28:	f2ca 0100 	movt	r1, #40960	; 0xa000
  2c:	680a      	ldr	r2, [r1, #0]
  2e:	f64f 73fb 	movw	r3, #65531	; 0xfffb
  32:	f2c0 030f 	movt	r3, #15	; 0xf
  36:	ea02 0203 	and.w	r2, r2, r3
  3a:	600a      	str	r2, [r1, #0]
  3c:	bd10      	pop	{r4, pc}
  3e:	46c0      	nop			(mov r8, r8)
Disassembly of section .text.FSMC_NANDCmd:

00000000 <FSMC_NANDCmd>:
FSMC_NANDCmd():
   0:	b570      	push	{r4, r5, r6, lr}
   2:	4605      	mov	r5, r0
   4:	460c      	mov	r4, r1
   6:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
   a:	bf14      	ite	ne
   c:	2000      	movne	r0, #0
   e:	2001      	moveq	r0, #1
  10:	2d10      	cmp	r5, #16
  12:	bf08      	it	eq
  14:	f040 0001 	orreq.w	r0, r0, #1	; 0x1
  18:	f7ff fffe 	bl	0 <assert_param>
  1c:	2c01      	cmp	r4, #1
  1e:	bf8c      	ite	hi
  20:	2000      	movhi	r0, #0
  22:	2001      	movls	r0, #1
  24:	f7ff fffe 	bl	0 <assert_param>
  28:	b1a4      	cbz	r4, 54 <assert_param+0x54>
  2a:	2d10      	cmp	r5, #16
  2c:	bf01      	itttt	eq
  2e:	f240 0260 	movweq	r2, #96	; 0x60
  32:	f2ca 0200 	movteq	r2, #40960	; 0xa000
  36:	6813      	ldreq	r3, [r2, #0]
  38:	f043 0304 	orreq.w	r3, r3, #4	; 0x4
  3c:	bf0f      	iteee	eq
  3e:	6013      	streq	r3, [r2, #0]
  40:	f240 0280 	movwne	r2, #128	; 0x80
  44:	f2ca 0200 	movtne	r2, #40960	; 0xa000
  48:	6813      	ldrne	r3, [r2, #0]
  4a:	bf1c      	itt	ne
  4c:	f043 0304 	orrne.w	r3, r3, #4	; 0x4
  50:	6013      	strne	r3, [r2, #0]
  52:	e01a      	b.n	8a <assert_param+0x8a>
  54:	2d10      	cmp	r5, #16
  56:	d10c      	bne.n	72 <assert_param+0x72>
  58:	f240 0160 	movw	r1, #96	; 0x60
  5c:	f2ca 0100 	movt	r1, #40960	; 0xa000
  60:	680a      	ldr	r2, [r1, #0]
  62:	f64f 73fb 	movw	r3, #65531	; 0xfffb
  66:	f2c0 030f 	movt	r3, #15	; 0xf
  6a:	ea02 0203 	and.w	r2, r2, r3
  6e:	600a      	str	r2, [r1, #0]
  70:	e00b      	b.n	8a <assert_param+0x8a>
  72:	f240 0180 	movw	r1, #128	; 0x80
  76:	f2ca 0100 	movt	r1, #40960	; 0xa000
  7a:	680a      	ldr	r2, [r1, #0]
  7c:	f64f 73fb 	movw	r3, #65531	; 0xfffb
  80:	f2c0 030f 	movt	r3, #15	; 0xf
  84:	ea02 0203 	and.w	r2, r2, r3
  88:	600a      	str	r2, [r1, #0]
  8a:	bd70      	pop	{r4, r5, r6, pc}
Disassembly of section .text.FSMC_NORSRAMCmd:

00000000 <FSMC_NORSRAMCmd>:
FSMC_NORSRAMCmd():
   0:	b570      	push	{r4, r5, r6, lr}
   2:	460d      	mov	r5, r1
   4:	4604      	mov	r4, r0
   6:	2802      	cmp	r0, #2
   8:	bf14      	ite	ne
   a:	2300      	movne	r3, #0
   c:	2301      	moveq	r3, #1
   e:	2800      	cmp	r0, #0
  10:	bf08      	it	eq
  12:	f043 0301 	orreq.w	r3, r3, #1	; 0x1
  16:	b113      	cbz	r3, 1e <FSMC_NORSRAMCmd+0x1e>
  18:	f04f 0001 	mov.w	r0, #1	; 0x1
  1c:	e008      	b.n	30 <FSMC_NORSRAMCmd+0x30>
  1e:	2806      	cmp	r0, #6
  20:	bf14      	ite	ne
  22:	2300      	movne	r3, #0
  24:	2301      	moveq	r3, #1
  26:	2804      	cmp	r0, #4
  28:	bf14      	ite	ne
  2a:	4618      	movne	r0, r3
  2c:	f043 0001 	orreq.w	r0, r3, #1	; 0x1
  30:	f7ff fffe 	bl	0 <assert_param>
  34:	2d01      	cmp	r5, #1
  36:	bf8c      	ite	hi
  38:	2000      	movhi	r0, #0
  3a:	2001      	movls	r0, #1
  3c:	f7ff fffe 	bl	0 <assert_param>
  40:	b145      	cbz	r5, 54 <assert_param+0x54>
  42:	f04f 4220 	mov.w	r2, #2684354560	; 0xa0000000
  46:	f852 3024 	ldr.w	r3, [r2, r4, lsl #2]
  4a:	f043 0301 	orr.w	r3, r3, #1	; 0x1
  4e:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
  52:	e00b      	b.n	6c <assert_param+0x6c>
  54:	f04f 4120 	mov.w	r1, #2684354560	; 0xa0000000
  58:	f851 2024 	ldr.w	r2, [r1, r4, lsl #2]
  5c:	f64f 73fe 	movw	r3, #65534	; 0xfffe
  60:	f2c0 030f 	movt	r3, #15	; 0xf
  64:	ea02 0203 	and.w	r2, r2, r3
  68:	f841 2024 	str.w	r2, [r1, r4, lsl #2]
  6c:	bd70      	pop	{r4, r5, r6, pc}
  6e:	46c0      	nop			(mov r8, r8)
Disassembly of section .text.FSMC_PCCARDInit:

00000000 <FSMC_PCCARDInit>:
FSMC_PCCARDInit():
   0:	b510      	push	{r4, lr}
   2:	4604      	mov	r4, r0
   4:	6803      	ldr	r3, [r0, #0]
   6:	2b02      	cmp	r3, #2
   8:	bf14      	ite	ne
   a:	2000      	movne	r0, #0
   c:	2001      	moveq	r0, #1
   e:	2b00      	cmp	r3, #0
  10:	bf08      	it	eq
  12:	f040 0001 	orreq.w	r0, r0, #1	; 0x1
  16:	f7ff fffe 	bl	0 <assert_param>
  1a:	6860      	ldr	r0, [r4, #4]
  1c:	28ff      	cmp	r0, #255
  1e:	bf8c      	ite	hi
  20:	2000      	movhi	r0, #0
  22:	2001      	movls	r0, #1
  24:	f7ff fffe 	bl	0 <assert_param>
  28:	68a0      	ldr	r0, [r4, #8]
  2a:	28ff      	cmp	r0, #255
  2c:	bf8c      	ite	hi
  2e:	2000      	movhi	r0, #0
  30:	2001      	movls	r0, #1
  32:	f7ff fffe 	bl	0 <assert_param>
  36:	68e3      	ldr	r3, [r4, #12]
  38:	6818      	ldr	r0, [r3, #0]
  3a:	28ff      	cmp	r0, #255
  3c:	bf8c      	ite	hi
  3e:	2000      	movhi	r0, #0
  40:	2001      	movls	r0, #1
  42:	f7ff fffe 	bl	0 <assert_param>
  46:	68e3      	ldr	r3, [r4, #12]
  48:	6858      	ldr	r0, [r3, #4]
  4a:	28ff      	cmp	r0, #255
  4c:	bf8c      	ite	hi
  4e:	2000      	movhi	r0, #0
  50:	2001      	movls	r0, #1
  52:	f7ff fffe 	bl	0 <assert_param>
  56:	68e3      	ldr	r3, [r4, #12]
  58:	6898      	ldr	r0, [r3, #8]
  5a:	28ff      	cmp	r0, #255
  5c:	bf8c      	ite	hi
  5e:	2000      	movhi	r0, #0
  60:	2001      	movls	r0, #1
  62:	f7ff fffe 	bl	0 <assert_param>
  66:	68e3      	ldr	r3, [r4, #12]
  68:	68d8      	ldr	r0, [r3, #12]
  6a:	28ff      	cmp	r0, #255
  6c:	bf8c      	ite	hi
  6e:	2000      	movhi	r0, #0
  70:	2001      	movls	r0, #1
  72:	f7ff fffe 	bl	0 <assert_param>
  76:	6923      	ldr	r3, [r4, #16]
  78:	6818      	ldr	r0, [r3, #0]
  7a:	28ff      	cmp	r0, #255
  7c:	bf8c      	ite	hi
  7e:	2000      	movhi	r0, #0
  80:	2001      	movls	r0, #1
  82:	f7ff fffe 	bl	0 <assert_param>
  86:	6923      	ldr	r3, [r4, #16]
  88:	6858      	ldr	r0, [r3, #4]
  8a:	28ff      	cmp	r0, #255
  8c:	bf8c      	ite	hi
  8e:	2000      	movhi	r0, #0
  90:	2001      	movls	r0, #1
  92:	f7ff fffe 	bl	0 <assert_param>
  96:	6923      	ldr	r3, [r4, #16]
  98:	6898      	ldr	r0, [r3, #8]
  9a:	28ff      	cmp	r0, #255
  9c:	bf8c      	ite	hi
  9e:	2000      	movhi	r0, #0
  a0:	2001      	movls	r0, #1
  a2:	f7ff fffe 	bl	0 <assert_param>
  a6:	6923      	ldr	r3, [r4, #16]
  a8:	68d8      	ldr	r0, [r3, #12]
  aa:	28ff      	cmp	r0, #255
  ac:	bf8c      	ite	hi
  ae:	2000      	movhi	r0, #0
  b0:	2001      	movls	r0, #1
  b2:	f7ff fffe 	bl	0 <assert_param>
  b6:	6963      	ldr	r3, [r4, #20]
  b8:	6818      	ldr	r0, [r3, #0]
  ba:	28ff      	cmp	r0, #255
  bc:	bf8c      	ite	hi
  be:	2000      	movhi	r0, #0
  c0:	2001      	movls	r0, #1
  c2:	f7ff fffe 	bl	0 <assert_param>
  c6:	6963      	ldr	r3, [r4, #20]
  c8:	6858      	ldr	r0, [r3, #4]
  ca:	28ff      	cmp	r0, #255
  cc:	bf8c      	ite	hi
  ce:	2000      	movhi	r0, #0
  d0:	2001      	movls	r0, #1
  d2:	f7ff fffe 	bl	0 <assert_param>
  d6:	6963      	ldr	r3, [r4, #20]
  d8:	6898      	ldr	r0, [r3, #8]
  da:	28ff      	cmp	r0, #255
  dc:	bf8c      	ite	hi
  de:	2000      	movhi	r0, #0
  e0:	2001      	movls	r0, #1
  e2:	f7ff fffe 	bl	0 <assert_param>
  e6:	6963      	ldr	r3, [r4, #20]
  e8:	68d8      	ldr	r0, [r3, #12]
  ea:	28ff      	cmp	r0, #255
  ec:	bf8c      	ite	hi
  ee:	2000      	movhi	r0, #0
  f0:	2001      	movls	r0, #1
  f2:	f7ff fffe 	bl	0 <assert_param>
  f6:	6823      	ldr	r3, [r4, #0]
  f8:	f043 0310 	orr.w	r3, r3, #16	; 0x10
  fc:	6862      	ldr	r2, [r4, #4]
  fe:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
 102:	68a2      	ldr	r2, [r4, #8]
 104:	ea43 3342 	orr.w	r3, r3, r2, lsl #13
 108:	f240 00a0 	movw	r0, #160	; 0xa0
 10c:	f2ca 0000 	movt	r0, #40960	; 0xa000
 110:	6003      	str	r3, [r0, #0]
 112:	68e1      	ldr	r1, [r4, #12]
 114:	684a      	ldr	r2, [r1, #4]
 116:	688b      	ldr	r3, [r1, #8]
 118:	ea4f 4303 	mov.w	r3, r3, lsl #16
 11c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 120:	680a      	ldr	r2, [r1, #0]
 122:	ea43 0302 	orr.w	r3, r3, r2
 126:	68ca      	ldr	r2, [r1, #12]
 128:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 12c:	6083      	str	r3, [r0, #8]
 12e:	6921      	ldr	r1, [r4, #16]
 130:	684a      	ldr	r2, [r1, #4]
 132:	688b      	ldr	r3, [r1, #8]
 134:	ea4f 4303 	mov.w	r3, r3, lsl #16
 138:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 13c:	680a      	ldr	r2, [r1, #0]
 13e:	ea43 0302 	orr.w	r3, r3, r2
 142:	68ca      	ldr	r2, [r1, #12]
 144:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 148:	60c3      	str	r3, [r0, #12]
 14a:	6961      	ldr	r1, [r4, #20]
 14c:	684a      	ldr	r2, [r1, #4]
 14e:	688b      	ldr	r3, [r1, #8]
 150:	ea4f 4303 	mov.w	r3, r3, lsl #16
 154:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 158:	680a      	ldr	r2, [r1, #0]
 15a:	ea43 0302 	orr.w	r3, r3, r2
 15e:	68ca      	ldr	r2, [r1, #12]
 160:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 164:	6103      	str	r3, [r0, #16]
 166:	bd10      	pop	{r4, pc}
Disassembly of section .text.FSMC_NANDInit:

00000000 <FSMC_NANDInit>:
FSMC_NANDInit():
   0:	b570      	push	{r4, r5, r6, lr}
   2:	4604      	mov	r4, r0
   4:	6803      	ldr	r3, [r0, #0]
   6:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
   a:	bf14      	ite	ne
   c:	2000      	movne	r0, #0
   e:	2001      	moveq	r0, #1
  10:	2b10      	cmp	r3, #16
  12:	bf08      	it	eq
  14:	f040 0001 	orreq.w	r0, r0, #1	; 0x1
  18:	f7ff fffe 	bl	0 <assert_param>
  1c:	6863      	ldr	r3, [r4, #4]
  1e:	2b02      	cmp	r3, #2
  20:	bf14      	ite	ne
  22:	2000      	movne	r0, #0
  24:	2001      	moveq	r0, #1
  26:	2b00      	cmp	r3, #0
  28:	bf08      	it	eq
  2a:	f040 0001 	orreq.w	r0, r0, #1	; 0x1
  2e:	f7ff fffe 	bl	0 <assert_param>
  32:	68a3      	ldr	r3, [r4, #8]
  34:	2b10      	cmp	r3, #16
  36:	bf14      	ite	ne
  38:	2000      	movne	r0, #0
  3a:	2001      	moveq	r0, #1
  3c:	2b00      	cmp	r3, #0
  3e:	bf08      	it	eq
  40:	f040 0001 	orreq.w	r0, r0, #1	; 0x1
  44:	f7ff fffe 	bl	0 <assert_param>
  48:	68e3      	ldr	r3, [r4, #12]
  4a:	2b40      	cmp	r3, #64
  4c:	bf14      	ite	ne
  4e:	2000      	movne	r0, #0
  50:	2001      	moveq	r0, #1
  52:	2b00      	cmp	r3, #0
  54:	bf08      	it	eq
  56:	f040 0001 	orreq.w	r0, r0, #1	; 0x1
  5a:	f7ff fffe 	bl	0 <assert_param>
  5e:	6920      	ldr	r0, [r4, #16]
  60:	f5b0 3f00 	cmp.w	r0, #131072	; 0x20000
  64:	bf14      	ite	ne
  66:	2300      	movne	r3, #0
  68:	2301      	moveq	r3, #1
  6a:	2800      	cmp	r0, #0
  6c:	bf08      	it	eq
  6e:	f043 0301 	orreq.w	r3, r3, #1	; 0x1
  72:	b973      	cbnz	r3, 92 <FSMC_NANDInit+0x92>
  74:	f5b0 2f80 	cmp.w	r0, #262144	; 0x40000
  78:	d00b      	beq.n	92 <FSMC_NANDInit+0x92>
  7a:	f5b0 2fc0 	cmp.w	r0, #393216	; 0x60000
  7e:	d008      	beq.n	92 <FSMC_NANDInit+0x92>
  80:	f5b0 2f00 	cmp.w	r0, #524288	; 0x80000
  84:	d005      	beq.n	92 <FSMC_NANDInit+0x92>
  86:	f5b0 2f20 	cmp.w	r0, #655360	; 0xa0000
  8a:	bf14      	ite	ne
  8c:	2000      	movne	r0, #0
  8e:	2001      	moveq	r0, #1
  90:	e001      	b.n	96 <FSMC_NANDInit+0x96>
  92:	f04f 0001 	mov.w	r0, #1	; 0x1
  96:	f7ff fffe 	bl	0 <assert_param>
  9a:	6960      	ldr	r0, [r4, #20]
  9c:	28ff      	cmp	r0, #255
  9e:	bf8c      	ite	hi
  a0:	2000      	movhi	r0, #0
  a2:	2001      	movls	r0, #1
  a4:	f7ff fffe 	bl	0 <assert_param>
  a8:	69a0      	ldr	r0, [r4, #24]
  aa:	28ff      	cmp	r0, #255
  ac:	bf8c      	ite	hi
  ae:	2000      	movhi	r0, #0
  b0:	2001      	movls	r0, #1
  b2:	f7ff fffe 	bl	0 <assert_param>
  b6:	69e3      	ldr	r3, [r4, #28]
  b8:	6818      	ldr	r0, [r3, #0]
  ba:	28ff      	cmp	r0, #255
  bc:	bf8c      	ite	hi
  be:	2000      	movhi	r0, #0
  c0:	2001      	movls	r0, #1
  c2:	f7ff fffe 	bl	0 <assert_param>
  c6:	69e3      	ldr	r3, [r4, #28]
  c8:	6858      	ldr	r0, [r3, #4]
  ca:	28ff      	cmp	r0, #255
  cc:	bf8c      	ite	hi
  ce:	2000      	movhi	r0, #0
  d0:	2001      	movls	r0, #1
  d2:	f7ff fffe 	bl	0 <assert_param>
  d6:	69e3      	ldr	r3, [r4, #28]
  d8:	6898      	ldr	r0, [r3, #8]
  da:	28ff      	cmp	r0, #255
  dc:	bf8c      	ite	hi
  de:	2000      	movhi	r0, #0
  e0:	2001      	movls	r0, #1
  e2:	f7ff fffe 	bl	0 <assert_param>
  e6:	69e3      	ldr	r3, [r4, #28]
  e8:	68d8      	ldr	r0, [r3, #12]
  ea:	28ff      	cmp	r0, #255
  ec:	bf8c      	ite	hi
  ee:	2000      	movhi	r0, #0
  f0:	2001      	movls	r0, #1
  f2:	f7ff fffe 	bl	0 <assert_param>
  f6:	6a23      	ldr	r3, [r4, #32]
  f8:	6818      	ldr	r0, [r3, #0]
  fa:	28ff      	cmp	r0, #255
  fc:	bf8c      	ite	hi
  fe:	2000      	movhi	r0, #0
 100:	2001      	movls	r0, #1
 102:	f7ff fffe 	bl	0 <assert_param>
 106:	6a23      	ldr	r3, [r4, #32]
 108:	6858      	ldr	r0, [r3, #4]
 10a:	28ff      	cmp	r0, #255
 10c:	bf8c      	ite	hi
 10e:	2000      	movhi	r0, #0
 110:	2001      	movls	r0, #1
 112:	f7ff fffe 	bl	0 <assert_param>
 116:	6a23      	ldr	r3, [r4, #32]
 118:	6898      	ldr	r0, [r3, #8]
 11a:	28ff      	cmp	r0, #255
 11c:	bf8c      	ite	hi
 11e:	2000      	movhi	r0, #0
 120:	2001      	movls	r0, #1
 122:	f7ff fffe 	bl	0 <assert_param>
 126:	6a23      	ldr	r3, [r4, #32]
 128:	68d8      	ldr	r0, [r3, #12]
 12a:	28ff      	cmp	r0, #255
 12c:	bf8c      	ite	hi
 12e:	2000      	movhi	r0, #0
 130:	2001      	movls	r0, #1
 132:	f7ff fffe 	bl	0 <assert_param>
 136:	6863      	ldr	r3, [r4, #4]
 138:	68a2      	ldr	r2, [r4, #8]
 13a:	ea43 0302 	orr.w	r3, r3, r2
 13e:	f043 0308 	orr.w	r3, r3, #8	; 0x8
 142:	68e2      	ldr	r2, [r4, #12]
 144:	ea43 0302 	orr.w	r3, r3, r2
 148:	6922      	ldr	r2, [r4, #16]
 14a:	ea43 0302 	orr.w	r3, r3, r2
 14e:	6962      	ldr	r2, [r4, #20]
 150:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
 154:	69a2      	ldr	r2, [r4, #24]
 156:	ea43 3542 	orr.w	r5, r3, r2, lsl #13
 15a:	69e1      	ldr	r1, [r4, #28]
 15c:	684a      	ldr	r2, [r1, #4]
 15e:	688b      	ldr	r3, [r1, #8]
 160:	ea4f 4303 	mov.w	r3, r3, lsl #16
 164:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 168:	680a      	ldr	r2, [r1, #0]
 16a:	ea43 0302 	orr.w	r3, r3, r2
 16e:	68ca      	ldr	r2, [r1, #12]
 170:	ea43 6002 	orr.w	r0, r3, r2, lsl #24
 174:	6a21      	ldr	r1, [r4, #32]
 176:	684a      	ldr	r2, [r1, #4]
 178:	688b      	ldr	r3, [r1, #8]
 17a:	ea4f 4303 	mov.w	r3, r3, lsl #16
 17e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 182:	680a      	ldr	r2, [r1, #0]
 184:	ea43 0302 	orr.w	r3, r3, r2
 188:	68ca      	ldr	r2, [r1, #12]
 18a:	ea43 6202 	orr.w	r2, r3, r2, lsl #24
 18e:	6823      	ldr	r3, [r4, #0]
 190:	2b10      	cmp	r3, #16
 192:	bf01      	itttt	eq
 194:	f240 0360 	movweq	r3, #96	; 0x60
 198:	f2ca 0300 	movteq	r3, #40960	; 0xa000
 19c:	601d      	streq	r5, [r3, #0]
 19e:	6098      	streq	r0, [r3, #8]
 1a0:	bf0f      	iteee	eq
 1a2:	60da      	streq	r2, [r3, #12]
 1a4:	f240 0380 	movwne	r3, #128	; 0x80
 1a8:	f2ca 0300 	movtne	r3, #40960	; 0xa000
 1ac:	601d      	strne	r5, [r3, #0]
 1ae:	bf1c      	itt	ne
 1b0:	6098      	strne	r0, [r3, #8]
 1b2:	60da      	strne	r2, [r3, #12]
 1b4:	bd70      	pop	{r4, r5, r6, pc}
 1b6:	46c0      	nop			(mov r8, r8)
Disassembly of section .text.FSMC_NORSRAMInit:

00000000 <FSMC_NORSRAMInit>:
FSMC_NORSRAMInit():
   0:	b570      	push	{r4, r5, r6, lr}
   2:	4604      	mov	r4, r0
   4:	6800      	ldr	r0, [r0, #0]
   6:	2802      	cmp	r0, #2
   8:	bf14      	ite	ne
   a:	2300      	movne	r3, #0
   c:	2301      	moveq	r3, #1
   e:	2800      	cmp	r0, #0
  10:	bf08      	it	eq
  12:	f043 0301 	orreq.w	r3, r3, #1	; 0x1
  16:	b933      	cbnz	r3, 26 <FSMC_NORSRAMInit+0x26>
  18:	2804      	cmp	r0, #4
  1a:	d004      	beq.n	26 <FSMC_NORSRAMInit+0x26>
  1c:	2806      	cmp	r0, #6
  1e:	bf14      	ite	ne
  20:	2000      	movne	r0, #0
  22:	2001      	moveq	r0, #1
  24:	e001      	b.n	2a <FSMC_NORSRAMInit+0x2a>
  26:	f04f 0001 	mov.w	r0, #1	; 0x1
  2a:	f7ff fffe 	bl	0 <assert_param>
  2e:	6863      	ldr	r3, [r4, #4]
  30:	2b02      	cmp	r3, #2
  32:	bf14      	ite	ne
  34:	2000      	movne	r0, #0
  36:	2001      	moveq	r0, #1
  38:	2b00      	cmp	r3, #0
  3a:	bf08      	it	eq
  3c:	f040 0001 	orreq.w	r0, r0, #1	; 0x1
  40:	f7ff fffe 	bl	0 <assert_param>
  44:	68a0      	ldr	r0, [r4, #8]
  46:	2804      	cmp	r0, #4
  48:	bf14      	ite	ne
  4a:	2300      	movne	r3, #0
  4c:	2301      	moveq	r3, #1
  4e:	2800      	cmp	r0, #0
  50:	bf08      	it	eq
  52:	f043 0301 	orreq.w	r3, r3, #1	; 0x1
  56:	b113      	cbz	r3, 5e <FSMC_NORSRAMInit+0x5e>
  58:	f04f 0001 	mov.w	r0, #1	; 0x1
  5c:	e003      	b.n	66 <FSMC_NORSRAMInit+0x66>
  5e:	2808      	cmp	r0, #8
  60:	bf14      	ite	ne
  62:	2000      	movne	r0, #0
  64:	2001      	moveq	r0, #1
  66:	f7ff fffe 	bl	0 <assert_param>
  6a:	68e3      	ldr	r3, [r4, #12]
  6c:	2b10      	cmp	r3, #16
  6e:	bf14      	ite	ne
  70:	2000      	movne	r0, #0
  72:	2001      	moveq	r0, #1
  74:	2b00      	cmp	r3, #0
  76:	bf08      	it	eq
  78:	f040 0001 	orreq.w	r0, r0, #1	; 0x1
  7c:	f7ff fffe 	bl	0 <assert_param>
  80:	6923      	ldr	r3, [r4, #16]
  82:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
  86:	bf14      	ite	ne
  88:	2000      	movne	r0, #0
  8a:	2001      	moveq	r0, #1
  8c:	2b00      	cmp	r3, #0
  8e:	bf08      	it	eq
  90:	f040 0001 	orreq.w	r0, r0, #1	; 0x1
  94:	f7ff fffe 	bl	0 <assert_param>
  98:	6963      	ldr	r3, [r4, #20]
  9a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  9e:	bf14      	ite	ne
  a0:	2000      	movne	r0, #0
  a2:	2001      	moveq	r0, #1
  a4:	2b00      	cmp	r3, #0
  a6:	bf08      	it	eq
  a8:	f040 0001 	orreq.w	r0, r0, #1	; 0x1
  ac:	f7ff fffe 	bl	0 <assert_param>
  b0:	69a3      	ldr	r3, [r4, #24]
  b2:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
  b6:	bf14      	ite	ne
  b8:	2000      	movne	r0, #0
  ba:	2001      	moveq	r0, #1
  bc:	2b00      	cmp	r3, #0
  be:	bf08      	it	eq
  c0:	f040 0001 	orreq.w	r0, r0, #1	; 0x1
  c4:	f7ff fffe 	bl	0 <assert_param>
  c8:	69e3      	ldr	r3, [r4, #28]
  ca:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
  ce:	bf14      	ite	ne
  d0:	2000      	movne	r0, #0
  d2:	2001      	moveq	r0, #1
  d4:	2b00      	cmp	r3, #0
  d6:	bf08      	it	eq
  d8:	f040 0001 	orreq.w	r0, r0, #1	; 0x1
  dc:	f7ff fffe 	bl	0 <assert_param>
  e0:	6a23      	ldr	r3, [r4, #32]
  e2:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
  e6:	bf14      	ite	ne
  e8:	2000      	movne	r0, #0
  ea:	2001      	moveq	r0, #1
  ec:	2b00      	cmp	r3, #0
  ee:	bf08      	it	eq
  f0:	f040 0001 	orreq.w	r0, r0, #1	; 0x1
  f4:	f7ff fffe 	bl	0 <assert_param>
  f8:	6a63      	ldr	r3, [r4, #36]
  fa:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
  fe:	bf14      	ite	ne
 100:	2000      	movne	r0, #0
 102:	2001      	moveq	r0, #1
 104:	2b00      	cmp	r3, #0
 106:	bf08      	it	eq
 108:	f040 0001 	orreq.w	r0, r0, #1	; 0x1
 10c:	f7ff fffe 	bl	0 <assert_param>
 110:	6aa3      	ldr	r3, [r4, #40]
 112:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 116:	bf14      	ite	ne
 118:	2000      	movne	r0, #0
 11a:	2001      	moveq	r0, #1
 11c:	2b00      	cmp	r3, #0
 11e:	bf08      	it	eq
 120:	f040 0001 	orreq.w	r0, r0, #1	; 0x1
 124:	f7ff fffe 	bl	0 <assert_param>
 128:	6ae3      	ldr	r3, [r4, #44]
 12a:	f5b3 2f00 	cmp.w	r3, #524288	; 0x80000
 12e:	bf14      	ite	ne
 130:	2000      	movne	r0, #0
 132:	2001      	moveq	r0, #1
 134:	2b00      	cmp	r3, #0
 136:	bf08      	it	eq
 138:	f040 0001 	orreq.w	r0, r0, #1	; 0x1
 13c:	f7ff fffe 	bl	0 <assert_param>
 140:	6b23      	ldr	r3, [r4, #48]
 142:	6818      	ldr	r0, [r3, #0]
 144:	280f      	cmp	r0, #15
 146:	bf8c      	ite	hi
 148:	2000      	movhi	r0, #0
 14a:	2001      	movls	r0, #1
 14c:	f7ff fffe 	bl	0 <assert_param>
 150:	6b23      	ldr	r3, [r4, #48]
 152:	6858      	ldr	r0, [r3, #4]
 154:	280f      	cmp	r0, #15
 156:	bf8c      	ite	hi
 158:	2000      	movhi	r0, #0
 15a:	2001      	movls	r0, #1
 15c:	f7ff fffe 	bl	0 <assert_param>
 160:	6b23      	ldr	r3, [r4, #48]
 162:	6898      	ldr	r0, [r3, #8]
 164:	f100 30ff 	add.w	r0, r0, #4294967295	; 0xffffffff
 168:	28fe      	cmp	r0, #254
 16a:	bf8c      	ite	hi
 16c:	2000      	movhi	r0, #0
 16e:	2001      	movls	r0, #1
 170:	f7ff fffe 	bl	0 <assert_param>
 174:	6b23      	ldr	r3, [r4, #48]
 176:	68d8      	ldr	r0, [r3, #12]
 178:	280f      	cmp	r0, #15
 17a:	bf8c      	ite	hi
 17c:	2000      	movhi	r0, #0
 17e:	2001      	movls	r0, #1
 180:	f7ff fffe 	bl	0 <assert_param>
 184:	6b23      	ldr	r3, [r4, #48]
 186:	6918      	ldr	r0, [r3, #16]
 188:	280f      	cmp	r0, #15
 18a:	bf8c      	ite	hi
 18c:	2000      	movhi	r0, #0
 18e:	2001      	movls	r0, #1
 190:	f7ff fffe 	bl	0 <assert_param>
 194:	6b23      	ldr	r3, [r4, #48]
 196:	6958      	ldr	r0, [r3, #20]
 198:	280f      	cmp	r0, #15
 19a:	bf8c      	ite	hi
 19c:	2000      	movhi	r0, #0
 19e:	2001      	movls	r0, #1
 1a0:	f7ff fffe 	bl	0 <assert_param>
 1a4:	6b23      	ldr	r3, [r4, #48]
 1a6:	6998      	ldr	r0, [r3, #24]
 1a8:	f1b0 5f80 	cmp.w	r0, #268435456	; 0x10000000
 1ac:	bf14      	ite	ne
 1ae:	2300      	movne	r3, #0
 1b0:	2301      	moveq	r3, #1
 1b2:	2800      	cmp	r0, #0
 1b4:	bf08      	it	eq
 1b6:	f043 0301 	orreq.w	r3, r3, #1	; 0x1
 1ba:	b943      	cbnz	r3, 1ce <FSMC_NORSRAMInit+0x1ce>
 1bc:	f1b0 5f00 	cmp.w	r0, #536870912	; 0x20000000
 1c0:	d005      	beq.n	1ce <FSMC_NORSRAMInit+0x1ce>
 1c2:	f1b0 5f40 	cmp.w	r0, #805306368	; 0x30000000
 1c6:	bf14      	ite	ne
 1c8:	2000      	movne	r0, #0
 1ca:	2001      	moveq	r0, #1
 1cc:	e001      	b.n	1d2 <FSMC_NORSRAMInit+0x1d2>
 1ce:	f04f 0001 	mov.w	r0, #1	; 0x1
 1d2:	f7ff fffe 	bl	0 <assert_param>
 1d6:	6825      	ldr	r5, [r4, #0]
 1d8:	68a1      	ldr	r1, [r4, #8]
 1da:	6aa6      	ldr	r6, [r4, #40]
 1dc:	6863      	ldr	r3, [r4, #4]
 1de:	ea41 0303 	orr.w	r3, r1, r3
 1e2:	68e2      	ldr	r2, [r4, #12]
 1e4:	ea43 0302 	orr.w	r3, r3, r2
 1e8:	6922      	ldr	r2, [r4, #16]
 1ea:	ea43 0302 	orr.w	r3, r3, r2
 1ee:	6962      	ldr	r2, [r4, #20]
 1f0:	ea43 0302 	orr.w	r3, r3, r2
 1f4:	69a2      	ldr	r2, [r4, #24]
 1f6:	ea43 0302 	orr.w	r3, r3, r2
 1fa:	69e2      	ldr	r2, [r4, #28]
 1fc:	ea43 0302 	orr.w	r3, r3, r2
 200:	6a22      	ldr	r2, [r4, #32]
 202:	ea43 0302 	orr.w	r3, r3, r2
 206:	6a62      	ldr	r2, [r4, #36]
 208:	ea43 0302 	orr.w	r3, r3, r2
 20c:	ea43 0306 	orr.w	r3, r3, r6
 210:	6ae2      	ldr	r2, [r4, #44]
 212:	ea43 0302 	orr.w	r3, r3, r2
 216:	f04f 4220 	mov.w	r2, #2684354560	; 0xa0000000
 21a:	f842 3025 	str.w	r3, [r2, r5, lsl #2]
 21e:	2908      	cmp	r1, #8
 220:	bf02      	ittt	eq
 222:	f852 3025 	ldreq.w	r3, [r2, r5, lsl #2]
 226:	f043 0340 	orreq.w	r3, r3, #64	; 0x40
 22a:	f842 3025 	streq.w	r3, [r2, r5, lsl #2]
 22e:	f105 0001 	add.w	r0, r5, #1	; 0x1
 232:	6b22      	ldr	r2, [r4, #48]
 234:	6993      	ldr	r3, [r2, #24]
 236:	6811      	ldr	r1, [r2, #0]
 238:	ea43 0301 	orr.w	r3, r3, r1
 23c:	6851      	ldr	r1, [r2, #4]
 23e:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
 242:	6891      	ldr	r1, [r2, #8]
 244:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 248:	68d1      	ldr	r1, [r2, #12]
 24a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 24e:	6911      	ldr	r1, [r2, #16]
 250:	ea43 5301 	orr.w	r3, r3, r1, lsl #20
 254:	6952      	ldr	r2, [r2, #20]
 256:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 25a:	f04f 4220 	mov.w	r2, #2684354560	; 0xa0000000
 25e:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
 262:	f5b6 4f80 	cmp.w	r6, #16384	; 0x4000
 266:	bf1f      	itttt	ne
 268:	f240 1304 	movwne	r3, #260	; 0x104
 26c:	f2ca 0300 	movtne	r3, #40960	; 0xa000
 270:	f06f 4270 	mvnne.w	r2, #4026531840	; 0xf0000000
 274:	f843 2025 	strne.w	r2, [r3, r5, lsl #2]
 278:	d15a      	bne.n	330 <FSMC_NORSRAMInit+0x330>
 27a:	6b63      	ldr	r3, [r4, #52]
 27c:	6818      	ldr	r0, [r3, #0]
 27e:	280f      	cmp	r0, #15
 280:	bf8c      	ite	hi
 282:	2000      	movhi	r0, #0
 284:	2001      	movls	r0, #1
 286:	f7ff fffe 	bl	0 <assert_param>
 28a:	6b63      	ldr	r3, [r4, #52]
 28c:	6858      	ldr	r0, [r3, #4]
 28e:	280f      	cmp	r0, #15
 290:	bf8c      	ite	hi
 292:	2000      	movhi	r0, #0
 294:	2001      	movls	r0, #1
 296:	f7ff fffe 	bl	0 <assert_param>
 29a:	6b63      	ldr	r3, [r4, #52]
 29c:	6898      	ldr	r0, [r3, #8]
 29e:	f100 30ff 	add.w	r0, r0, #4294967295	; 0xffffffff
 2a2:	28fe      	cmp	r0, #254
 2a4:	bf8c      	ite	hi
 2a6:	2000      	movhi	r0, #0
 2a8:	2001      	movls	r0, #1
 2aa:	f7ff fffe 	bl	0 <assert_param>
 2ae:	6b63      	ldr	r3, [r4, #52]
 2b0:	6918      	ldr	r0, [r3, #16]
 2b2:	280f      	cmp	r0, #15
 2b4:	bf8c      	ite	hi
 2b6:	2000      	movhi	r0, #0
 2b8:	2001      	movls	r0, #1
 2ba:	f7ff fffe 	bl	0 <assert_param>
 2be:	6b63      	ldr	r3, [r4, #52]
 2c0:	6958      	ldr	r0, [r3, #20]
 2c2:	280f      	cmp	r0, #15
 2c4:	bf8c      	ite	hi
 2c6:	2000      	movhi	r0, #0
 2c8:	2001      	movls	r0, #1
 2ca:	f7ff fffe 	bl	0 <assert_param>
 2ce:	6b63      	ldr	r3, [r4, #52]
 2d0:	6998      	ldr	r0, [r3, #24]
 2d2:	f1b0 5f80 	cmp.w	r0, #268435456	; 0x10000000
 2d6:	bf14      	ite	ne
 2d8:	2300      	movne	r3, #0
 2da:	2301      	moveq	r3, #1
 2dc:	2800      	cmp	r0, #0
 2de:	bf08      	it	eq
 2e0:	f043 0301 	orreq.w	r3, r3, #1	; 0x1
 2e4:	b943      	cbnz	r3, 2f8 <FSMC_NORSRAMInit+0x2f8>
 2e6:	f1b0 5f00 	cmp.w	r0, #536870912	; 0x20000000
 2ea:	d005      	beq.n	2f8 <FSMC_NORSRAMInit+0x2f8>
 2ec:	f1b0 5f40 	cmp.w	r0, #805306368	; 0x30000000
 2f0:	bf14      	ite	ne
 2f2:	2000      	movne	r0, #0
 2f4:	2001      	moveq	r0, #1
 2f6:	e001      	b.n	2fc <FSMC_NORSRAMInit+0x2fc>
 2f8:	f04f 0001 	mov.w	r0, #1	; 0x1
 2fc:	f7ff fffe 	bl	0 <assert_param>
 300:	6820      	ldr	r0, [r4, #0]
 302:	6b61      	ldr	r1, [r4, #52]
 304:	698a      	ldr	r2, [r1, #24]
 306:	680b      	ldr	r3, [r1, #0]
 308:	ea42 0203 	orr.w	r2, r2, r3
 30c:	684b      	ldr	r3, [r1, #4]
 30e:	ea42 1203 	orr.w	r2, r2, r3, lsl #4
 312:	688b      	ldr	r3, [r1, #8]
 314:	ea42 2203 	orr.w	r2, r2, r3, lsl #8
 318:	690b      	ldr	r3, [r1, #16]
 31a:	ea42 5203 	orr.w	r2, r2, r3, lsl #20
 31e:	694b      	ldr	r3, [r1, #20]
 320:	ea42 6203 	orr.w	r2, r2, r3, lsl #24
 324:	f240 1304 	movw	r3, #260	; 0x104
 328:	f2ca 0300 	movt	r3, #40960	; 0xa000
 32c:	f843 2020 	str.w	r2, [r3, r0, lsl #2]
 330:	bd70      	pop	{r4, r5, r6, pc}
 332:	46c0      	nop			(mov r8, r8)
Disassembly of section .text.FSMC_NANDDeInit:

00000000 <FSMC_NANDDeInit>:
FSMC_NANDDeInit():
   0:	b510      	push	{r4, lr}
   2:	4604      	mov	r4, r0
   4:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
   8:	bf14      	ite	ne
   a:	2000      	movne	r0, #0
   c:	2001      	moveq	r0, #1
   e:	2c10      	cmp	r4, #16
  10:	bf08      	it	eq
  12:	f040 0001 	orreq.w	r0, r0, #1	; 0x1
  16:	f7ff fffe 	bl	0 <assert_param>
  1a:	2c10      	cmp	r4, #16
  1c:	d10e      	bne.n	3c <assert_param+0x3c>
  1e:	f240 0260 	movw	r2, #96	; 0x60
  22:	f2ca 0200 	movt	r2, #40960	; 0xa000
  26:	f04f 0318 	mov.w	r3, #24	; 0x18
  2a:	6013      	str	r3, [r2, #0]
  2c:	f103 0328 	add.w	r3, r3, #40	; 0x28
  30:	6053      	str	r3, [r2, #4]
  32:	f04f 33fc 	mov.w	r3, #4244438268	; 0xfcfcfcfc
  36:	6093      	str	r3, [r2, #8]
  38:	60d3      	str	r3, [r2, #12]
  3a:	e00d      	b.n	58 <assert_param+0x58>
  3c:	f240 0280 	movw	r2, #128	; 0x80
  40:	f2ca 0200 	movt	r2, #40960	; 0xa000
  44:	f04f 0318 	mov.w	r3, #24	; 0x18
  48:	6013      	str	r3, [r2, #0]
  4a:	f103 0328 	add.w	r3, r3, #40	; 0x28
  4e:	6053      	str	r3, [r2, #4]
  50:	f04f 33fc 	mov.w	r3, #4244438268	; 0xfcfcfcfc
  54:	6093      	str	r3, [r2, #8]
  56:	60d3      	str	r3, [r2, #12]
  58:	bd10      	pop	{r4, pc}
  5a:	46c0      	nop			(mov r8, r8)
Disassembly of section .text.FSMC_NORSRAMDeInit:

00000000 <FSMC_NORSRAMDeInit>:
FSMC_NORSRAMDeInit():
   0:	b570      	push	{r4, r5, r6, lr}
   2:	4604      	mov	r4, r0
   4:	f1d0 0501 	rsbs	r5, r0, #1	; 0x1
   8:	bf38      	it	cc
   a:	2500      	movcc	r5, #0
   c:	2802      	cmp	r0, #2
   e:	bf14      	ite	ne
  10:	462b      	movne	r3, r5
  12:	f045 0301 	orreq.w	r3, r5, #1	; 0x1
  16:	b113      	cbz	r3, 1e <FSMC_NORSRAMDeInit+0x1e>
  18:	f04f 0001 	mov.w	r0, #1	; 0x1
  1c:	e008      	b.n	30 <FSMC_NORSRAMDeInit+0x30>
  1e:	2806      	cmp	r0, #6
  20:	bf14      	ite	ne
  22:	2300      	movne	r3, #0
  24:	2301      	moveq	r3, #1
  26:	2804      	cmp	r0, #4
  28:	bf14      	ite	ne
  2a:	4618      	movne	r0, r3
  2c:	f043 0001 	orreq.w	r0, r3, #1	; 0x1
  30:	f7ff fffe 	bl	0 <assert_param>
  34:	b135      	cbz	r5, 44 <assert_param+0x44>
  36:	f243 02db 	movw	r2, #12507	; 0x30db
  3a:	f04f 4320 	mov.w	r3, #2684354560	; 0xa0000000
  3e:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
  42:	e005      	b.n	50 <assert_param+0x50>
  44:	f243 02d2 	movw	r2, #12498	; 0x30d2
  48:	f04f 4320 	mov.w	r3, #2684354560	; 0xa0000000
  4c:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
  50:	f104 0201 	add.w	r2, r4, #1	; 0x1
  54:	f06f 4170 	mvn.w	r1, #4026531840	; 0xf0000000
  58:	f04f 4320 	mov.w	r3, #2684354560	; 0xa0000000
  5c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  60:	f240 1304 	movw	r3, #260	; 0x104
  64:	f2ca 0300 	movt	r3, #40960	; 0xa000
  68:	f843 1024 	str.w	r1, [r3, r4, lsl #2]
  6c:	bd70      	pop	{r4, r5, r6, pc}
  6e:	46c0      	nop			(mov r8, r8)
