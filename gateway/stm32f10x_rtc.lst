
D:\cortex\gateway\stm32f10x_rtc.o:     file format elf32-littlearm
D:\cortex\gateway\stm32f10x_rtc.o

Disassembly of section .text.RTC_EnterConfigMode:

00000000 <RTC_EnterConfigMode>:
RTC_EnterConfigMode():
   0:	f642 0200 	movw	r2, #10240	; 0x2800
   4:	f2c4 0200 	movt	r2, #16384	; 0x4000
   8:	8893      	ldrh	r3, [r2, #4]
   a:	b29b      	uxth	r3, r3
   c:	f043 0310 	orr.w	r3, r3, #16	; 0x10
  10:	8093      	strh	r3, [r2, #4]
  12:	4770      	bx	lr
Disassembly of section .text.RTC_ExitConfigMode:

00000000 <RTC_ExitConfigMode>:
RTC_ExitConfigMode():
   0:	f642 0200 	movw	r2, #10240	; 0x2800
   4:	f2c4 0200 	movt	r2, #16384	; 0x4000
   8:	8893      	ldrh	r3, [r2, #4]
   a:	f023 0310 	bic.w	r3, r3, #16	; 0x10
   e:	ea4f 4303 	mov.w	r3, r3, lsl #16
  12:	ea4f 4313 	mov.w	r3, r3, lsr #16
  16:	8093      	strh	r3, [r2, #4]
  18:	4770      	bx	lr
  1a:	46c0      	nop			(mov r8, r8)
Disassembly of section .text.RTC_GetCounter:

00000000 <RTC_GetCounter>:
RTC_GetCounter():
   0:	f642 0300 	movw	r3, #10240	; 0x2800
   4:	f2c4 0300 	movt	r3, #16384	; 0x4000
   8:	8b98      	ldrh	r0, [r3, #28]
   a:	b280      	uxth	r0, r0
   c:	8b1b      	ldrh	r3, [r3, #24]
   e:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
  12:	4770      	bx	lr
Disassembly of section .text.RTC_SetCounter:

00000000 <RTC_SetCounter>:
RTC_SetCounter():
   0:	b510      	push	{r4, lr}
   2:	4604      	mov	r4, r0
   4:	f7ff fffe 	bl	0 <RTC_SetCounter>
   8:	ea4f 4214 	mov.w	r2, r4, lsr #16
   c:	f642 0300 	movw	r3, #10240	; 0x2800
  10:	f2c4 0300 	movt	r3, #16384	; 0x4000
  14:	831a      	strh	r2, [r3, #24]
  16:	b2a4      	uxth	r4, r4
  18:	839c      	strh	r4, [r3, #28]
  1a:	f7ff fffe 	bl	0 <RTC_SetCounter>
  1e:	bd10      	pop	{r4, pc}
Disassembly of section .text.RTC_SetAlarm:

00000000 <RTC_SetAlarm>:
RTC_SetAlarm():
   0:	b510      	push	{r4, lr}
   2:	4604      	mov	r4, r0
   4:	f7ff fffe 	bl	0 <RTC_SetAlarm>
   8:	ea4f 4214 	mov.w	r2, r4, lsr #16
   c:	f642 0300 	movw	r3, #10240	; 0x2800
  10:	f2c4 0300 	movt	r3, #16384	; 0x4000
  14:	841a      	strh	r2, [r3, #32]
  16:	b2a4      	uxth	r4, r4
  18:	849c      	strh	r4, [r3, #36]
  1a:	f7ff fffe 	bl	0 <RTC_SetAlarm>
  1e:	bd10      	pop	{r4, pc}
Disassembly of section .text.RTC_GetDivider:

00000000 <RTC_GetDivider>:
RTC_GetDivider():
   0:	f642 0300 	movw	r3, #10240	; 0x2800
   4:	f2c4 0300 	movt	r3, #16384	; 0x4000
   8:	8a1a      	ldrh	r2, [r3, #16]
   a:	f002 020f 	and.w	r2, r2, #15	; 0xf
   e:	8a98      	ldrh	r0, [r3, #20]
  10:	b280      	uxth	r0, r0
  12:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
  16:	4770      	bx	lr
Disassembly of section .text.RTC_WaitForLastTask:

00000000 <RTC_WaitForLastTask>:
RTC_WaitForLastTask():
   0:	f642 0100 	movw	r1, #10240	; 0x2800
   4:	460a      	mov	r2, r1
   6:	f2c4 0200 	movt	r2, #16384	; 0x4000
   a:	8893      	ldrh	r3, [r2, #4]
   c:	f013 0f20 	tst.w	r3, #32	; 0x20
  10:	d0fb      	beq.n	a <RTC_WaitForLastTask+0xa>
  12:	4770      	bx	lr
Disassembly of section .text.RTC_WaitForSynchro:

00000000 <RTC_WaitForSynchro>:
RTC_WaitForSynchro():
   0:	f642 0300 	movw	r3, #10240	; 0x2800
   4:	f2c4 0300 	movt	r3, #16384	; 0x4000
   8:	889a      	ldrh	r2, [r3, #4]
   a:	f022 0208 	bic.w	r2, r2, #8	; 0x8
   e:	ea4f 4202 	mov.w	r2, r2, lsl #16
  12:	ea4f 4212 	mov.w	r2, r2, lsr #16
  16:	809a      	strh	r2, [r3, #4]
  18:	f642 0300 	movw	r3, #10240	; 0x2800
  1c:	461a      	mov	r2, r3
  1e:	f2c4 0200 	movt	r2, #16384	; 0x4000
  22:	8893      	ldrh	r3, [r2, #4]
  24:	f013 0f08 	tst.w	r3, #8	; 0x8
  28:	d0fb      	beq.n	22 <RTC_WaitForSynchro+0x22>
  2a:	4770      	bx	lr
Disassembly of section .text.RTC_ClearITPendingBit:

00000000 <RTC_ClearITPendingBit>:
RTC_ClearITPendingBit():
   0:	b510      	push	{r4, lr}
   2:	4604      	mov	r4, r0
   4:	f64f 70f8 	movw	r0, #65528	; 0xfff8
   8:	f2c0 0000 	movt	r0, #0	; 0x0
   c:	ea04 0000 	and.w	r0, r4, r0
  10:	1e23      	subs	r3, r4, #0
  12:	bf18      	it	ne
  14:	2301      	movne	r3, #1
  16:	2800      	cmp	r0, #0
  18:	bf14      	ite	ne
  1a:	2000      	movne	r0, #0
  1c:	f003 0001 	andeq.w	r0, r3, #1	; 0x1
  20:	f7ff fffe 	bl	0 <assert_param>
  24:	f642 0200 	movw	r2, #10240	; 0x2800
  28:	f2c4 0200 	movt	r2, #16384	; 0x4000
  2c:	8893      	ldrh	r3, [r2, #4]
  2e:	b29b      	uxth	r3, r3
  30:	ea6f 0404 	mvn.w	r4, r4
  34:	ea03 0304 	and.w	r3, r3, r4
  38:	8093      	strh	r3, [r2, #4]
  3a:	bd10      	pop	{r4, pc}
Disassembly of section .text.RTC_GetITStatus:

00000000 <RTC_GetITStatus>:
RTC_GetITStatus():
   0:	b510      	push	{r4, lr}
   2:	4604      	mov	r4, r0
   4:	2802      	cmp	r0, #2
   6:	bf14      	ite	ne
   8:	2300      	movne	r3, #0
   a:	2301      	moveq	r3, #1
   c:	2804      	cmp	r0, #4
   e:	bf08      	it	eq
  10:	f043 0301 	orreq.w	r3, r3, #1	; 0x1
  14:	b113      	cbz	r3, 1c <RTC_GetITStatus+0x1c>
  16:	f04f 0001 	mov.w	r0, #1	; 0x1
  1a:	e003      	b.n	24 <RTC_GetITStatus+0x24>
  1c:	2801      	cmp	r0, #1
  1e:	bf14      	ite	ne
  20:	2000      	movne	r0, #0
  22:	2001      	moveq	r0, #1
  24:	f7ff fffe 	bl	0 <assert_param>
  28:	f642 0300 	movw	r3, #10240	; 0x2800
  2c:	f2c4 0300 	movt	r3, #16384	; 0x4000
  30:	889a      	ldrh	r2, [r3, #4]
  32:	b290      	uxth	r0, r2
  34:	881b      	ldrh	r3, [r3, #0]
  36:	421c      	tst	r4, r3
  38:	bf08      	it	eq
  3a:	2000      	moveq	r0, #0
  3c:	d006      	beq.n	4c <assert_param+0x4c>
  3e:	ea04 0300 	and.w	r3, r4, r0
  42:	f013 0fff 	tst.w	r3, #255	; 0xff
  46:	bf0c      	ite	eq
  48:	2000      	moveq	r0, #0
  4a:	2001      	movne	r0, #1
  4c:	bd10      	pop	{r4, pc}
  4e:	46c0      	nop			(mov r8, r8)
Disassembly of section .text.RTC_ClearFlag:

00000000 <RTC_ClearFlag>:
RTC_ClearFlag():
   0:	b510      	push	{r4, lr}
   2:	4604      	mov	r4, r0
   4:	f64f 70f0 	movw	r0, #65520	; 0xfff0
   8:	f2c0 0000 	movt	r0, #0	; 0x0
   c:	ea04 0000 	and.w	r0, r4, r0
  10:	1e23      	subs	r3, r4, #0
  12:	bf18      	it	ne
  14:	2301      	movne	r3, #1
  16:	2800      	cmp	r0, #0
  18:	bf14      	ite	ne
  1a:	2000      	movne	r0, #0
  1c:	f003 0001 	andeq.w	r0, r3, #1	; 0x1
  20:	f7ff fffe 	bl	0 <assert_param>
  24:	f642 0200 	movw	r2, #10240	; 0x2800
  28:	f2c4 0200 	movt	r2, #16384	; 0x4000
  2c:	8893      	ldrh	r3, [r2, #4]
  2e:	b29b      	uxth	r3, r3
  30:	ea6f 0404 	mvn.w	r4, r4
  34:	ea03 0304 	and.w	r3, r3, r4
  38:	8093      	strh	r3, [r2, #4]
  3a:	bd10      	pop	{r4, pc}
Disassembly of section .text.RTC_GetFlagStatus:

00000000 <RTC_GetFlagStatus>:
RTC_GetFlagStatus():
   0:	b510      	push	{r4, lr}
   2:	4604      	mov	r4, r0
   4:	2808      	cmp	r0, #8
   6:	bf14      	ite	ne
   8:	2300      	movne	r3, #0
   a:	2301      	moveq	r3, #1
   c:	2820      	cmp	r0, #32
   e:	bf08      	it	eq
  10:	f043 0301 	orreq.w	r3, r3, #1	; 0x1
  14:	b96b      	cbnz	r3, 32 <RTC_GetFlagStatus+0x32>
  16:	2802      	cmp	r0, #2
  18:	bf14      	ite	ne
  1a:	2300      	movne	r3, #0
  1c:	2301      	moveq	r3, #1
  1e:	2804      	cmp	r0, #4
  20:	bf08      	it	eq
  22:	f043 0301 	orreq.w	r3, r3, #1	; 0x1
  26:	b923      	cbnz	r3, 32 <RTC_GetFlagStatus+0x32>
  28:	2801      	cmp	r0, #1
  2a:	bf14      	ite	ne
  2c:	2000      	movne	r0, #0
  2e:	2001      	moveq	r0, #1
  30:	e001      	b.n	36 <RTC_GetFlagStatus+0x36>
  32:	f04f 0001 	mov.w	r0, #1	; 0x1
  36:	f7ff fffe 	bl	0 <assert_param>
  3a:	f642 0300 	movw	r3, #10240	; 0x2800
  3e:	f2c4 0300 	movt	r3, #16384	; 0x4000
  42:	889b      	ldrh	r3, [r3, #4]
  44:	421c      	tst	r4, r3
  46:	bf0c      	ite	eq
  48:	2000      	moveq	r0, #0
  4a:	2001      	movne	r0, #1
  4c:	bd10      	pop	{r4, pc}
  4e:	46c0      	nop			(mov r8, r8)
Disassembly of section .text.RTC_SetPrescaler:

00000000 <RTC_SetPrescaler>:
RTC_SetPrescaler():
   0:	b510      	push	{r4, lr}
   2:	4604      	mov	r4, r0
   4:	f5b0 1f80 	cmp.w	r0, #1048576	; 0x100000
   8:	bf2c      	ite	cs
   a:	2000      	movcs	r0, #0
   c:	2001      	movcc	r0, #1
   e:	f7ff fffe 	bl	0 <assert_param>
  12:	f7ff fffe 	bl	0 <RTC_SetPrescaler>
  16:	f404 2270 	and.w	r2, r4, #983040	; 0xf0000
  1a:	ea4f 4212 	mov.w	r2, r2, lsr #16
  1e:	f642 0300 	movw	r3, #10240	; 0x2800
  22:	f2c4 0300 	movt	r3, #16384	; 0x4000
  26:	811a      	strh	r2, [r3, #8]
  28:	b2a4      	uxth	r4, r4
  2a:	819c      	strh	r4, [r3, #12]
  2c:	f7ff fffe 	bl	0 <RTC_SetPrescaler>
  30:	bd10      	pop	{r4, pc}
  32:	46c0      	nop			(mov r8, r8)
Disassembly of section .text.RTC_ITConfig:

00000000 <RTC_ITConfig>:
RTC_ITConfig():
   0:	b570      	push	{r4, r5, r6, lr}
   2:	4605      	mov	r5, r0
   4:	460c      	mov	r4, r1
   6:	f64f 70f8 	movw	r0, #65528	; 0xfff8
   a:	f2c0 0000 	movt	r0, #0	; 0x0
   e:	ea05 0000 	and.w	r0, r5, r0
  12:	1e2b      	subs	r3, r5, #0
  14:	bf18      	it	ne
  16:	2301      	movne	r3, #1
  18:	2800      	cmp	r0, #0
  1a:	bf14      	ite	ne
  1c:	2000      	movne	r0, #0
  1e:	f003 0001 	andeq.w	r0, r3, #1	; 0x1
  22:	f7ff fffe 	bl	0 <assert_param>
  26:	2c01      	cmp	r4, #1
  28:	bf8c      	ite	hi
  2a:	2000      	movhi	r0, #0
  2c:	2001      	movls	r0, #1
  2e:	f7ff fffe 	bl	0 <assert_param>
  32:	b14c      	cbz	r4, 48 <assert_param+0x48>
  34:	f642 0200 	movw	r2, #10240	; 0x2800
  38:	f2c4 0200 	movt	r2, #16384	; 0x4000
  3c:	8813      	ldrh	r3, [r2, #0]
  3e:	b29b      	uxth	r3, r3
  40:	ea45 0303 	orr.w	r3, r5, r3
  44:	8013      	strh	r3, [r2, #0]
  46:	e00a      	b.n	5e <assert_param+0x5e>
  48:	f642 0300 	movw	r3, #10240	; 0x2800
  4c:	f2c4 0300 	movt	r3, #16384	; 0x4000
  50:	881a      	ldrh	r2, [r3, #0]
  52:	b292      	uxth	r2, r2
  54:	ea6f 0105 	mvn.w	r1, r5
  58:	ea02 0201 	and.w	r2, r2, r1
  5c:	801a      	strh	r2, [r3, #0]
  5e:	bd70      	pop	{r4, r5, r6, pc}
