
C:\cortex\dimmers\hex\stm32f10x_nvic.o:     file format elf32-littlearm
C:\cortex\dimmers\hex\stm32f10x_nvic.o


Disassembly of section .text.NVIC_DeInit:

00000000 <NVIC_DeInit>:
NVIC_DeInit():
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:40
*******************************************************************************/
void NVIC_DeInit(void)
{
  u32 index = 0;
  
  NVIC->ICER[0] = 0xFFFFFFFF;
   0:	4b0b      	ldr	r3, [pc, #44]	; (30 <NVIC_DeInit+0x30>)
   2:	f04f 31ff 	mov.w	r1, #4294967295
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:41
  NVIC->ICER[1] = 0x0FFFFFFF;
   6:	f06f 4270 	mvn.w	r2, #4026531840	; 0xf0000000
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:40
*******************************************************************************/
void NVIC_DeInit(void)
{
  u32 index = 0;
  
  NVIC->ICER[0] = 0xFFFFFFFF;
   a:	f8c3 1080 	str.w	r1, [r3, #128]	; 0x80
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:41
  NVIC->ICER[1] = 0x0FFFFFFF;
   e:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:42
  NVIC->ICPR[0] = 0xFFFFFFFF;
  12:	f8c3 1180 	str.w	r1, [r3, #384]	; 0x180
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:43
  NVIC->ICPR[1] = 0x0FFFFFFF;
  16:	f8c3 2184 	str.w	r2, [r3, #388]	; 0x184
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:45
  
  for(index = 0; index < 0x0F; index++)
  1a:	2300      	movs	r3, #0
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:47
  {
     NVIC->IPR[index] = 0x00000000;
  1c:	f103 01c0 	add.w	r1, r3, #192	; 0xc0
  20:	4a03      	ldr	r2, [pc, #12]	; (30 <NVIC_DeInit+0x30>)
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:45
  NVIC->ICER[0] = 0xFFFFFFFF;
  NVIC->ICER[1] = 0x0FFFFFFF;
  NVIC->ICPR[0] = 0xFFFFFFFF;
  NVIC->ICPR[1] = 0x0FFFFFFF;
  
  for(index = 0; index < 0x0F; index++)
  22:	3301      	adds	r3, #1
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:47
  {
     NVIC->IPR[index] = 0x00000000;
  24:	2000      	movs	r0, #0
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:45
  NVIC->ICER[0] = 0xFFFFFFFF;
  NVIC->ICER[1] = 0x0FFFFFFF;
  NVIC->ICPR[0] = 0xFFFFFFFF;
  NVIC->ICPR[1] = 0x0FFFFFFF;
  
  for(index = 0; index < 0x0F; index++)
  26:	2b0f      	cmp	r3, #15
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:47
  {
     NVIC->IPR[index] = 0x00000000;
  28:	f842 0021 	str.w	r0, [r2, r1, lsl #2]
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:45
  NVIC->ICER[0] = 0xFFFFFFFF;
  NVIC->ICER[1] = 0x0FFFFFFF;
  NVIC->ICPR[0] = 0xFFFFFFFF;
  NVIC->ICPR[1] = 0x0FFFFFFF;
  
  for(index = 0; index < 0x0F; index++)
  2c:	d1f6      	bne.n	1c <NVIC_DeInit+0x1c>
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:49
  {
     NVIC->IPR[index] = 0x00000000;
  } 
}
  2e:	4770      	bx	lr
  30:	e000e100 	.word	0xe000e100

Disassembly of section .text.NVIC_SCBDeInit:

00000000 <NVIC_SCBDeInit>:
NVIC_SCBDeInit():
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:63
*******************************************************************************/
void NVIC_SCBDeInit(void)
{
  u32 index = 0x00;
  
  SCB->ICSR = 0x0A000000;
   0:	f04f4b09 	.word	0xf04f4b09
   4:	6220      	str	r0, [r4, #32]
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:65
  SCB->VTOR = 0x00000000;
  SCB->AIRCR = AIRCR_VECTKEY_MASK;
   6:	4909      	ldr	r1, [pc, #36]	; (2c <NVIC_SCBDeInit+0x2c>)
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:63
*******************************************************************************/
void NVIC_SCBDeInit(void)
{
  u32 index = 0x00;
  
  SCB->ICSR = 0x0A000000;
   8:	605a      	str	r2, [r3, #4]
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:64
  SCB->VTOR = 0x00000000;
   a:	2200      	movs	r2, #0
   c:	609a      	str	r2, [r3, #8]
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:65
  SCB->AIRCR = AIRCR_VECTKEY_MASK;
   e:	60d9      	str	r1, [r3, #12]
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:66
  SCB->SCR = 0x00000000;
  10:	611a      	str	r2, [r3, #16]
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:67
  SCB->CCR = 0x00000000;
  12:	615a      	str	r2, [r3, #20]
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:70
  for(index = 0; index < 0x03; index++)
  {
     SCB->SHPR[index] = 0;
  14:	619a      	str	r2, [r3, #24]
  16:	61da      	str	r2, [r3, #28]
  18:	621a      	str	r2, [r3, #32]
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:72
  }
  SCB->SHCSR = 0x00000000;
  1a:	625a      	str	r2, [r3, #36]	; 0x24
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:73
  SCB->CFSR = 0xFFFFFFFF;
  1c:	3a01      	subs	r2, #1
  1e:	629a      	str	r2, [r3, #40]	; 0x28
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:74
  SCB->HFSR = 0xFFFFFFFF;
  20:	62da      	str	r2, [r3, #44]	; 0x2c
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:75
  SCB->DFSR = 0xFFFFFFFF;
  22:	631a      	str	r2, [r3, #48]	; 0x30
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:76
}
  24:	4770      	bx	lr
  26:	bf00      	nop
  28:	e000ed00 	.word	0xe000ed00
  2c:	05fa0000 	.word	0x05fa0000

Disassembly of section .text.NVIC_PriorityGroupConfig:

00000000 <NVIC_PriorityGroupConfig>:
NVIC_PriorityGroupConfig():
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:103
{
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(NVIC_PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to NVIC_PriorityGroup value */
  SCB->AIRCR = AIRCR_VECTKEY_MASK | NVIC_PriorityGroup;
   0:	60bef040 	.word	0x60bef040
   4:	4b02      	ldr	r3, [pc, #8]	; (10 <NVIC_PriorityGroupConfig+0x10>)
   6:	f440 2020 	orr.w	r0, r0, #655360	; 0xa0000
   a:	60d8      	str	r0, [r3, #12]
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:104
}
   c:	4770      	bx	lr
   e:	bf00      	nop
  10:	e000ed00 	.word	0xe000ed00

Disassembly of section .text.NVIC_Init:

00000000 <NVIC_Init>:
NVIC_Init():
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:127
  assert_param(IS_FUNCTIONAL_STATE(NVIC_InitStruct->NVIC_IRQChannelCmd));
  assert_param(IS_NVIC_IRQ_CHANNEL(NVIC_InitStruct->NVIC_IRQChannel));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority));  
  assert_param(IS_NVIC_SUB_PRIORITY(NVIC_InitStruct->NVIC_IRQChannelSubPriority));
    
  if (NVIC_InitStruct->NVIC_IRQChannelCmd != DISABLE)
   0:	78c3      	ldrb	r3, [r0, #3]
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:117
*                    specified NVIC peripheral.
* Output         : None
* Return         : None
*******************************************************************************/
void NVIC_Init(NVIC_InitTypeDef* NVIC_InitStruct)
{
   2:	b570      	push	{r4, r5, r6, lr}
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:127
  assert_param(IS_FUNCTIONAL_STATE(NVIC_InitStruct->NVIC_IRQChannelCmd));
  assert_param(IS_NVIC_IRQ_CHANNEL(NVIC_InitStruct->NVIC_IRQChannel));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority));  
  assert_param(IS_NVIC_SUB_PRIORITY(NVIC_InitStruct->NVIC_IRQChannelSubPriority));
    
  if (NVIC_InitStruct->NVIC_IRQChannelCmd != DISABLE)
   4:	b36b      	cbz	r3, 62 <NVIC_Init+0x62>
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:130
  {
    /* Compute the Corresponding IRQ Priority --------------------------------*/    
    tmppriority = (0x700 - (SCB->AIRCR & (u32)0x700))>> 0x08;
   6:	4b1d      	ldr	r3, [pc, #116]	; (7c <NVIC_Init+0x7c>)
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:134
    tmppre = (0x4 - tmppriority);
    tmpsub = tmpsub >> tmppriority;
    
    tmppriority = (u32)NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority << tmppre;
   8:	7845      	ldrb	r5, [r0, #1]
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:130
  assert_param(IS_NVIC_SUB_PRIORITY(NVIC_InitStruct->NVIC_IRQChannelSubPriority));
    
  if (NVIC_InitStruct->NVIC_IRQChannelCmd != DISABLE)
  {
    /* Compute the Corresponding IRQ Priority --------------------------------*/    
    tmppriority = (0x700 - (SCB->AIRCR & (u32)0x700))>> 0x08;
   a:	68db      	ldr	r3, [r3, #12]
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:135
    tmppre = (0x4 - tmppriority);
    tmpsub = tmpsub >> tmppriority;
    
    tmppriority = (u32)NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority << tmppre;
    tmppriority |=  NVIC_InitStruct->NVIC_IRQChannelSubPriority & tmpsub;
   c:	7881      	ldrb	r1, [r0, #2]
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:130
  assert_param(IS_NVIC_SUB_PRIORITY(NVIC_InitStruct->NVIC_IRQChannelSubPriority));
    
  if (NVIC_InitStruct->NVIC_IRQChannelCmd != DISABLE)
  {
    /* Compute the Corresponding IRQ Priority --------------------------------*/    
    tmppriority = (0x700 - (SCB->AIRCR & (u32)0x700))>> 0x08;
   e:	43db      	mvns	r3, r3
  10:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  14:	0a1b      	lsrs	r3, r3, #8
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:131
    tmppre = (0x4 - tmppriority);
  16:	f1c3 0204 	rsb	r2, r3, #4
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:134
    tmpsub = tmpsub >> tmppriority;
    
    tmppriority = (u32)NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority << tmppre;
  1a:	fa15 f202 	lsls.w	r2, r5, r2
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:132
  if (NVIC_InitStruct->NVIC_IRQChannelCmd != DISABLE)
  {
    /* Compute the Corresponding IRQ Priority --------------------------------*/    
    tmppriority = (0x700 - (SCB->AIRCR & (u32)0x700))>> 0x08;
    tmppre = (0x4 - tmppriority);
    tmpsub = tmpsub >> tmppriority;
  1e:	250f      	movs	r5, #15
  20:	40dd      	lsrs	r5, r3
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:135
    
    tmppriority = (u32)NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority << tmppre;
    tmppriority |=  NVIC_InitStruct->NVIC_IRQChannelSubPriority & tmpsub;
  22:	400d      	ands	r5, r1
  24:	4315      	orrs	r5, r2
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:138

    tmppriority = tmppriority << 0x04;
    tmppriority = ((u32)tmppriority) << ((NVIC_InitStruct->NVIC_IRQChannel & (u8)0x03) * 0x08);
  26:	7802      	ldrb	r2, [r0, #0]
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:137
    tmpsub = tmpsub >> tmppriority;
    
    tmppriority = (u32)NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority << tmppre;
    tmppriority |=  NVIC_InitStruct->NVIC_IRQChannelSubPriority & tmpsub;

    tmppriority = tmppriority << 0x04;
  28:	012d      	lsls	r5, r5, #4
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:138
    tmppriority = ((u32)tmppriority) << ((NVIC_InitStruct->NVIC_IRQChannel & (u8)0x03) * 0x08);
  2a:	f002 0403 	and.w	r4, r2, #3
  2e:	00e4      	lsls	r4, r4, #3
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:141
    
    tmpreg = NVIC->IPR[(NVIC_InitStruct->NVIC_IRQChannel >> 0x02)];
    tmpmask = (u32)0xFF << ((NVIC_InitStruct->NVIC_IRQChannel & (u8)0x03) * 0x08);
  30:	21ff      	movs	r1, #255	; 0xff
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:138
    
    tmppriority = (u32)NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority << tmppre;
    tmppriority |=  NVIC_InitStruct->NVIC_IRQChannelSubPriority & tmpsub;

    tmppriority = tmppriority << 0x04;
    tmppriority = ((u32)tmppriority) << ((NVIC_InitStruct->NVIC_IRQChannel & (u8)0x03) * 0x08);
  32:	40a5      	lsls	r5, r4
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:141
    
    tmpreg = NVIC->IPR[(NVIC_InitStruct->NVIC_IRQChannel >> 0x02)];
    tmpmask = (u32)0xFF << ((NVIC_InitStruct->NVIC_IRQChannel & (u8)0x03) * 0x08);
  34:	40a1      	lsls	r1, r4
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:140
    tmppriority |=  NVIC_InitStruct->NVIC_IRQChannelSubPriority & tmpsub;

    tmppriority = tmppriority << 0x04;
    tmppriority = ((u32)tmppriority) << ((NVIC_InitStruct->NVIC_IRQChannel & (u8)0x03) * 0x08);
    
    tmpreg = NVIC->IPR[(NVIC_InitStruct->NVIC_IRQChannel >> 0x02)];
  36:	4b12      	ldr	r3, [pc, #72]	; (80 <NVIC_Init+0x80>)
  38:	0892      	lsrs	r2, r2, #2
  3a:	32c0      	adds	r2, #192	; 0xc0
  3c:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:142
    tmpmask = (u32)0xFF << ((NVIC_InitStruct->NVIC_IRQChannel & (u8)0x03) * 0x08);
    tmpreg &= ~tmpmask;
  40:	ea26 0401 	bic.w	r4, r6, r1
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:143
    tmppriority &= tmpmask;  
  44:	ea05 0101 	and.w	r1, r5, r1
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:144
    tmpreg |= tmppriority;
  48:	4321      	orrs	r1, r4
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:146

    NVIC->IPR[(NVIC_InitStruct->NVIC_IRQChannel >> 0x02)] = tmpreg;
  4a:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:149
    
    /* Enable the Selected IRQ Channels --------------------------------------*/
    NVIC->ISER[(NVIC_InitStruct->NVIC_IRQChannel >> 0x05)] =
  4e:	7802      	ldrb	r2, [r0, #0]
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:150
      (u32)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (u8)0x1F);
  50:	2001      	movs	r0, #1
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:149
    tmpreg |= tmppriority;

    NVIC->IPR[(NVIC_InitStruct->NVIC_IRQChannel >> 0x02)] = tmpreg;
    
    /* Enable the Selected IRQ Channels --------------------------------------*/
    NVIC->ISER[(NVIC_InitStruct->NVIC_IRQChannel >> 0x05)] =
  52:	0951      	lsrs	r1, r2, #5
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:150
      (u32)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (u8)0x1F);
  54:	f002 021f 	and.w	r2, r2, #31
  58:	fa10 f202 	lsls.w	r2, r0, r2
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:149
    tmpreg |= tmppriority;

    NVIC->IPR[(NVIC_InitStruct->NVIC_IRQChannel >> 0x02)] = tmpreg;
    
    /* Enable the Selected IRQ Channels --------------------------------------*/
    NVIC->ISER[(NVIC_InitStruct->NVIC_IRQChannel >> 0x05)] =
  5c:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
  60:	bd70      	pop	{r4, r5, r6, pc}
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:155
      (u32)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (u8)0x1F);
  }
  else
  {
    /* Disable the Selected IRQ Channels -------------------------------------*/
    NVIC->ICER[(NVIC_InitStruct->NVIC_IRQChannel >> 0x05)] =
  62:	7803      	ldrb	r3, [r0, #0]
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:156
      (u32)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (u8)0x1F);
  64:	2201      	movs	r2, #1
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:155
      (u32)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (u8)0x1F);
  }
  else
  {
    /* Disable the Selected IRQ Channels -------------------------------------*/
    NVIC->ICER[(NVIC_InitStruct->NVIC_IRQChannel >> 0x05)] =
  66:	0959      	lsrs	r1, r3, #5
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:156
      (u32)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (u8)0x1F);
  68:	f003 031f 	and.w	r3, r3, #31
  6c:	fa12 f303 	lsls.w	r3, r2, r3
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:155
      (u32)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (u8)0x1F);
  }
  else
  {
    /* Disable the Selected IRQ Channels -------------------------------------*/
    NVIC->ICER[(NVIC_InitStruct->NVIC_IRQChannel >> 0x05)] =
  70:	4a03      	ldr	r2, [pc, #12]	; (80 <NVIC_Init+0x80>)
  72:	3120      	adds	r1, #32
  74:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  78:	bd70      	pop	{r4, r5, r6, pc}
  7a:	bf00      	nop
  7c:	e000ed00 	.word	0xe000ed00
  80:	e000e100 	.word	0xe000e100

Disassembly of section .text.NVIC_StructInit:

00000000 <NVIC_StructInit>:
NVIC_StructInit():
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:171
* Return         : None
*******************************************************************************/
void NVIC_StructInit(NVIC_InitTypeDef* NVIC_InitStruct)
{
  /* NVIC_InitStruct members default value */
  NVIC_InitStruct->NVIC_IRQChannel = 0x00;
   0:	2300      	movs	r3, #0
   2:	7003      	strb	r3, [r0, #0]
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:172
  NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority = 0x00;
   4:	7043      	strb	r3, [r0, #1]
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:173
  NVIC_InitStruct->NVIC_IRQChannelSubPriority = 0x00;
   6:	7083      	strb	r3, [r0, #2]
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:174
  NVIC_InitStruct->NVIC_IRQChannelCmd = DISABLE;
   8:	70c3      	strb	r3, [r0, #3]
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:175
}
   a:	4770      	bx	lr

Disassembly of section .text.NVIC_SETPRIMASK:

00000000 <NVIC_SETPRIMASK>:
NVIC_SETPRIMASK():
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:186
* Output         : None
* Return         : None
*******************************************************************************/
void NVIC_SETPRIMASK(void)
{
  __SETPRIMASK();
   0:	f7ff bffe 	b.w	0 <__SETPRIMASK>

Disassembly of section .text.NVIC_RESETPRIMASK:

00000000 <NVIC_RESETPRIMASK>:
NVIC_RESETPRIMASK():
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:198
* Output         : None
* Return         : None
*******************************************************************************/
void NVIC_RESETPRIMASK(void)
{
  __RESETPRIMASK();
   0:	f7ff bffe 	b.w	0 <__RESETPRIMASK>

Disassembly of section .text.NVIC_SETFAULTMASK:

00000000 <NVIC_SETFAULTMASK>:
NVIC_SETFAULTMASK():
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:210
* Output         : None
* Return         : None
*******************************************************************************/
void NVIC_SETFAULTMASK(void)
{
  __SETFAULTMASK();
   0:	f7ff bffe 	b.w	0 <__SETFAULTMASK>

Disassembly of section .text.NVIC_RESETFAULTMASK:

00000000 <NVIC_RESETFAULTMASK>:
NVIC_RESETFAULTMASK():
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:222
* Output         : None
* Return         : None
*******************************************************************************/
void NVIC_RESETFAULTMASK(void)
{
  __RESETFAULTMASK();
   0:	f7ff bffe 	b.w	0 <__RESETFAULTMASK>

Disassembly of section .text.NVIC_BASEPRICONFIG:

00000000 <NVIC_BASEPRICONFIG>:
NVIC_BASEPRICONFIG():
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:239
void NVIC_BASEPRICONFIG(u32 NewPriority)
{
  /* Check the parameters */
  assert_param(IS_NVIC_BASE_PRI(NewPriority));
  
  __BASEPRICONFIG(NewPriority << 0x04);
   0:	0100      	lsls	r0, r0, #4
   2:	f7ff bffe 	b.w	0 <__BASEPRICONFIG>

Disassembly of section .text.NVIC_GetBASEPRI:

00000000 <NVIC_GetBASEPRI>:
NVIC_GetBASEPRI():
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:251
* Output         : None
* Return         : BASEPRI register value
*******************************************************************************/
u32 NVIC_GetBASEPRI(void)
{
  return (__GetBASEPRI());
   0:	f7ff bffe 	b.w	0 <__GetBASEPRI>

Disassembly of section .text.NVIC_GetCurrentPendingIRQChannel:

00000000 <NVIC_GetCurrentPendingIRQChannel>:
NVIC_GetCurrentPendingIRQChannel():
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:263
* Output         : None
* Return         : Pending IRQ Channel Identifier.
*******************************************************************************/
u16 NVIC_GetCurrentPendingIRQChannel(void)
{
  return ((u16)((SCB->ICSR & (u32)0x003FF000) >> 0x0C));
   0:	4b03      	ldr	r3, [pc, #12]	; (10 <NVIC_GetCurrentPendingIRQChannel+0x10>)
   2:	4804      	ldr	r0, [pc, #16]	; (14 <NVIC_GetCurrentPendingIRQChannel+0x14>)
   4:	685b      	ldr	r3, [r3, #4]
   6:	ea03 0000 	and.w	r0, r3, r0
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:264
}
   a:	0b00      	lsrs	r0, r0, #12
   c:	4770      	bx	lr
   e:	bf00      	nop
  10:	e000ed00 	.word	0xe000ed00
  14:	003ff000 	.word	0x003ff000

Disassembly of section .text.NVIC_GetIRQChannelPendingBitStatus:

00000000 <NVIC_GetIRQChannelPendingBitStatus>:
NVIC_GetIRQChannelPendingBitStatus():
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:282
  u32 tmp = 0x00;
  
  /* Check the parameters */
  assert_param(IS_NVIC_IRQ_CHANNEL(NVIC_IRQChannel));
  
  tmp = ((u32)0x01 << (NVIC_IRQChannel & (u32)0x1F));
   0:	2201      	movs	r2, #1
   2:	f000 031f 	and.w	r3, r0, #31
   6:	fa12 f303 	lsls.w	r3, r2, r3
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:284

  if (((NVIC->ISPR[(NVIC_IRQChannel >> 0x05)]) & tmp) == tmp)
   a:	0940      	lsrs	r0, r0, #5
   c:	4a04      	ldr	r2, [pc, #16]	; (20 <NVIC_GetIRQChannelPendingBitStatus+0x20>)
   e:	3040      	adds	r0, #64	; 0x40
  10:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
  14:	4018      	ands	r0, r3
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:293
  else
  {
    pendingirqstatus = RESET;
  }
  return pendingirqstatus;
}
  16:	1ac3      	subs	r3, r0, r3
  18:	4258      	negs	r0, r3
  1a:	eb40 0003 	adc.w	r0, r0, r3
  1e:	4770      	bx	lr
  20:	e000e100 	.word	0xe000e100

Disassembly of section .text.NVIC_SetIRQChannelPendingBit:

00000000 <NVIC_SetIRQChannelPendingBit>:
NVIC_SetIRQChannelPendingBit():
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:307
void NVIC_SetIRQChannelPendingBit(u8 NVIC_IRQChannel)
{
  /* Check the parameters */
  assert_param(IS_NVIC_IRQ_CHANNEL(NVIC_IRQChannel));
  
  *(vu32*) 0xE000EF00 = (u32)NVIC_IRQChannel;
   0:	60184b01 	.word	0x60184b01
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:308
}
   4:	4770      	bx	lr
   6:	bf00      	nop
   8:	e000ef00 	.word	0xe000ef00

Disassembly of section .text.NVIC_ClearIRQChannelPendingBit:

00000000 <NVIC_ClearIRQChannelPendingBit>:
NVIC_ClearIRQChannelPendingBit():
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:322
void NVIC_ClearIRQChannelPendingBit(u8 NVIC_IRQChannel)
{
  /* Check the parameters */
  assert_param(IS_NVIC_IRQ_CHANNEL(NVIC_IRQChannel));
  
  NVIC->ICPR[(NVIC_IRQChannel >> 0x05)] = (u32)0x01 << (NVIC_IRQChannel & (u32)0x1F);
   0:	0942      	lsrs	r2, r0, #5
   2:	2301      	movs	r3, #1
   4:	f000 001f 	and.w	r0, r0, #31
   8:	fa13 f000 	lsls.w	r0, r3, r0
   c:	4b02      	ldr	r3, [pc, #8]	; (18 <NVIC_ClearIRQChannelPendingBit+0x18>)
   e:	3260      	adds	r2, #96	; 0x60
  10:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:323
}
  14:	4770      	bx	lr
  16:	bf00      	nop
  18:	e000e100 	.word	0xe000e100

Disassembly of section .text.NVIC_GetCurrentActiveHandler:

00000000 <NVIC_GetCurrentActiveHandler>:
NVIC_GetCurrentActiveHandler():
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:335
* Output         : None
* Return         : Active Handler Identifier.
*******************************************************************************/
u16 NVIC_GetCurrentActiveHandler(void)
{
  return ((u16)(SCB->ICSR & (u32)0x3FF));
   0:	68584b02 	.word	0x68584b02
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:336
}
   4:	0580      	lsls	r0, r0, #22
   6:	0d80      	lsrs	r0, r0, #22
   8:	4770      	bx	lr
   a:	bf00      	nop
   c:	e000ed00 	.word	0xe000ed00

Disassembly of section .text.NVIC_GetIRQChannelActiveBitStatus:

00000000 <NVIC_GetIRQChannelActiveBitStatus>:
NVIC_GetIRQChannelActiveBitStatus():
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:354
  u32 tmp = 0x00;

  /* Check the parameters */
  assert_param(IS_NVIC_IRQ_CHANNEL(NVIC_IRQChannel));
  
  tmp = ((u32)0x01 << (NVIC_IRQChannel & (u32)0x1F));
   0:	2201      	movs	r2, #1
   2:	f000 031f 	and.w	r3, r0, #31
   6:	fa12 f303 	lsls.w	r3, r2, r3
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:356

  if (((NVIC->IABR[(NVIC_IRQChannel >> 0x05)]) & tmp) == tmp )
   a:	0940      	lsrs	r0, r0, #5
   c:	4a04      	ldr	r2, [pc, #16]	; (20 <NVIC_GetIRQChannelActiveBitStatus+0x20>)
   e:	3080      	adds	r0, #128	; 0x80
  10:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
  14:	4018      	ands	r0, r3
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:365
  else
  {
    activeirqstatus = RESET;
  }
  return activeirqstatus;
}
  16:	1ac2      	subs	r2, r0, r3
  18:	4250      	negs	r0, r2
  1a:	eb40 0002 	adc.w	r0, r0, r2
  1e:	4770      	bx	lr
  20:	e000e100 	.word	0xe000e100

Disassembly of section .text.NVIC_GetCPUID:

00000000 <NVIC_GetCPUID>:
NVIC_GetCPUID():
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:377
* Output         : None
* Return         : CPU ID.
*******************************************************************************/
u32 NVIC_GetCPUID(void)
{
  return (SCB->CPUID);
   0:	68184b01 	.word	0x68184b01
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:378
}
   4:	4770      	bx	lr
   6:	bf00      	nop
   8:	e000ed00 	.word	0xe000ed00

Disassembly of section .text.NVIC_SetVectorTable:

00000000 <NVIC_SetVectorTable>:
NVIC_SetVectorTable():
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:399
{ 
  /* Check the parameters */
  assert_param(IS_NVIC_VECTTAB(NVIC_VectTab));
  assert_param(IS_NVIC_OFFSET(Offset));  
   
  SCB->VTOR = NVIC_VectTab | (Offset & (u32)0x1FFFFF80);
   0:	f021 4160 	bic.w	r1, r1, #3758096384	; 0xe0000000
   4:	f021 017f 	bic.w	r1, r1, #127	; 0x7f
   8:	4b01      	ldr	r3, [pc, #4]	; (10 <NVIC_SetVectorTable+0x10>)
   a:	4301      	orrs	r1, r0
   c:	6099      	str	r1, [r3, #8]
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:400
}
   e:	4770      	bx	lr
  10:	e000ed00 	.word	0xe000ed00

Disassembly of section .text.NVIC_GenerateSystemReset:

00000000 <NVIC_GenerateSystemReset>:
NVIC_GenerateSystemReset():
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:411
* Output         : None
* Return         : None
*******************************************************************************/
void NVIC_GenerateSystemReset(void)
{
  SCB->AIRCR = AIRCR_VECTKEY_MASK | (u32)0x04;
   0:	4b024a01 	.word	0x4b024a01
   4:	60da      	str	r2, [r3, #12]
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:412
}
   6:	4770      	bx	lr
   8:	05fa0004 	.word	0x05fa0004
   c:	e000ed00 	.word	0xe000ed00

Disassembly of section .text.NVIC_GenerateCoreReset:

00000000 <NVIC_GenerateCoreReset>:
NVIC_GenerateCoreReset():
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:423
* Output         : None
* Return         : None
*******************************************************************************/
void NVIC_GenerateCoreReset(void)
{
  SCB->AIRCR = AIRCR_VECTKEY_MASK | (u32)0x01;
   0:	4a01      	ldr	r2, [pc, #4]	; (8 <NVIC_GenerateCoreReset+0x8>)
   2:	4b02      	ldr	r3, [pc, #8]	; (c <NVIC_GenerateCoreReset+0xc>)
   4:	60da      	str	r2, [r3, #12]
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:424
}
   6:	4770      	bx	lr
   8:	05fa0001 	.word	0x05fa0001
   c:	e000ed00 	.word	0xe000ed00

Disassembly of section .text.NVIC_SystemLPConfig:

00000000 <NVIC_SystemLPConfig>:
NVIC_SystemLPConfig():
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:441
*                    This parameter can be: ENABLE or DISABLE.
* Output         : None
* Return         : None
*******************************************************************************/
void NVIC_SystemLPConfig(u8 LowPowerMode, FunctionalState NewState)
{
   0:	4b04      	ldr	r3, [pc, #16]	; (14 <NVIC_SystemLPConfig+0x14>)
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:446
  /* Check the parameters */
  assert_param(IS_NVIC_LP(LowPowerMode));
  assert_param(IS_FUNCTIONAL_STATE(NewState));  
  
  if (NewState != DISABLE)
   2:	b111      	cbz	r1, a <NVIC_SystemLPConfig+0xa>
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:448
  {
    SCB->SCR |= LowPowerMode;
   4:	691a      	ldr	r2, [r3, #16]
   6:	4310      	orrs	r0, r2
   8:	e002      	b.n	10 <NVIC_SystemLPConfig+0x10>
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:452
  }
  else
  {
    SCB->SCR &= (u32)(~(u32)LowPowerMode);
   a:	691a      	ldr	r2, [r3, #16]
   c:	ea22 0000 	bic.w	r0, r2, r0
  10:	6118      	str	r0, [r3, #16]
  12:	4770      	bx	lr
  14:	e000ed00 	.word	0xe000ed00

Disassembly of section .text.NVIC_SystemHandlerConfig:

00000000 <NVIC_SystemHandlerConfig>:
NVIC_SystemHandlerConfig():
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:478

  /* Check the parameters */
  assert_param(IS_CONFIG_SYSTEM_HANDLER(SystemHandler));
  assert_param(IS_FUNCTIONAL_STATE(NewState)); 
  
  tmpreg =  (u32)0x01 << (SystemHandler & (u32)0x1F);
   0:	2301      	movs	r3, #1
   2:	f000 001f 	and.w	r0, r0, #31
   6:	fa13 f000 	lsls.w	r0, r3, r0
   a:	4b05      	ldr	r3, [pc, #20]	; (20 <NVIC_SystemHandlerConfig+0x20>)
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:480

  if (NewState != DISABLE)
   c:	b111      	cbz	r1, 14 <NVIC_SystemHandlerConfig+0x14>
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:482
  {
    SCB->SHCSR |= tmpreg;
   e:	6a5a      	ldr	r2, [r3, #36]	; 0x24
  10:	4310      	orrs	r0, r2
  12:	e002      	b.n	1a <NVIC_SystemHandlerConfig+0x1a>
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:486
  }
  else
  {
    SCB->SHCSR &= ~tmpreg;
  14:	6a5a      	ldr	r2, [r3, #36]	; 0x24
  16:	ea22 0000 	bic.w	r0, r2, r0
  1a:	6258      	str	r0, [r3, #36]	; 0x24
  1c:	4770      	bx	lr
  1e:	bf00      	nop
  20:	e000ed00 	.word	0xe000ed00

Disassembly of section .text.NVIC_SystemHandlerPriorityConfig:

00000000 <NVIC_SystemHandlerPriorityConfig>:
NVIC_SystemHandlerPriorityConfig():
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:512
* Output         : None
* Return         : None
*******************************************************************************/
void NVIC_SystemHandlerPriorityConfig(u32 SystemHandler, u8 SystemHandlerPreemptionPriority,
                                      u8 SystemHandlerSubPriority)
{
   0:	b570      	push	{r4, r5, r6, lr}
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:521
  /* Check the parameters */
  assert_param(IS_PRIORITY_SYSTEM_HANDLER(SystemHandler));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(SystemHandlerPreemptionPriority));  
  assert_param(IS_NVIC_SUB_PRIORITY(SystemHandlerSubPriority));
    
  tmppriority = (0x700 - (SCB->AIRCR & (u32)0x700))>> 0x08;
   2:	4b13      	ldr	r3, [pc, #76]	; (50 <NVIC_SystemHandlerPriorityConfig+0x50>)
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:523
  tmp1 = (0x4 - tmppriority);
  tmp2 = tmp2 >> tmppriority;
   4:	26ff      	movs	r6, #255	; 0xff
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:521
  /* Check the parameters */
  assert_param(IS_PRIORITY_SYSTEM_HANDLER(SystemHandler));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(SystemHandlerPreemptionPriority));  
  assert_param(IS_NVIC_SUB_PRIORITY(SystemHandlerSubPriority));
    
  tmppriority = (0x700 - (SCB->AIRCR & (u32)0x700))>> 0x08;
   6:	68dc      	ldr	r4, [r3, #12]
   8:	43e4      	mvns	r4, r4
   a:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
   e:	0a24      	lsrs	r4, r4, #8
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:522
  tmp1 = (0x4 - tmppriority);
  10:	f1c4 0504 	rsb	r5, r4, #4
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:523
  tmp2 = tmp2 >> tmppriority;
  14:	fa36 f404 	lsrs.w	r4, r6, r4
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:525
    
  tmppriority = (u32)SystemHandlerPreemptionPriority << tmp1;
  18:	40a9      	lsls	r1, r5
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:526
  tmppriority |=  SystemHandlerSubPriority & tmp2;
  1a:	ea02 0404 	and.w	r4, r2, r4
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:529

  tmppriority = tmppriority << 0x04;
  tmp1 = SystemHandler & (u32)0xC0;
  1e:	f000 02c0 	and.w	r2, r0, #192	; 0xc0
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:531
  tmp1 = tmp1 >> 0x06; 
  tmp2 = (SystemHandler >> 0x08) & (u32)0x03;
  22:	0940      	lsrs	r0, r0, #5
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:532
  tmppriority = tmppriority << (tmp2 * 0x08);
  24:	f000 0018 	and.w	r0, r0, #24
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:533
  handlermask = (u32)0xFF << (tmp2 * 0x08);
  28:	4086      	lsls	r6, r0
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:526
  tmppriority = (0x700 - (SCB->AIRCR & (u32)0x700))>> 0x08;
  tmp1 = (0x4 - tmppriority);
  tmp2 = tmp2 >> tmppriority;
    
  tmppriority = (u32)SystemHandlerPreemptionPriority << tmp1;
  tmppriority |=  SystemHandlerSubPriority & tmp2;
  2a:	ea44 0101 	orr.w	r1, r4, r1
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:528

  tmppriority = tmppriority << 0x04;
  2e:	0109      	lsls	r1, r1, #4
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:532
  tmp1 = SystemHandler & (u32)0xC0;
  tmp1 = tmp1 >> 0x06; 
  tmp2 = (SystemHandler >> 0x08) & (u32)0x03;
  tmppriority = tmppriority << (tmp2 * 0x08);
  30:	fa11 f000 	lsls.w	r0, r1, r0
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:530
  tmppriority = (u32)SystemHandlerPreemptionPriority << tmp1;
  tmppriority |=  SystemHandlerSubPriority & tmp2;

  tmppriority = tmppriority << 0x04;
  tmp1 = SystemHandler & (u32)0xC0;
  tmp1 = tmp1 >> 0x06; 
  34:	0992      	lsrs	r2, r2, #6
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:535
  tmp2 = (SystemHandler >> 0x08) & (u32)0x03;
  tmppriority = tmppriority << (tmp2 * 0x08);
  handlermask = (u32)0xFF << (tmp2 * 0x08);
  
  SCB->SHPR[tmp1] &= ~handlermask;
  36:	3206      	adds	r2, #6
  38:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
  3c:	ea24 0606 	bic.w	r6, r4, r6
  40:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:536
  SCB->SHPR[tmp1] |= tmppriority;
  44:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
  48:	4330      	orrs	r0, r6
  4a:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:537
}
  4e:	bd70      	pop	{r4, r5, r6, pc}
  50:	e000ed00 	.word	0xe000ed00

Disassembly of section .text.NVIC_GetSystemHandlerPendingBitStatus:

00000000 <NVIC_GetSystemHandlerPendingBitStatus>:
NVIC_GetSystemHandlerPendingBitStatus():
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:560
  u32 tmp = 0x00, tmppos = 0x00;

  /* Check the parameters */
  assert_param(IS_GET_PENDING_SYSTEM_HANDLER(SystemHandler));
  
  tmppos = (SystemHandler >> 0x0A);
   0:	22010a83 	.word	0x22010a83
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:561
  tmppos &= (u32)0x0F;
   4:	f003 030f 	and.w	r3, r3, #15
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:563

  tmppos = (u32)0x01 << tmppos;
   8:	fa12 f303 	lsls.w	r3, r2, r3
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:565

  tmp = SCB->SHCSR & tmppos;
   c:	4a04      	ldr	r2, [pc, #16]	; (20 <NVIC_GetSystemHandlerPendingBitStatus+0x20>)
   e:	6a50      	ldr	r0, [r2, #36]	; 0x24
  10:	ea03 0000 	and.w	r0, r3, r0
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:576
  else
  {
    bitstatus = RESET;
  }
  return bitstatus;
}
  14:	1ac1      	subs	r1, r0, r3
  16:	4248      	negs	r0, r1
  18:	eb40 0001 	adc.w	r0, r0, r1
  1c:	4770      	bx	lr
  1e:	bf00      	nop
  20:	e000ed00 	.word	0xe000ed00

Disassembly of section .text.NVIC_SetSystemHandlerPendingBit:

00000000 <NVIC_SetSystemHandlerPendingBit>:
NVIC_SetSystemHandlerPendingBit():
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:598

  /* Check the parameters */
  assert_param(IS_SET_PENDING_SYSTEM_HANDLER(SystemHandler));
  
  /* Get the System Handler pending bit position */
  tmp = SystemHandler & (u32)0x1F;
   0:	001ff000 	.word	0x001ff000
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:600
  /* Set the corresponding System Handler pending bit */
  SCB->ICSR |= ((u32)0x01 << tmp);
   4:	2101      	movs	r1, #1
   6:	fa11 f000 	lsls.w	r0, r1, r0
   a:	4b03      	ldr	r3, [pc, #12]	; (18 <NVIC_SetSystemHandlerPendingBit+0x18>)
   c:	685a      	ldr	r2, [r3, #4]
   e:	ea40 0202 	orr.w	r2, r0, r2
  12:	605a      	str	r2, [r3, #4]
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:601
}
  14:	4770      	bx	lr
  16:	bf00      	nop
  18:	e000ed00 	.word	0xe000ed00

Disassembly of section .text.NVIC_ClearSystemHandlerPendingBit:

00000000 <NVIC_ClearSystemHandlerPendingBit>:
NVIC_ClearSystemHandlerPendingBit():
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:622

  /* Check the parameters */
  assert_param(IS_CLEAR_SYSTEM_HANDLER(SystemHandler));
  
  /* Get the System Handler pending bit position */
  tmp = SystemHandler & (u32)0x1F;
   0:	f000 011f 	and.w	r1, r0, #31
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:624
  /* Clear the corresponding System Handler pending bit */
  SCB->ICSR |= ((u32)0x01 << (tmp - 0x01));
   4:	3901      	subs	r1, #1
   6:	2001      	movs	r0, #1
   8:	fa10 f101 	lsls.w	r1, r0, r1
   c:	4b02      	ldr	r3, [pc, #8]	; (18 <NVIC_ClearSystemHandlerPendingBit+0x18>)
   e:	685a      	ldr	r2, [r3, #4]
  10:	ea41 0202 	orr.w	r2, r1, r2
  14:	605a      	str	r2, [r3, #4]
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:625
}
  16:	4770      	bx	lr
  18:	e000ed00 	.word	0xe000ed00

Disassembly of section .text.NVIC_GetSystemHandlerActiveBitStatus:

00000000 <NVIC_GetSystemHandlerActiveBitStatus>:
NVIC_GetSystemHandlerActiveBitStatus():
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:653
  u32 tmp = 0x00, tmppos = 0x00;

  /* Check the parameters */
  assert_param(IS_GET_ACTIVE_SYSTEM_HANDLER(SystemHandler));
  
  tmppos = (SystemHandler >> 0x0E) & (u32)0x0F;
   0:	0b83      	lsrs	r3, r0, #14
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:655

  tmppos = (u32)0x01 << tmppos;
   2:	2201      	movs	r2, #1
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:653
  u32 tmp = 0x00, tmppos = 0x00;

  /* Check the parameters */
  assert_param(IS_GET_ACTIVE_SYSTEM_HANDLER(SystemHandler));
  
  tmppos = (SystemHandler >> 0x0E) & (u32)0x0F;
   4:	f003 030f 	and.w	r3, r3, #15
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:655

  tmppos = (u32)0x01 << tmppos;
   8:	fa12 f303 	lsls.w	r3, r2, r3
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:657

  tmp = SCB->SHCSR & tmppos;
   c:	4a05      	ldr	r2, [pc, #20]	; (24 <NVIC_GetSystemHandlerActiveBitStatus+0x24>)
   e:	6a50      	ldr	r0, [r2, #36]	; 0x24
  10:	ea03 0000 	and.w	r0, r3, r0
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:668
  else
  {
    bitstatus = RESET;
  }
  return bitstatus;
}
  14:	ebc3 0c00 	rsb	ip, r3, r0
  18:	f1dc 0000 	rsbs	r0, ip, #0
  1c:	eb40 000c 	adc.w	r0, r0, ip
  20:	4770      	bx	lr
  22:	bf00      	nop
  24:	e000ed00 	.word	0xe000ed00

Disassembly of section .text.NVIC_GetFaultHandlerSources:

00000000 <NVIC_GetFaultHandlerSources>:
NVIC_GetFaultHandlerSources():
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:692
  u32 tmpreg = 0x00, tmppos = 0x00;

  /* Check the parameters */
  assert_param(IS_FAULT_SOURCE_SYSTEM_HANDLER(SystemHandler));
  
  tmpreg = (SystemHandler >> 0x12) & (u32)0x03;
   0:	0c83      	lsrs	r3, r0, #18
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:695
  tmppos = (SystemHandler >> 0x14) & (u32)0x03;

  if (tmpreg == 0x00)
   2:	f013 0203 	ands.w	r2, r3, #3
   6:	4b0a      	ldr	r3, [pc, #40]	; (30 <NVIC_GetFaultHandlerSources+0x30>)
   8:	d101      	bne.n	e <NVIC_GetFaultHandlerSources+0xe>
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:697
  {
    faultsources = SCB->HFSR;
   a:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
   c:	4770      	bx	lr
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:699
  }
  else if (tmpreg == 0x01)
   e:	2a01      	cmp	r2, #1
  10:	d10c      	bne.n	2c <NVIC_GetFaultHandlerSources+0x2c>
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:693

  /* Check the parameters */
  assert_param(IS_FAULT_SOURCE_SYSTEM_HANDLER(SystemHandler));
  
  tmpreg = (SystemHandler >> 0x12) & (u32)0x03;
  tmppos = (SystemHandler >> 0x14) & (u32)0x03;
  12:	0d02      	lsrs	r2, r0, #20
  14:	f002 0203 	and.w	r2, r2, #3
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:701
  {
    faultsources = SCB->HFSR;
  }
  else if (tmpreg == 0x01)
  {
    faultsources = SCB->CFSR >> (tmppos * 0x08);
  18:	6a98      	ldr	r0, [r3, #40]	; 0x28
  1a:	00d3      	lsls	r3, r2, #3
  1c:	40d8      	lsrs	r0, r3
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:702
    if (tmppos != 0x02)
  1e:	2a02      	cmp	r2, #2
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:704
    {
      faultsources &= (u32)0x0F;
  20:	bf14      	ite	ne
  22:	f000 000f 	andne.w	r0, r0, #15
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:708
    }
    else
    {
      faultsources &= (u32)0xFF;
  26:	f000 00ff 	andeq.w	r0, r0, #255	; 0xff
  2a:	4770      	bx	lr
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:713
    }
  }
  else
  {
    faultsources = SCB->DFSR;
  2c:	6b18      	ldr	r0, [r3, #48]	; 0x30
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:716
  }
  return faultsources;
}
  2e:	4770      	bx	lr
  30:	e000ed00 	.word	0xe000ed00

Disassembly of section .text.NVIC_GetFaultAddress:

00000000 <NVIC_GetFaultAddress>:
NVIC_GetFaultAddress():
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:731
*                       - SystemHandler_BusFault
* Output         : None
* Return         : Fault address.
*******************************************************************************/
u32 NVIC_GetFaultAddress(u32 SystemHandler)
{
   0:	f4104b03 	.word	0xf4104b03
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:740
  /* Check the parameters */
  assert_param(IS_FAULT_ADDRESS_SYSTEM_HANDLER(SystemHandler));
  
  tmp = (SystemHandler >> 0x16) & (u32)0x01;

  if (tmp == 0x00)
   4:	0f80      	lsrs	r0, r0, #30
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:742
  {
    faultaddress = SCB->MMFAR;
   6:	bf0c      	ite	eq
   8:	6b58      	ldreq	r0, [r3, #52]	; 0x34
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:746
  }
  else
  {
    faultaddress = SCB->BFAR;
   a:	6b98      	ldrne	r0, [r3, #56]	; 0x38
C:\cortex\dimmers\stlibrary\src/stm32f10x_nvic.c:749
  }
  return faultaddress;
}
   c:	4770      	bx	lr
   e:	bf00      	nop
  10:	e000ed00 	.word	0xe000ed00
