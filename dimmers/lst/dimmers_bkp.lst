
C:\cortex\dimmers\hex\dimmers_bkp.o:     file format elf32-littlearm
C:\cortex\dimmers\hex\dimmers_bkp.o


Disassembly of section .text.BkpInit:

00000000 <BkpInit>:
BkpInit():
C:\cortex\dimmers\src/dimmers_bkp.c:20
#include "dimmers_gpio.h"

#include <string.h>
#include <stdlib.h>

void BkpInit( void){
   0:	b510      	push	{r4, lr}
C:\cortex\dimmers\src/dimmers_bkp.c:22

    RCC_APB1PeriphClockCmd(RCC_APB1Periph_PWR | RCC_APB1Periph_BKP, ENABLE);
   2:	2101      	movs	r1, #1
   4:	f04f 50c0 	mov.w	r0, #402653184	; 0x18000000
   8:	f7ff fffe 	bl	0 <RCC_APB1PeriphClockCmd>
C:\cortex\dimmers\src/dimmers_bkp.c:23
    PWR_BackupAccessCmd(ENABLE);
   c:	2001      	movs	r0, #1
   e:	f7ff fffe 	bl	0 <PWR_BackupAccessCmd>
C:\cortex\dimmers\src/dimmers_bkp.c:26
    BKP_ClearFlag();

}
  12:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
C:\cortex\dimmers\src/dimmers_bkp.c:24

void BkpInit( void){

    RCC_APB1PeriphClockCmd(RCC_APB1Periph_PWR | RCC_APB1Periph_BKP, ENABLE);
    PWR_BackupAccessCmd(ENABLE);
    BKP_ClearFlag();
  16:	f7ff bffe 	b.w	0 <BKP_ClearFlag>

Disassembly of section .text.BkpLock:

00000000 <BkpLock>:
BkpLock():
C:\cortex\dimmers\src/dimmers_bkp.c:28

}

void BkpLock ( void ){
   0:	b510      	push	{r4, lr}
C:\cortex\dimmers\src/dimmers_bkp.c:29
    PWR_BackupAccessCmd(DISABLE);
   2:	2000      	movs	r0, #0
   4:	f7ff fffe 	bl	0 <PWR_BackupAccessCmd>
C:\cortex\dimmers\src/dimmers_bkp.c:31
    BKP_ClearFlag();
}
   8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
C:\cortex\dimmers\src/dimmers_bkp.c:30

}

void BkpLock ( void ){
    PWR_BackupAccessCmd(DISABLE);
    BKP_ClearFlag();
   c:	f7ff bffe 	b.w	0 <BKP_ClearFlag>

Disassembly of section .text.BkpUnlock:

00000000 <BkpUnlock>:
BkpUnlock():
C:\cortex\dimmers\src/dimmers_bkp.c:33
}

void BkpUnlock ( void ){
   0:	b510      	push	{r4, lr}
C:\cortex\dimmers\src/dimmers_bkp.c:34
    PWR_BackupAccessCmd(ENABLE);
   2:	2001      	movs	r0, #1
   4:	f7ff fffe 	bl	0 <PWR_BackupAccessCmd>
C:\cortex\dimmers\src/dimmers_bkp.c:36
    BKP_ClearFlag();
}
   8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
C:\cortex\dimmers\src/dimmers_bkp.c:35
    BKP_ClearFlag();
}

void BkpUnlock ( void ){
    PWR_BackupAccessCmd(ENABLE);
    BKP_ClearFlag();
   c:	f7ff bffe 	b.w	0 <BKP_ClearFlag>

Disassembly of section .text.BkpFormat:

00000000 <BkpFormat>:
BkpFormat():
C:\cortex\dimmers\src/dimmers_bkp.c:38
}

void BkpFormat ( u16 sign ){
   0:	b538      	push	{r3, r4, r5, lr}
   2:	4605      	mov	r5, r0
C:\cortex\dimmers\src/dimmers_bkp.c:42
    
    u16 index;

    for (index = BKP_DR1 ; index <= BKP_DR10 ; index +=4 ){
   4:	2404      	movs	r4, #4
C:\cortex\dimmers\src/dimmers_bkp.c:43
        BKP_WriteBackupRegister(index,sign);
   6:	4620      	mov	r0, r4
C:\cortex\dimmers\src/dimmers_bkp.c:42

void BkpFormat ( u16 sign ){
    
    u16 index;

    for (index = BKP_DR1 ; index <= BKP_DR10 ; index +=4 ){
   8:	3404      	adds	r4, #4
C:\cortex\dimmers\src/dimmers_bkp.c:43
        BKP_WriteBackupRegister(index,sign);
   a:	4629      	mov	r1, r5
C:\cortex\dimmers\src/dimmers_bkp.c:42

void BkpFormat ( u16 sign ){
    
    u16 index;

    for (index = BKP_DR1 ; index <= BKP_DR10 ; index +=4 ){
   c:	b2a4      	uxth	r4, r4
C:\cortex\dimmers\src/dimmers_bkp.c:43
        BKP_WriteBackupRegister(index,sign);
   e:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:42

void BkpFormat ( u16 sign ){
    
    u16 index;

    for (index = BKP_DR1 ; index <= BKP_DR10 ; index +=4 ){
  12:	2c2c      	cmp	r4, #44	; 0x2c
  14:	d1f7      	bne.n	6 <BkpFormat+0x6>
  16:	3414      	adds	r4, #20
C:\cortex\dimmers\src/dimmers_bkp.c:47
        BKP_WriteBackupRegister(index,sign);
    }

    for (index = BKP_DR11 ; index <= BKP_DR42 ; index +=4 ){
        BKP_WriteBackupRegister(index,sign);
  18:	4620      	mov	r0, r4
C:\cortex\dimmers\src/dimmers_bkp.c:46

    for (index = BKP_DR1 ; index <= BKP_DR10 ; index +=4 ){
        BKP_WriteBackupRegister(index,sign);
    }

    for (index = BKP_DR11 ; index <= BKP_DR42 ; index +=4 ){
  1a:	3404      	adds	r4, #4
C:\cortex\dimmers\src/dimmers_bkp.c:47
        BKP_WriteBackupRegister(index,sign);
  1c:	4629      	mov	r1, r5
C:\cortex\dimmers\src/dimmers_bkp.c:46

    for (index = BKP_DR1 ; index <= BKP_DR10 ; index +=4 ){
        BKP_WriteBackupRegister(index,sign);
    }

    for (index = BKP_DR11 ; index <= BKP_DR42 ; index +=4 ){
  1e:	b2a4      	uxth	r4, r4
C:\cortex\dimmers\src/dimmers_bkp.c:47
        BKP_WriteBackupRegister(index,sign);
  20:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:46

    for (index = BKP_DR1 ; index <= BKP_DR10 ; index +=4 ){
        BKP_WriteBackupRegister(index,sign);
    }

    for (index = BKP_DR11 ; index <= BKP_DR42 ; index +=4 ){
  24:	2cc0      	cmp	r4, #192	; 0xc0
  26:	d1f7      	bne.n	18 <BkpFormat+0x18>
C:\cortex\dimmers\src/dimmers_bkp.c:49
        BKP_WriteBackupRegister(index,sign);
    }
}
  28:	bd38      	pop	{r3, r4, r5, pc}

Disassembly of section .text.BkpVerify:

00000000 <BkpVerify>:
BkpVerify():
C:\cortex\dimmers\src/dimmers_bkp.c:51

u16 BkpVerify ( u16 sign ){
   0:	b538      	push	{r3, r4, r5, lr}
   2:	4605      	mov	r5, r0
C:\cortex\dimmers\src/dimmers_bkp.c:55

    u16 index;

    for (index = BKP_DR1 ; index <= BKP_DR10 ; index +=4 ){
   4:	2404      	movs	r4, #4
C:\cortex\dimmers\src/dimmers_bkp.c:56
      if ( BKP_ReadBackupRegister(index) != sign )
   6:	4620      	mov	r0, r4
   8:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
   c:	42a8      	cmp	r0, r5
   e:	d10d      	bne.n	2c <BkpVerify+0x2c>
C:\cortex\dimmers\src/dimmers_bkp.c:55

u16 BkpVerify ( u16 sign ){

    u16 index;

    for (index = BKP_DR1 ; index <= BKP_DR10 ; index +=4 ){
  10:	3404      	adds	r4, #4
  12:	b2a4      	uxth	r4, r4
  14:	2c2c      	cmp	r4, #44	; 0x2c
  16:	d1f6      	bne.n	6 <BkpVerify+0x6>
  18:	3414      	adds	r4, #20
C:\cortex\dimmers\src/dimmers_bkp.c:61
      if ( BKP_ReadBackupRegister(index) != sign )
              return index;
    }

    for (index = BKP_DR11 ; index <= BKP_DR42 ; index +=4 ){
      if ( BKP_ReadBackupRegister(index) != sign )
  1a:	4620      	mov	r0, r4
  1c:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
  20:	42a8      	cmp	r0, r5
  22:	d103      	bne.n	2c <BkpVerify+0x2c>
C:\cortex\dimmers\src/dimmers_bkp.c:60
    for (index = BKP_DR1 ; index <= BKP_DR10 ; index +=4 ){
      if ( BKP_ReadBackupRegister(index) != sign )
              return index;
    }

    for (index = BKP_DR11 ; index <= BKP_DR42 ; index +=4 ){
  24:	3404      	adds	r4, #4
  26:	b2a4      	uxth	r4, r4
  28:	2cc0      	cmp	r4, #192	; 0xc0
  2a:	d1f6      	bne.n	1a <BkpVerify+0x1a>
C:\cortex\dimmers\src/dimmers_bkp.c:66
      if ( BKP_ReadBackupRegister(index) != sign )
              return index;
    }

    return index;
}
  2c:	4620      	mov	r0, r4
  2e:	bd38      	pop	{r3, r4, r5, pc}

Disassembly of section .text.BkpSetFactoryDefaultsForLight:

00000000 <BkpSetFactoryDefaultsForLight>:
BkpSetFactoryDefaultsForLight():
C:\cortex\dimmers\src/dimmers_bkp.c:70

void    BkpSetFactoryDefaultsForLight ( u16 inputpin ){

    if ( inputpin == PIN_BUTTON_1 ){
   0:	2840      	cmp	r0, #64	; 0x40
C:\cortex\dimmers\src/dimmers_bkp.c:68
    }

    return index;
}

void    BkpSetFactoryDefaultsForLight ( u16 inputpin ){
   2:	b510      	push	{r4, lr}
   4:	4604      	mov	r4, r0
C:\cortex\dimmers\src/dimmers_bkp.c:70

    if ( inputpin == PIN_BUTTON_1 ){
   6:	d118      	bne.n	3a <BkpSetFactoryDefaultsForLight+0x3a>
C:\cortex\dimmers\src/dimmers_bkp.c:72
    
        BKP_WriteBackupRegister( POS_VALUE_LIGHT_1 ,            DEFAULT_VALUE_LIGHT_OFF );
   8:	2004      	movs	r0, #4
   a:	f242 7110 	movw	r1, #10000	; 0x2710
   e:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:73
        BKP_WriteBackupRegister( POS_VALUE_MIN_LIGHT_1 ,        DEFAULT_VALUE_MIN_LIGHT );
  12:	2008      	movs	r0, #8
  14:	f242 1134 	movw	r1, #8500	; 0x2134
  18:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:74
        BKP_WriteBackupRegister( POS_VALUE_MAX_LIGHT_1 ,        DEFAULT_VALUE_MAX_LIGHT );
  1c:	200c      	movs	r0, #12
  1e:	f640 11c4 	movw	r1, #2500	; 0x9c4
  22:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:75
        BKP_WriteBackupRegister( POS_VALUE_STEP_LIGHT_1 ,       DEFAULT_VALUE_STEP );
  26:	2010      	movs	r0, #16
  28:	2164      	movs	r1, #100	; 0x64
  2a:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:76
        BKP_WriteBackupRegister( POS_VALUE_OUTPUT_PIN_LIGHT_1 , DEFAULT_VALUE_OUTPUT_PIN_1 );
  2e:	2014      	movs	r0, #20
  30:	2101      	movs	r1, #1
  32:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:77
        BKP_WriteBackupRegister( POS_VALUE_INPUT_PIN_LIGHT_1 ,  DEFAULT_VALUE_INPUT_PIN_1 );
  36:	2018      	movs	r0, #24
  38:	e089      	b.n	14e <BkpSetFactoryDefaultsForLight+0x14e>
C:\cortex\dimmers\src/dimmers_bkp.c:80
    
    }
    else if ( inputpin == PIN_BUTTON_2 ){
  3a:	2880      	cmp	r0, #128	; 0x80
  3c:	d118      	bne.n	70 <BkpSetFactoryDefaultsForLight+0x70>
C:\cortex\dimmers\src/dimmers_bkp.c:82
    
        BKP_WriteBackupRegister( POS_VALUE_LIGHT_2 ,            DEFAULT_VALUE_LIGHT_OFF );
  3e:	201c      	movs	r0, #28
  40:	f242 7110 	movw	r1, #10000	; 0x2710
  44:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:83
        BKP_WriteBackupRegister( POS_VALUE_MIN_LIGHT_2 ,        DEFAULT_VALUE_MIN_LIGHT );
  48:	2020      	movs	r0, #32
  4a:	f242 1134 	movw	r1, #8500	; 0x2134
  4e:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:84
        BKP_WriteBackupRegister( POS_VALUE_MAX_LIGHT_2 ,        DEFAULT_VALUE_MAX_LIGHT );
  52:	2024      	movs	r0, #36	; 0x24
  54:	f640 11c4 	movw	r1, #2500	; 0x9c4
  58:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:85
        BKP_WriteBackupRegister( POS_VALUE_STEP_LIGHT_2 ,       DEFAULT_VALUE_STEP );
  5c:	2028      	movs	r0, #40	; 0x28
  5e:	2164      	movs	r1, #100	; 0x64
  60:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:86
        BKP_WriteBackupRegister( POS_VALUE_OUTPUT_PIN_LIGHT_2 , DEFAULT_VALUE_OUTPUT_PIN_2 );
  64:	2040      	movs	r0, #64	; 0x40
  66:	2102      	movs	r1, #2
  68:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:87
        BKP_WriteBackupRegister( POS_VALUE_INPUT_PIN_LIGHT_2 ,  DEFAULT_VALUE_INPUT_PIN_2 );
  6c:	2044      	movs	r0, #68	; 0x44
  6e:	e06e      	b.n	14e <BkpSetFactoryDefaultsForLight+0x14e>
C:\cortex\dimmers\src/dimmers_bkp.c:90
    
    }
    else if ( inputpin == PIN_BUTTON_3 ){
  70:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
  74:	d118      	bne.n	a8 <BkpSetFactoryDefaultsForLight+0xa8>
C:\cortex\dimmers\src/dimmers_bkp.c:92
    
        BKP_WriteBackupRegister( POS_VALUE_LIGHT_3 ,            DEFAULT_VALUE_LIGHT_OFF );
  76:	2048      	movs	r0, #72	; 0x48
  78:	f242 7110 	movw	r1, #10000	; 0x2710
  7c:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:93
        BKP_WriteBackupRegister( POS_VALUE_MIN_LIGHT_3 ,        DEFAULT_VALUE_MIN_LIGHT );
  80:	204c      	movs	r0, #76	; 0x4c
  82:	f242 1134 	movw	r1, #8500	; 0x2134
  86:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:94
        BKP_WriteBackupRegister( POS_VALUE_MAX_LIGHT_3 ,        DEFAULT_VALUE_MAX_LIGHT );
  8a:	2050      	movs	r0, #80	; 0x50
  8c:	f640 11c4 	movw	r1, #2500	; 0x9c4
  90:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:95
        BKP_WriteBackupRegister( POS_VALUE_STEP_LIGHT_3 ,       DEFAULT_VALUE_STEP );
  94:	2054      	movs	r0, #84	; 0x54
  96:	2164      	movs	r1, #100	; 0x64
  98:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:96
        BKP_WriteBackupRegister( POS_VALUE_OUTPUT_PIN_LIGHT_3 , DEFAULT_VALUE_OUTPUT_PIN_3 );
  9c:	2058      	movs	r0, #88	; 0x58
  9e:	2104      	movs	r1, #4
  a0:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:97
        BKP_WriteBackupRegister( POS_VALUE_INPUT_PIN_LIGHT_3 ,  DEFAULT_VALUE_INPUT_PIN_3 );
  a4:	205c      	movs	r0, #92	; 0x5c
  a6:	e052      	b.n	14e <BkpSetFactoryDefaultsForLight+0x14e>
C:\cortex\dimmers\src/dimmers_bkp.c:100
    
    }
    else if ( inputpin == PIN_BUTTON_4 ){
  a8:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
  ac:	d118      	bne.n	e0 <BkpSetFactoryDefaultsForLight+0xe0>
C:\cortex\dimmers\src/dimmers_bkp.c:102
    
        BKP_WriteBackupRegister( POS_VALUE_LIGHT_4 ,            DEFAULT_VALUE_LIGHT_OFF );
  ae:	2060      	movs	r0, #96	; 0x60
  b0:	f242 7110 	movw	r1, #10000	; 0x2710
  b4:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:103
        BKP_WriteBackupRegister( POS_VALUE_MIN_LIGHT_4 ,        DEFAULT_VALUE_MIN_LIGHT );
  b8:	2064      	movs	r0, #100	; 0x64
  ba:	f242 1134 	movw	r1, #8500	; 0x2134
  be:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:104
        BKP_WriteBackupRegister( POS_VALUE_MAX_LIGHT_4 ,        DEFAULT_VALUE_MAX_LIGHT );
  c2:	2068      	movs	r0, #104	; 0x68
  c4:	f640 11c4 	movw	r1, #2500	; 0x9c4
  c8:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:105
        BKP_WriteBackupRegister( POS_VALUE_STEP_LIGHT_4 ,       DEFAULT_VALUE_STEP );
  cc:	206c      	movs	r0, #108	; 0x6c
  ce:	2164      	movs	r1, #100	; 0x64
  d0:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:106
        BKP_WriteBackupRegister( POS_VALUE_OUTPUT_PIN_LIGHT_4 , DEFAULT_VALUE_OUTPUT_PIN_4 );
  d4:	2070      	movs	r0, #112	; 0x70
  d6:	2108      	movs	r1, #8
  d8:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:107
        BKP_WriteBackupRegister( POS_VALUE_INPUT_PIN_LIGHT_4 ,  DEFAULT_VALUE_INPUT_PIN_4 );
  dc:	2074      	movs	r0, #116	; 0x74
  de:	e036      	b.n	14e <BkpSetFactoryDefaultsForLight+0x14e>
C:\cortex\dimmers\src/dimmers_bkp.c:110
    
    }
    else if ( inputpin == PIN_BUTTON_5 ){
  e0:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
  e4:	d118      	bne.n	118 <BkpSetFactoryDefaultsForLight+0x118>
C:\cortex\dimmers\src/dimmers_bkp.c:112
    
        BKP_WriteBackupRegister( POS_VALUE_LIGHT_5 ,            DEFAULT_VALUE_LIGHT_OFF );
  e6:	2078      	movs	r0, #120	; 0x78
  e8:	f242 7110 	movw	r1, #10000	; 0x2710
  ec:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:113
        BKP_WriteBackupRegister( POS_VALUE_MIN_LIGHT_5 ,        DEFAULT_VALUE_MIN_LIGHT );
  f0:	207c      	movs	r0, #124	; 0x7c
  f2:	f242 1134 	movw	r1, #8500	; 0x2134
  f6:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:114
        BKP_WriteBackupRegister( POS_VALUE_MAX_LIGHT_5 ,        DEFAULT_VALUE_MAX_LIGHT );
  fa:	2080      	movs	r0, #128	; 0x80
  fc:	f640 11c4 	movw	r1, #2500	; 0x9c4
 100:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:115
        BKP_WriteBackupRegister( POS_VALUE_STEP_LIGHT_5 ,       DEFAULT_VALUE_STEP );
 104:	2084      	movs	r0, #132	; 0x84
 106:	2164      	movs	r1, #100	; 0x64
 108:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:116
        BKP_WriteBackupRegister( POS_VALUE_OUTPUT_PIN_LIGHT_5 , DEFAULT_VALUE_OUTPUT_PIN_5 );
 10c:	2088      	movs	r0, #136	; 0x88
 10e:	2110      	movs	r1, #16
 110:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:117
        BKP_WriteBackupRegister( POS_VALUE_INPUT_PIN_LIGHT_5 ,  DEFAULT_VALUE_INPUT_PIN_5 );
 114:	208c      	movs	r0, #140	; 0x8c
 116:	e01a      	b.n	14e <BkpSetFactoryDefaultsForLight+0x14e>
C:\cortex\dimmers\src/dimmers_bkp.c:120
    
    }
    else if ( inputpin == PIN_BUTTON_6 ){
 118:	f5b0 6f00 	cmp.w	r0, #2048	; 0x800
 11c:	d11c      	bne.n	158 <BkpSetFactoryDefaultsForLight+0x158>
C:\cortex\dimmers\src/dimmers_bkp.c:122
    
        BKP_WriteBackupRegister( POS_VALUE_LIGHT_6 ,            DEFAULT_VALUE_LIGHT_OFF );
 11e:	2090      	movs	r0, #144	; 0x90
 120:	f242 7110 	movw	r1, #10000	; 0x2710
 124:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:123
        BKP_WriteBackupRegister( POS_VALUE_MIN_LIGHT_6 ,        DEFAULT_VALUE_MIN_LIGHT );
 128:	2094      	movs	r0, #148	; 0x94
 12a:	f242 1134 	movw	r1, #8500	; 0x2134
 12e:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:124
        BKP_WriteBackupRegister( POS_VALUE_MAX_LIGHT_6 ,        DEFAULT_VALUE_MAX_LIGHT );
 132:	2098      	movs	r0, #152	; 0x98
 134:	f640 11c4 	movw	r1, #2500	; 0x9c4
 138:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:125
        BKP_WriteBackupRegister( POS_VALUE_STEP_LIGHT_6 ,       DEFAULT_VALUE_STEP );
 13c:	209c      	movs	r0, #156	; 0x9c
 13e:	2164      	movs	r1, #100	; 0x64
 140:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:126
        BKP_WriteBackupRegister( POS_VALUE_OUTPUT_PIN_LIGHT_6 , DEFAULT_VALUE_OUTPUT_PIN_6 );
 144:	20a0      	movs	r0, #160	; 0xa0
 146:	2120      	movs	r1, #32
 148:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:127
        BKP_WriteBackupRegister( POS_VALUE_INPUT_PIN_LIGHT_6 ,  DEFAULT_VALUE_INPUT_PIN_6 );
 14c:	20a4      	movs	r0, #164	; 0xa4
 14e:	4621      	mov	r1, r4
C:\cortex\dimmers\src/dimmers_bkp.c:130
    
    }
}
 150:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
C:\cortex\dimmers\src/dimmers_bkp.c:127
        BKP_WriteBackupRegister( POS_VALUE_LIGHT_6 ,            DEFAULT_VALUE_LIGHT_OFF );
        BKP_WriteBackupRegister( POS_VALUE_MIN_LIGHT_6 ,        DEFAULT_VALUE_MIN_LIGHT );
        BKP_WriteBackupRegister( POS_VALUE_MAX_LIGHT_6 ,        DEFAULT_VALUE_MAX_LIGHT );
        BKP_WriteBackupRegister( POS_VALUE_STEP_LIGHT_6 ,       DEFAULT_VALUE_STEP );
        BKP_WriteBackupRegister( POS_VALUE_OUTPUT_PIN_LIGHT_6 , DEFAULT_VALUE_OUTPUT_PIN_6 );
        BKP_WriteBackupRegister( POS_VALUE_INPUT_PIN_LIGHT_6 ,  DEFAULT_VALUE_INPUT_PIN_6 );
 154:	f7ff bffe 	b.w	0 <BKP_WriteBackupRegister>
 158:	bd10      	pop	{r4, pc}

Disassembly of section .text.BkpSetFactoryDefaultsGeneral:

00000000 <BkpSetFactoryDefaultsGeneral>:
BkpSetFactoryDefaultsGeneral():
C:\cortex\dimmers\src/dimmers_bkp.c:132
    
    }
}

void    BkpSetFactoryDefaultsGeneral   ( void ){
   0:	b510      	push	{r4, lr}
C:\cortex\dimmers\src/dimmers_bkp.c:134

    BKP_WriteBackupRegister( POS_VALUE_TEMP_SENSOR    , DEFAULT_VALUE_TEMP_SENSOR );
   2:	20a8      	movs	r0, #168	; 0xa8
   4:	2100      	movs	r1, #0
   6:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:135
    BKP_WriteBackupRegister( POS_VALUE_COUNT_WATCHDOG , DEFAULT_VALUE_COUNT_WATCHDOG);
   a:	20ac      	movs	r0, #172	; 0xac
   c:	2100      	movs	r1, #0
   e:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:136
    BKP_WriteBackupRegister( POS_VALUE_COUNT_TOGGLE   , DEFAULT_VALUE_COUNT_TOGGLE);
  12:	20b0      	movs	r0, #176	; 0xb0
  14:	2100      	movs	r1, #0
  16:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:137
    BKP_WriteBackupRegister( POS_VALUE_COUNT_DIMMER   , DEFAULT_VALUE_COUNT_DIMMER);
  1a:	20b4      	movs	r0, #180	; 0xb4
  1c:	2100      	movs	r1, #0
  1e:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:138
    BKP_WriteBackupRegister( POS_VALUE_COUNT_HOURS    , DEFAULT_VALUE_COUNT_HOURS);
  22:	20b8      	movs	r0, #184	; 0xb8
  24:	2100      	movs	r1, #0
  26:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:139
    BKP_WriteBackupRegister( POS_VALUE_GENERAL_FLAGS  , DEFAULT_VALUE_GENERAL_FLAGS);
  2a:	20bc      	movs	r0, #188	; 0xbc
  2c:	2100      	movs	r1, #0
C:\cortex\dimmers\src/dimmers_bkp.c:141

}
  2e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
C:\cortex\dimmers\src/dimmers_bkp.c:139
    BKP_WriteBackupRegister( POS_VALUE_TEMP_SENSOR    , DEFAULT_VALUE_TEMP_SENSOR );
    BKP_WriteBackupRegister( POS_VALUE_COUNT_WATCHDOG , DEFAULT_VALUE_COUNT_WATCHDOG);
    BKP_WriteBackupRegister( POS_VALUE_COUNT_TOGGLE   , DEFAULT_VALUE_COUNT_TOGGLE);
    BKP_WriteBackupRegister( POS_VALUE_COUNT_DIMMER   , DEFAULT_VALUE_COUNT_DIMMER);
    BKP_WriteBackupRegister( POS_VALUE_COUNT_HOURS    , DEFAULT_VALUE_COUNT_HOURS);
    BKP_WriteBackupRegister( POS_VALUE_GENERAL_FLAGS  , DEFAULT_VALUE_GENERAL_FLAGS);
  32:	f7ff bffe 	b.w	0 <BKP_WriteBackupRegister>

Disassembly of section .text.BkpGetSwitcherType:

00000000 <BkpGetSwitcherType>:
BkpGetSwitcherType():
C:\cortex\dimmers\src/dimmers_bkp.c:143

}

SWITCHER_TYPE BkpGetSwitcherType (  u16 inputpin ){
   0:	b513      	push	{r0, r1, r4, lr}
   2:	4604      	mov	r4, r0
C:\cortex\dimmers\src/dimmers_bkp.c:147

    vu32 flags,bits;

    PropertyFlags = BKP_ReadBackupRegister( POS_VALUE_GENERAL_FLAGS );
   4:	20bc      	movs	r0, #188	; 0xbc
   6:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
   a:	4b21      	ldr	r3, [pc, #132]	; (90 <BkpGetSwitcherType+0x90>)
C:\cortex\dimmers\src/dimmers_bkp.c:151

    flags = BB_GETVARADDR (PropertyFlags);

    if ( inputpin == PIN_BUTTON_1 ){
   c:	2c40      	cmp	r4, #64	; 0x40
C:\cortex\dimmers\src/dimmers_bkp.c:147

SWITCHER_TYPE BkpGetSwitcherType (  u16 inputpin ){

    vu32 flags,bits;

    PropertyFlags = BKP_ReadBackupRegister( POS_VALUE_GENERAL_FLAGS );
   e:	6018      	str	r0, [r3, #0]
C:\cortex\dimmers\src/dimmers_bkp.c:149

    flags = BB_GETVARADDR (PropertyFlags);
  10:	9301      	str	r3, [sp, #4]
C:\cortex\dimmers\src/dimmers_bkp.c:151

    if ( inputpin == PIN_BUTTON_1 ){
  12:	d104      	bne.n	1e <BkpGetSwitcherType+0x1e>
C:\cortex\dimmers\src/dimmers_bkp.c:152
        if ( BB_GETBIT (flags,0) == 1 )
  14:	9b01      	ldr	r3, [sp, #4]
  16:	015b      	lsls	r3, r3, #5
  18:	f043 5308 	orr.w	r3, r3, #570425344	; 0x22000000
  1c:	e02f      	b.n	7e <BkpGetSwitcherType+0x7e>
C:\cortex\dimmers\src/dimmers_bkp.c:157
            return SWITCH_TYPE;
        else
            return BUTTON_TYPE;
    }
    else if ( inputpin == PIN_BUTTON_2 ){
  1e:	2c80      	cmp	r4, #128	; 0x80
  20:	d106      	bne.n	30 <BkpGetSwitcherType+0x30>
C:\cortex\dimmers\src/dimmers_bkp.c:158
        if ( BB_GETBIT (flags,1) == 1 )
  22:	9b01      	ldr	r3, [sp, #4]
  24:	015b      	lsls	r3, r3, #5
  26:	f043 5308 	orr.w	r3, r3, #570425344	; 0x22000000
  2a:	f043 0304 	orr.w	r3, r3, #4
  2e:	e026      	b.n	7e <BkpGetSwitcherType+0x7e>
C:\cortex\dimmers\src/dimmers_bkp.c:163
            return SWITCH_TYPE;
        else
            return BUTTON_TYPE;
    }
    else if ( inputpin == PIN_BUTTON_3 ){
  30:	f5b4 7f80 	cmp.w	r4, #256	; 0x100
  34:	d106      	bne.n	44 <BkpGetSwitcherType+0x44>
C:\cortex\dimmers\src/dimmers_bkp.c:164
        if ( BB_GETBIT (flags,2) == 1 )
  36:	9b01      	ldr	r3, [sp, #4]
  38:	015b      	lsls	r3, r3, #5
  3a:	f043 5308 	orr.w	r3, r3, #570425344	; 0x22000000
  3e:	f043 0308 	orr.w	r3, r3, #8
  42:	e01c      	b.n	7e <BkpGetSwitcherType+0x7e>
C:\cortex\dimmers\src/dimmers_bkp.c:169
            return SWITCH_TYPE;
        else
            return BUTTON_TYPE;
    }
    else if ( inputpin == PIN_BUTTON_4 ){
  44:	f5b4 7f00 	cmp.w	r4, #512	; 0x200
  48:	d106      	bne.n	58 <BkpGetSwitcherType+0x58>
C:\cortex\dimmers\src/dimmers_bkp.c:170
        if ( BB_GETBIT (flags,3) == 1 )
  4a:	9b01      	ldr	r3, [sp, #4]
  4c:	015b      	lsls	r3, r3, #5
  4e:	f043 5308 	orr.w	r3, r3, #570425344	; 0x22000000
  52:	f043 030c 	orr.w	r3, r3, #12
  56:	e012      	b.n	7e <BkpGetSwitcherType+0x7e>
C:\cortex\dimmers\src/dimmers_bkp.c:175
            return SWITCH_TYPE;
        else
            return BUTTON_TYPE;
    }
    else if ( inputpin == PIN_BUTTON_5 ){
  58:	f5b4 6f80 	cmp.w	r4, #1024	; 0x400
  5c:	d106      	bne.n	6c <BkpGetSwitcherType+0x6c>
C:\cortex\dimmers\src/dimmers_bkp.c:176
        if ( BB_GETBIT (flags,4) == 1 )
  5e:	9b01      	ldr	r3, [sp, #4]
  60:	015b      	lsls	r3, r3, #5
  62:	f043 5308 	orr.w	r3, r3, #570425344	; 0x22000000
  66:	f043 0310 	orr.w	r3, r3, #16
  6a:	e008      	b.n	7e <BkpGetSwitcherType+0x7e>
C:\cortex\dimmers\src/dimmers_bkp.c:181
            return SWITCH_TYPE;
        else
            return BUTTON_TYPE;
    }
    else if ( inputpin == PIN_BUTTON_6 ){
  6c:	f5b4 6f00 	cmp.w	r4, #2048	; 0x800
  70:	d10c      	bne.n	8c <BkpGetSwitcherType+0x8c>
C:\cortex\dimmers\src/dimmers_bkp.c:182
        if ( BB_GETBIT (flags,5) == 1 )
  72:	9b01      	ldr	r3, [sp, #4]
  74:	015b      	lsls	r3, r3, #5
  76:	f043 5308 	orr.w	r3, r3, #570425344	; 0x22000000
  7a:	f043 0314 	orr.w	r3, r3, #20
  7e:	6818      	ldr	r0, [r3, #0]
C:\cortex\dimmers\src/dimmers_bkp.c:153

    flags = BB_GETVARADDR (PropertyFlags);

    if ( inputpin == PIN_BUTTON_1 ){
        if ( BB_GETBIT (flags,0) == 1 )
            return SWITCH_TYPE;
  80:	f1a0 0301 	sub.w	r3, r0, #1
  84:	4258      	negs	r0, r3
  86:	eb40 0003 	adc.w	r0, r0, r3
  8a:	e7ff      	b.n	8c <BkpGetSwitcherType+0x8c>
C:\cortex\dimmers\src/dimmers_bkp.c:187
        if ( BB_GETBIT (flags,5) == 1 )
            return SWITCH_TYPE;
        else
            return BUTTON_TYPE;
    }
}
  8c:	bd1c      	pop	{r2, r3, r4, pc}
  8e:	bf00      	nop
  90:	00000000 	.word	0x00000000

Disassembly of section .text.BkpWriteGeneralToMemory:

00000000 <BkpWriteGeneralToMemory>:
BkpWriteGeneralToMemory():
C:\cortex\dimmers\src/dimmers_bkp.c:189

void    BkpWriteGeneralToMemory ( void ){
   0:	20a8b508 	.word	0x20a8b508
C:\cortex\dimmers\src/dimmers_bkp.c:190
  TempSensor    = BKP_ReadBackupRegister( POS_VALUE_TEMP_SENSOR);
   4:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
   8:	4b0d      	ldr	r3, [pc, #52]	; (40 <BkpWriteGeneralToMemory+0x40>)
   a:	8018      	strh	r0, [r3, #0]
C:\cortex\dimmers\src/dimmers_bkp.c:191
  CountWatchdog = BKP_ReadBackupRegister( POS_VALUE_COUNT_WATCHDOG );
   c:	20ac      	movs	r0, #172	; 0xac
   e:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
  12:	4b0c      	ldr	r3, [pc, #48]	; (44 <BkpWriteGeneralToMemory+0x44>)
  14:	8018      	strh	r0, [r3, #0]
C:\cortex\dimmers\src/dimmers_bkp.c:192
  ToggleCount   = BKP_ReadBackupRegister( POS_VALUE_COUNT_TOGGLE );
  16:	20b0      	movs	r0, #176	; 0xb0
  18:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
  1c:	4b0a      	ldr	r3, [pc, #40]	; (48 <BkpWriteGeneralToMemory+0x48>)
  1e:	8018      	strh	r0, [r3, #0]
C:\cortex\dimmers\src/dimmers_bkp.c:193
  DimmerCount   = BKP_ReadBackupRegister( POS_VALUE_COUNT_DIMMER );
  20:	20b4      	movs	r0, #180	; 0xb4
  22:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
  26:	4b09      	ldr	r3, [pc, #36]	; (4c <BkpWriteGeneralToMemory+0x4c>)
  28:	8018      	strh	r0, [r3, #0]
C:\cortex\dimmers\src/dimmers_bkp.c:194
  HoursCount    = BKP_ReadBackupRegister( POS_VALUE_COUNT_HOURS);
  2a:	20b8      	movs	r0, #184	; 0xb8
  2c:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
  30:	4b07      	ldr	r3, [pc, #28]	; (50 <BkpWriteGeneralToMemory+0x50>)
  32:	8018      	strh	r0, [r3, #0]
C:\cortex\dimmers\src/dimmers_bkp.c:195
  PropertyFlags = BKP_ReadBackupRegister( POS_VALUE_GENERAL_FLAGS );
  34:	20bc      	movs	r0, #188	; 0xbc
  36:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
  3a:	4b06      	ldr	r3, [pc, #24]	; (54 <BkpWriteGeneralToMemory+0x54>)
  3c:	6018      	str	r0, [r3, #0]
C:\cortex\dimmers\src/dimmers_bkp.c:196
}
  3e:	bd08      	pop	{r3, pc}
	...

Disassembly of section .text.BkpWriteLightPropertiesToMemory:

00000000 <BkpWriteLightPropertiesToMemory>:
BkpWriteLightPropertiesToMemory():
C:\cortex\dimmers\src/dimmers_bkp.c:200

void    BkpWriteLightPropertiesToMemory ( u16 inputpin , pTLightProperties props ){

    if ( inputpin == PIN_BUTTON_1 ){
   0:	2840      	cmp	r0, #64	; 0x40
C:\cortex\dimmers\src/dimmers_bkp.c:198
  DimmerCount   = BKP_ReadBackupRegister( POS_VALUE_COUNT_DIMMER );
  HoursCount    = BKP_ReadBackupRegister( POS_VALUE_COUNT_HOURS);
  PropertyFlags = BKP_ReadBackupRegister( POS_VALUE_GENERAL_FLAGS );
}

void    BkpWriteLightPropertiesToMemory ( u16 inputpin , pTLightProperties props ){
   2:	b538      	push	{r3, r4, r5, lr}
   4:	4604      	mov	r4, r0
   6:	460d      	mov	r5, r1
C:\cortex\dimmers\src/dimmers_bkp.c:200

    if ( inputpin == PIN_BUTTON_1 ){
   8:	d115      	bne.n	36 <BkpWriteLightPropertiesToMemory+0x36>
C:\cortex\dimmers\src/dimmers_bkp.c:202
    
        props->value    =   BKP_ReadBackupRegister( POS_VALUE_LIGHT_1 );
   a:	2004      	movs	r0, #4
   c:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
  10:	8028      	strh	r0, [r5, #0]
C:\cortex\dimmers\src/dimmers_bkp.c:203
        props->min      =   BKP_ReadBackupRegister( POS_VALUE_MIN_LIGHT_1 );
  12:	2008      	movs	r0, #8
  14:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
  18:	8068      	strh	r0, [r5, #2]
C:\cortex\dimmers\src/dimmers_bkp.c:204
        props->max      =   BKP_ReadBackupRegister( POS_VALUE_MAX_LIGHT_1 );
  1a:	200c      	movs	r0, #12
  1c:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
  20:	80a8      	strh	r0, [r5, #4]
C:\cortex\dimmers\src/dimmers_bkp.c:205
        props->step     =   BKP_ReadBackupRegister( POS_VALUE_STEP_LIGHT_1 );
  22:	2010      	movs	r0, #16
  24:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
  28:	80e8      	strh	r0, [r5, #6]
C:\cortex\dimmers\src/dimmers_bkp.c:206
        props->outputpin=   BKP_ReadBackupRegister( POS_VALUE_OUTPUT_PIN_LIGHT_1 );
  2a:	2014      	movs	r0, #20
  2c:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
  30:	8128      	strh	r0, [r5, #8]
C:\cortex\dimmers\src/dimmers_bkp.c:207
        props->inputpin =   BKP_ReadBackupRegister( POS_VALUE_INPUT_PIN_LIGHT_1 );
  32:	2018      	movs	r0, #24
  34:	e061      	b.n	fa <BkpWriteLightPropertiesToMemory+0xfa>
C:\cortex\dimmers\src/dimmers_bkp.c:211
        props->type     =   BkpGetSwitcherType(inputpin);
    
    }
    else if ( inputpin == PIN_BUTTON_2 ){
  36:	2880      	cmp	r0, #128	; 0x80
  38:	d115      	bne.n	66 <BkpWriteLightPropertiesToMemory+0x66>
C:\cortex\dimmers\src/dimmers_bkp.c:213
    
        props->value    =   BKP_ReadBackupRegister( POS_VALUE_LIGHT_2 );
  3a:	201c      	movs	r0, #28
  3c:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
  40:	8028      	strh	r0, [r5, #0]
C:\cortex\dimmers\src/dimmers_bkp.c:214
        props->min      =   BKP_ReadBackupRegister( POS_VALUE_MIN_LIGHT_2 );
  42:	2020      	movs	r0, #32
  44:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
  48:	8068      	strh	r0, [r5, #2]
C:\cortex\dimmers\src/dimmers_bkp.c:215
        props->max      =   BKP_ReadBackupRegister( POS_VALUE_MAX_LIGHT_2 );
  4a:	2024      	movs	r0, #36	; 0x24
  4c:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
  50:	80a8      	strh	r0, [r5, #4]
C:\cortex\dimmers\src/dimmers_bkp.c:216
        props->step     =   BKP_ReadBackupRegister( POS_VALUE_STEP_LIGHT_2 );
  52:	2028      	movs	r0, #40	; 0x28
  54:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
  58:	80e8      	strh	r0, [r5, #6]
C:\cortex\dimmers\src/dimmers_bkp.c:217
        props->outputpin=   BKP_ReadBackupRegister( POS_VALUE_OUTPUT_PIN_LIGHT_2 );
  5a:	2040      	movs	r0, #64	; 0x40
  5c:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
  60:	8128      	strh	r0, [r5, #8]
C:\cortex\dimmers\src/dimmers_bkp.c:218
        props->inputpin =   BKP_ReadBackupRegister( POS_VALUE_INPUT_PIN_LIGHT_2 );
  62:	2044      	movs	r0, #68	; 0x44
  64:	e049      	b.n	fa <BkpWriteLightPropertiesToMemory+0xfa>
C:\cortex\dimmers\src/dimmers_bkp.c:222
        props->type     =   BkpGetSwitcherType(inputpin);

    }
    else if ( inputpin == PIN_BUTTON_3 ){
  66:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
  6a:	d115      	bne.n	98 <BkpWriteLightPropertiesToMemory+0x98>
C:\cortex\dimmers\src/dimmers_bkp.c:224
    
        props->value    =   BKP_ReadBackupRegister( POS_VALUE_LIGHT_3 );
  6c:	2048      	movs	r0, #72	; 0x48
  6e:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
  72:	8028      	strh	r0, [r5, #0]
C:\cortex\dimmers\src/dimmers_bkp.c:225
        props->min      =   BKP_ReadBackupRegister( POS_VALUE_MIN_LIGHT_3 );
  74:	204c      	movs	r0, #76	; 0x4c
  76:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
  7a:	8068      	strh	r0, [r5, #2]
C:\cortex\dimmers\src/dimmers_bkp.c:226
        props->max      =   BKP_ReadBackupRegister( POS_VALUE_MAX_LIGHT_3 );
  7c:	2050      	movs	r0, #80	; 0x50
  7e:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
  82:	80a8      	strh	r0, [r5, #4]
C:\cortex\dimmers\src/dimmers_bkp.c:227
        props->step     =   BKP_ReadBackupRegister( POS_VALUE_STEP_LIGHT_3 );
  84:	2054      	movs	r0, #84	; 0x54
  86:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
  8a:	80e8      	strh	r0, [r5, #6]
C:\cortex\dimmers\src/dimmers_bkp.c:228
        props->outputpin=   BKP_ReadBackupRegister( POS_VALUE_OUTPUT_PIN_LIGHT_3 );
  8c:	2058      	movs	r0, #88	; 0x58
  8e:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
  92:	8128      	strh	r0, [r5, #8]
C:\cortex\dimmers\src/dimmers_bkp.c:229
        props->inputpin =   BKP_ReadBackupRegister( POS_VALUE_INPUT_PIN_LIGHT_3 );
  94:	205c      	movs	r0, #92	; 0x5c
  96:	e030      	b.n	fa <BkpWriteLightPropertiesToMemory+0xfa>
C:\cortex\dimmers\src/dimmers_bkp.c:232
        props->type     =   BkpGetSwitcherType(inputpin);
    }
    else if ( inputpin == PIN_BUTTON_4 ){
  98:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
  9c:	d115      	bne.n	ca <BkpWriteLightPropertiesToMemory+0xca>
C:\cortex\dimmers\src/dimmers_bkp.c:234
    
        props->value    =   BKP_ReadBackupRegister( POS_VALUE_LIGHT_4 );
  9e:	2060      	movs	r0, #96	; 0x60
  a0:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
  a4:	8028      	strh	r0, [r5, #0]
C:\cortex\dimmers\src/dimmers_bkp.c:235
        props->min      =   BKP_ReadBackupRegister( POS_VALUE_MIN_LIGHT_4 );
  a6:	2064      	movs	r0, #100	; 0x64
  a8:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
  ac:	8068      	strh	r0, [r5, #2]
C:\cortex\dimmers\src/dimmers_bkp.c:236
        props->max      =   BKP_ReadBackupRegister( POS_VALUE_MAX_LIGHT_4 );
  ae:	2068      	movs	r0, #104	; 0x68
  b0:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
  b4:	80a8      	strh	r0, [r5, #4]
C:\cortex\dimmers\src/dimmers_bkp.c:237
        props->step     =   BKP_ReadBackupRegister( POS_VALUE_STEP_LIGHT_4 );
  b6:	206c      	movs	r0, #108	; 0x6c
  b8:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
  bc:	80e8      	strh	r0, [r5, #6]
C:\cortex\dimmers\src/dimmers_bkp.c:238
        props->outputpin=   BKP_ReadBackupRegister( POS_VALUE_OUTPUT_PIN_LIGHT_4 );
  be:	2070      	movs	r0, #112	; 0x70
  c0:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
  c4:	8128      	strh	r0, [r5, #8]
C:\cortex\dimmers\src/dimmers_bkp.c:239
        props->inputpin =   BKP_ReadBackupRegister( POS_VALUE_INPUT_PIN_LIGHT_4 );
  c6:	2074      	movs	r0, #116	; 0x74
  c8:	e017      	b.n	fa <BkpWriteLightPropertiesToMemory+0xfa>
C:\cortex\dimmers\src/dimmers_bkp.c:242
        props->type     =   BkpGetSwitcherType(inputpin);
    }
    else if ( inputpin == PIN_BUTTON_5 ){
  ca:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
  ce:	d11c      	bne.n	10a <BkpWriteLightPropertiesToMemory+0x10a>
C:\cortex\dimmers\src/dimmers_bkp.c:244
    
        props->value    =   BKP_ReadBackupRegister( POS_VALUE_LIGHT_5 );
  d0:	2078      	movs	r0, #120	; 0x78
  d2:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
  d6:	8028      	strh	r0, [r5, #0]
C:\cortex\dimmers\src/dimmers_bkp.c:245
        props->min      =   BKP_ReadBackupRegister( POS_VALUE_MIN_LIGHT_5 );
  d8:	207c      	movs	r0, #124	; 0x7c
  da:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
  de:	8068      	strh	r0, [r5, #2]
C:\cortex\dimmers\src/dimmers_bkp.c:246
        props->max      =   BKP_ReadBackupRegister( POS_VALUE_MAX_LIGHT_5 );
  e0:	2080      	movs	r0, #128	; 0x80
  e2:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
  e6:	80a8      	strh	r0, [r5, #4]
C:\cortex\dimmers\src/dimmers_bkp.c:247
        props->step     =   BKP_ReadBackupRegister( POS_VALUE_STEP_LIGHT_5 );
  e8:	2084      	movs	r0, #132	; 0x84
  ea:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
  ee:	80e8      	strh	r0, [r5, #6]
C:\cortex\dimmers\src/dimmers_bkp.c:248
        props->outputpin=   BKP_ReadBackupRegister( POS_VALUE_OUTPUT_PIN_LIGHT_5 );
  f0:	2088      	movs	r0, #136	; 0x88
  f2:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
  f6:	8128      	strh	r0, [r5, #8]
C:\cortex\dimmers\src/dimmers_bkp.c:249
        props->inputpin =   BKP_ReadBackupRegister( POS_VALUE_INPUT_PIN_LIGHT_5 );
  f8:	208c      	movs	r0, #140	; 0x8c
  fa:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
  fe:	8168      	strh	r0, [r5, #10]
C:\cortex\dimmers\src/dimmers_bkp.c:250
        props->type     =   BkpGetSwitcherType(inputpin);
 100:	4620      	mov	r0, r4
 102:	f7ff fffe 	bl	0 <BkpWriteLightPropertiesToMemory>
 106:	7328      	strb	r0, [r5, #12]
 108:	bd38      	pop	{r3, r4, r5, pc}
C:\cortex\dimmers\src/dimmers_bkp.c:252
    }
    else if ( inputpin == PIN_BUTTON_6 ){
 10a:	f5b0 6f00 	cmp.w	r0, #2048	; 0x800
 10e:	d11b      	bne.n	148 <BkpWriteLightPropertiesToMemory+0x148>
C:\cortex\dimmers\src/dimmers_bkp.c:254
    
        props->value    =   BKP_ReadBackupRegister( POS_VALUE_LIGHT_6 );
 110:	2090      	movs	r0, #144	; 0x90
 112:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
 116:	8028      	strh	r0, [r5, #0]
C:\cortex\dimmers\src/dimmers_bkp.c:255
        props->min      =   BKP_ReadBackupRegister( POS_VALUE_MIN_LIGHT_6 );
 118:	2094      	movs	r0, #148	; 0x94
 11a:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
 11e:	8068      	strh	r0, [r5, #2]
C:\cortex\dimmers\src/dimmers_bkp.c:256
        props->max      =   BKP_ReadBackupRegister( POS_VALUE_MAX_LIGHT_6 );
 120:	2098      	movs	r0, #152	; 0x98
 122:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
 126:	80a8      	strh	r0, [r5, #4]
C:\cortex\dimmers\src/dimmers_bkp.c:257
        props->step     =   BKP_ReadBackupRegister( POS_VALUE_STEP_LIGHT_6);
 128:	209c      	movs	r0, #156	; 0x9c
 12a:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
 12e:	80e8      	strh	r0, [r5, #6]
C:\cortex\dimmers\src/dimmers_bkp.c:258
        props->outputpin=   BKP_ReadBackupRegister( POS_VALUE_OUTPUT_PIN_LIGHT_6 );
 130:	20a0      	movs	r0, #160	; 0xa0
 132:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
 136:	8128      	strh	r0, [r5, #8]
C:\cortex\dimmers\src/dimmers_bkp.c:259
        props->inputpin =   BKP_ReadBackupRegister( POS_VALUE_INPUT_PIN_LIGHT_6 );
 138:	20a4      	movs	r0, #164	; 0xa4
 13a:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
 13e:	8168      	strh	r0, [r5, #10]
C:\cortex\dimmers\src/dimmers_bkp.c:260
        props->type     =   BkpGetSwitcherType(inputpin);
 140:	4620      	mov	r0, r4
 142:	f7ff fffe 	bl	0 <BkpWriteLightPropertiesToMemory>
 146:	7328      	strb	r0, [r5, #12]
 148:	bd38      	pop	{r3, r4, r5, pc}

Disassembly of section .text.BkpSetFactoryDefaultsToLights:

00000000 <BkpSetFactoryDefaultsToLights>:
BkpSetFactoryDefaultsToLights():
C:\cortex\dimmers\src/dimmers_bkp.c:265
    }

}

void    BkpSetFactoryDefaultsToLights ( void ){
   0:	b510      	push	{r4, lr}
C:\cortex\dimmers\src/dimmers_bkp.c:267

    if ( (GpioGetDipState(FACTORY_DEFAULT_SWITCH) == ON ) || ( IsWatchdog == TRUE) ) {
   2:	f44f 5080 	mov.w	r0, #4096	; 0x1000
   6:	f7ff fffe 	bl	0 <GpioGetDipState>
   a:	b118      	cbz	r0, 14 <BkpSetFactoryDefaultsToLights+0x14>
   c:	4b0f      	ldr	r3, [pc, #60]	; (4c <BkpSetFactoryDefaultsToLights+0x4c>)
   e:	781b      	ldrb	r3, [r3, #0]
  10:	2b01      	cmp	r3, #1
  12:	d119      	bne.n	48 <BkpSetFactoryDefaultsToLights+0x48>
C:\cortex\dimmers\src/dimmers_bkp.c:269

        BkpSetFactoryDefaultsForLight ( PIN_BUTTON_1 );
  14:	2040      	movs	r0, #64	; 0x40
  16:	f7ff fffe 	bl	0 <BkpSetFactoryDefaultsToLights>
C:\cortex\dimmers\src/dimmers_bkp.c:270
        BkpSetFactoryDefaultsForLight ( PIN_BUTTON_2 );
  1a:	2080      	movs	r0, #128	; 0x80
  1c:	f7ff fffe 	bl	0 <BkpSetFactoryDefaultsToLights>
C:\cortex\dimmers\src/dimmers_bkp.c:271
        BkpSetFactoryDefaultsForLight ( PIN_BUTTON_3 );
  20:	f44f 7080 	mov.w	r0, #256	; 0x100
  24:	f7ff fffe 	bl	0 <BkpSetFactoryDefaultsToLights>
C:\cortex\dimmers\src/dimmers_bkp.c:272
        BkpSetFactoryDefaultsForLight ( PIN_BUTTON_4 );
  28:	f44f 7000 	mov.w	r0, #512	; 0x200
  2c:	f7ff fffe 	bl	0 <BkpSetFactoryDefaultsToLights>
C:\cortex\dimmers\src/dimmers_bkp.c:273
        BkpSetFactoryDefaultsForLight ( PIN_BUTTON_5 );
  30:	f44f 6080 	mov.w	r0, #1024	; 0x400
  34:	f7ff fffe 	bl	0 <BkpSetFactoryDefaultsToLights>
C:\cortex\dimmers\src/dimmers_bkp.c:274
        BkpSetFactoryDefaultsForLight ( PIN_BUTTON_6 );
  38:	f44f 6000 	mov.w	r0, #2048	; 0x800
  3c:	f7ff fffe 	bl	0 <BkpSetFactoryDefaultsToLights>
C:\cortex\dimmers\src/dimmers_bkp.c:277
        BkpSetFactoryDefaultsGeneral();
    }
}
  40:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
C:\cortex\dimmers\src/dimmers_bkp.c:275
        BkpSetFactoryDefaultsForLight ( PIN_BUTTON_2 );
        BkpSetFactoryDefaultsForLight ( PIN_BUTTON_3 );
        BkpSetFactoryDefaultsForLight ( PIN_BUTTON_4 );
        BkpSetFactoryDefaultsForLight ( PIN_BUTTON_5 );
        BkpSetFactoryDefaultsForLight ( PIN_BUTTON_6 );
        BkpSetFactoryDefaultsGeneral();
  44:	f7ff bffe 	b.w	0 <BkpSetFactoryDefaultsToLights>
  48:	bd10      	pop	{r4, pc}
  4a:	bf00      	nop
  4c:	00000000 	.word	0x00000000

Disassembly of section .text.BkpFullReadToMemory:

00000000 <BkpFullReadToMemory>:
BkpFullReadToMemory():
C:\cortex\dimmers\src/dimmers_bkp.c:279
    }
}

void    BkpFullReadToMemory (void){
   0:	4d0eb538 	.word	0x4d0eb538
C:\cortex\dimmers\src/dimmers_bkp.c:285

    u8  byteidx=0;
    u16 index;
    u16 value;

    for (index = BKP_DR1 ; index <= BKP_DR10 ; index +=4 ){
   4:	2404      	movs	r4, #4
C:\cortex\dimmers\src/dimmers_bkp.c:286
        value = BKP_ReadBackupRegister(index);
   6:	4620      	mov	r0, r4
   8:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:285

    u8  byteidx=0;
    u16 index;
    u16 value;

    for (index = BKP_DR1 ; index <= BKP_DR10 ; index +=4 ){
   c:	3404      	adds	r4, #4
   e:	b2a4      	uxth	r4, r4
C:\cortex\dimmers\src/dimmers_bkp.c:291
        value = BKP_ReadBackupRegister(index);
    #ifdef BIG_ENDIAN
        InternData.values[byteidx++] = (value & 0xFF00) >> 8; 
        InternData.values[byteidx++] =  value & 0x00FF;
    #else
        InternData.values[byteidx++] =  value & 0x00FF; 
  10:	f805 0c01 	strb.w	r0, [r5, #-1]
C:\cortex\dimmers\src/dimmers_bkp.c:292
        InternData.values[byteidx++] = (value & 0xFF00) >> 8; 
  14:	0a00      	lsrs	r0, r0, #8
C:\cortex\dimmers\src/dimmers_bkp.c:285

    u8  byteidx=0;
    u16 index;
    u16 value;

    for (index = BKP_DR1 ; index <= BKP_DR10 ; index +=4 ){
  16:	2c2c      	cmp	r4, #44	; 0x2c
C:\cortex\dimmers\src/dimmers_bkp.c:292
    #ifdef BIG_ENDIAN
        InternData.values[byteidx++] = (value & 0xFF00) >> 8; 
        InternData.values[byteidx++] =  value & 0x00FF;
    #else
        InternData.values[byteidx++] =  value & 0x00FF; 
        InternData.values[byteidx++] = (value & 0xFF00) >> 8; 
  18:	f805 0b02 	strb.w	r0, [r5], #2
C:\cortex\dimmers\src/dimmers_bkp.c:285

    u8  byteidx=0;
    u16 index;
    u16 value;

    for (index = BKP_DR1 ; index <= BKP_DR10 ; index +=4 ){
  1c:	d1f3      	bne.n	6 <BkpFullReadToMemory+0x6>
  1e:	4d08      	ldr	r5, [pc, #32]	; (40 <BkpFullReadToMemory+0x40>)
  20:	3414      	adds	r4, #20
C:\cortex\dimmers\src/dimmers_bkp.c:297
        InternData.values[byteidx++] = (value & 0xFF00) >> 8; 
    #endif    
    }

    for (index = BKP_DR11 ; index <= BKP_DR42 ; index +=4 ){
        value = BKP_ReadBackupRegister(index);
  22:	4620      	mov	r0, r4
  24:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:296
        InternData.values[byteidx++] =  value & 0x00FF; 
        InternData.values[byteidx++] = (value & 0xFF00) >> 8; 
    #endif    
    }

    for (index = BKP_DR11 ; index <= BKP_DR42 ; index +=4 ){
  28:	3404      	adds	r4, #4
C:\cortex\dimmers\src/dimmers_bkp.c:302
        value = BKP_ReadBackupRegister(index);
    #ifdef BIG_ENDIAN
        InternData.values[byteidx++] = (value & 0xFF00) >> 8; 
        InternData.values[byteidx++] =  value & 0x00FF; 
    #else
        InternData.values[byteidx++] =  value & 0x00FF; 
  2a:	7528      	strb	r0, [r5, #20]
C:\cortex\dimmers\src/dimmers_bkp.c:296
        InternData.values[byteidx++] =  value & 0x00FF; 
        InternData.values[byteidx++] = (value & 0xFF00) >> 8; 
    #endif    
    }

    for (index = BKP_DR11 ; index <= BKP_DR42 ; index +=4 ){
  2c:	b2a4      	uxth	r4, r4
C:\cortex\dimmers\src/dimmers_bkp.c:303
    #ifdef BIG_ENDIAN
        InternData.values[byteidx++] = (value & 0xFF00) >> 8; 
        InternData.values[byteidx++] =  value & 0x00FF; 
    #else
        InternData.values[byteidx++] =  value & 0x00FF; 
        InternData.values[byteidx++] = (value & 0xFF00) >> 8; 
  2e:	0a00      	lsrs	r0, r0, #8
  30:	7568      	strb	r0, [r5, #21]
C:\cortex\dimmers\src/dimmers_bkp.c:296
        InternData.values[byteidx++] =  value & 0x00FF; 
        InternData.values[byteidx++] = (value & 0xFF00) >> 8; 
    #endif    
    }

    for (index = BKP_DR11 ; index <= BKP_DR42 ; index +=4 ){
  32:	3502      	adds	r5, #2
  34:	2cc0      	cmp	r4, #192	; 0xc0
  36:	d1f4      	bne.n	22 <BkpFullReadToMemory+0x22>
C:\cortex\dimmers\src/dimmers_bkp.c:307
        InternData.values[byteidx++] =  value & 0x00FF; 
        InternData.values[byteidx++] = (value & 0xFF00) >> 8; 
    #endif  
    }

}
  38:	bd38      	pop	{r3, r4, r5, pc}
  3a:	bf00      	nop
  3c:	00000001 	.word	0x00000001
  40:	00000000 	.word	0x00000000

Disassembly of section .text.BkpCopyIntExtMemory:

00000000 <BkpCopyIntExtMemory>:
BkpCopyIntExtMemory():
C:\cortex\dimmers\src/dimmers_bkp.c:308
void    BkpCopyIntExtMemory ( void){
   0:	4903b508 	.word	0x4903b508
C:\cortex\dimmers\src/dimmers_bkp.c:309
    memcpy( &ExternData.values[0] , &InternData.values[0] , sizeof(TBKPData));
   4:	2254      	movs	r2, #84	; 0x54
   6:	4803      	ldr	r0, [pc, #12]	; (14 <BkpCopyIntExtMemory+0x14>)
   8:	f7ff fffe 	bl	0 <memcpy>
C:\cortex\dimmers\src/dimmers_bkp.c:310
}
   c:	bd08      	pop	{r3, pc}
   e:	bf00      	nop
	...

Disassembly of section .text.UtilSwab:

00000000 <UtilSwab>:
UtilSwab():
C:\cortex\dimmers\src/dimmers_bkp.c:319
    swab( (u8*) ui, (u8*) &swapped , 2 );
#else
    swapped = *ui;
#endif
    return swapped;
}
   0:	8800      	ldrh	r0, [r0, #0]
   2:	4770      	bx	lr

Disassembly of section .text.BkpFullWriteToBkp:

00000000 <BkpFullWriteToBkp>:
BkpFullWriteToBkp():
C:\cortex\dimmers\src/dimmers_bkp.c:320
void    BkpFullWriteToBkp ( void ){
   0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
C:\cortex\dimmers\src/dimmers_bkp.c:327
    u8  byteidx=0;
    u16 index;
    u16 value;
    static bool ok;

    memcpy( (u8 *) &BkpMemoryMap , (u8 * )&ExternData , sizeof (BkpMemoryMap));
   4:	4845      	ldr	r0, [pc, #276]	; (11c <BkpFullWriteToBkp+0x11c>)
   6:	4946      	ldr	r1, [pc, #280]	; (120 <BkpFullWriteToBkp+0x120>)
   8:	2254      	movs	r2, #84	; 0x54
   a:	f7ff fffe 	bl	0 <memcpy>
   e:	2400      	movs	r4, #0
C:\cortex\dimmers\src/dimmers_bkp.c:331

    for ( index = 0 ; index < MAX_LIGHTS ; index ++ ){
        if (    
            (CHECK_LIGHT_VALUE(UtilSwab(&BkpMemoryMap.light[index].value)))     &&
  10:	4f42      	ldr	r7, [pc, #264]	; (11c <BkpFullWriteToBkp+0x11c>)
  12:	f04f 080c 	mov.w	r8, #12
  16:	fb08 7004 	mla	r0, r8, r4, r7
  1a:	f7ff fffe 	bl	0 <BkpFullWriteToBkp>
C:\cortex\dimmers\src/dimmers_bkp.c:330
    static bool ok;

    memcpy( (u8 *) &BkpMemoryMap , (u8 * )&ExternData , sizeof (BkpMemoryMap));

    for ( index = 0 ; index < MAX_LIGHTS ; index ++ ){
        if (    
  1e:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
  22:	4d40      	ldr	r5, [pc, #256]	; (124 <BkpFullWriteToBkp+0x124>)
  24:	d907      	bls.n	36 <BkpFullWriteToBkp+0x36>
C:\cortex\dimmers\src/dimmers_bkp.c:331
            (CHECK_LIGHT_VALUE(UtilSwab(&BkpMemoryMap.light[index].value)))     &&
  26:	f242 3327 	movw	r3, #8999	; 0x2327
  2a:	4298      	cmp	r0, r3
  2c:	d905      	bls.n	3a <BkpFullWriteToBkp+0x3a>
  2e:	f242 7310 	movw	r3, #10000	; 0x2710
  32:	4298      	cmp	r0, r3
  34:	d001      	beq.n	3a <BkpFullWriteToBkp+0x3a>
  36:	2800      	cmp	r0, #0
  38:	d14a      	bne.n	d0 <BkpFullWriteToBkp+0xd0>
C:\cortex\dimmers\src/dimmers_bkp.c:332
            (CHECK_MIN_MAX_VALUE ( UtilSwab(&BkpMemoryMap.light[index].min)))   &&   
  3a:	fb08 f804 	mul.w	r8, r8, r4
  3e:	eb07 0608 	add.w	r6, r7, r8
  42:	1cb0      	adds	r0, r6, #2
  44:	f7ff fffe 	bl	0 <BkpFullWriteToBkp>
C:\cortex\dimmers\src/dimmers_bkp.c:331

    memcpy( (u8 *) &BkpMemoryMap , (u8 * )&ExternData , sizeof (BkpMemoryMap));

    for ( index = 0 ; index < MAX_LIGHTS ; index ++ ){
        if (    
            (CHECK_LIGHT_VALUE(UtilSwab(&BkpMemoryMap.light[index].value)))     &&
  48:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
  4c:	d940      	bls.n	d0 <BkpFullWriteToBkp+0xd0>
C:\cortex\dimmers\src/dimmers_bkp.c:332
            (CHECK_MIN_MAX_VALUE ( UtilSwab(&BkpMemoryMap.light[index].min)))   &&   
  4e:	f242 3927 	movw	r9, #8999	; 0x2327
  52:	4548      	cmp	r0, r9
  54:	d83c      	bhi.n	d0 <BkpFullWriteToBkp+0xd0>
C:\cortex\dimmers\src/dimmers_bkp.c:333
            (CHECK_MIN_MAX_VALUE ( UtilSwab(&BkpMemoryMap.light[index].max )))  &&   
  56:	1d30      	adds	r0, r6, #4
  58:	f7ff fffe 	bl	0 <BkpFullWriteToBkp>
C:\cortex\dimmers\src/dimmers_bkp.c:332
    memcpy( (u8 *) &BkpMemoryMap , (u8 * )&ExternData , sizeof (BkpMemoryMap));

    for ( index = 0 ; index < MAX_LIGHTS ; index ++ ){
        if (    
            (CHECK_LIGHT_VALUE(UtilSwab(&BkpMemoryMap.light[index].value)))     &&
            (CHECK_MIN_MAX_VALUE ( UtilSwab(&BkpMemoryMap.light[index].min)))   &&   
  5c:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
  60:	d936      	bls.n	d0 <BkpFullWriteToBkp+0xd0>
C:\cortex\dimmers\src/dimmers_bkp.c:333
            (CHECK_MIN_MAX_VALUE ( UtilSwab(&BkpMemoryMap.light[index].max )))  &&   
  62:	4548      	cmp	r0, r9
  64:	d834      	bhi.n	d0 <BkpFullWriteToBkp+0xd0>
C:\cortex\dimmers\src/dimmers_bkp.c:334
            (CHECK_STEP_VALUE ( UtilSwab(&BkpMemoryMap.light[index].step )))    &&   
  66:	1db0      	adds	r0, r6, #6
  68:	f7ff fffe 	bl	0 <BkpFullWriteToBkp>
C:\cortex\dimmers\src/dimmers_bkp.c:333

    for ( index = 0 ; index < MAX_LIGHTS ; index ++ ){
        if (    
            (CHECK_LIGHT_VALUE(UtilSwab(&BkpMemoryMap.light[index].value)))     &&
            (CHECK_MIN_MAX_VALUE ( UtilSwab(&BkpMemoryMap.light[index].min)))   &&   
            (CHECK_MIN_MAX_VALUE ( UtilSwab(&BkpMemoryMap.light[index].max )))  &&   
  6c:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
  70:	d22e      	bcs.n	d0 <BkpFullWriteToBkp+0xd0>
C:\cortex\dimmers\src/dimmers_bkp.c:335
            (CHECK_STEP_VALUE ( UtilSwab(&BkpMemoryMap.light[index].step )))    &&   
            (CHECK_INPUT_PIN ( UtilSwab(&BkpMemoryMap.light[index].inputpin ))) &&  
  72:	4b2a      	ldr	r3, [pc, #168]	; (11c <BkpFullWriteToBkp+0x11c>)
  74:	4498      	add	r8, r3
  76:	f108 000a 	add.w	r0, r8, #10
  7a:	f7ff fffe 	bl	0 <BkpFullWriteToBkp>
C:\cortex\dimmers\src/dimmers_bkp.c:334
    for ( index = 0 ; index < MAX_LIGHTS ; index ++ ){
        if (    
            (CHECK_LIGHT_VALUE(UtilSwab(&BkpMemoryMap.light[index].value)))     &&
            (CHECK_MIN_MAX_VALUE ( UtilSwab(&BkpMemoryMap.light[index].min)))   &&   
            (CHECK_MIN_MAX_VALUE ( UtilSwab(&BkpMemoryMap.light[index].max )))  &&   
            (CHECK_STEP_VALUE ( UtilSwab(&BkpMemoryMap.light[index].step )))    &&   
  7e:	2840      	cmp	r0, #64	; 0x40
  80:	d00d      	beq.n	9e <BkpFullWriteToBkp+0x9e>
C:\cortex\dimmers\src/dimmers_bkp.c:335
            (CHECK_INPUT_PIN ( UtilSwab(&BkpMemoryMap.light[index].inputpin ))) &&  
  82:	2880      	cmp	r0, #128	; 0x80
  84:	d00b      	beq.n	9e <BkpFullWriteToBkp+0x9e>
  86:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
  8a:	d008      	beq.n	9e <BkpFullWriteToBkp+0x9e>
  8c:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
  90:	d005      	beq.n	9e <BkpFullWriteToBkp+0x9e>
  92:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
  96:	d002      	beq.n	9e <BkpFullWriteToBkp+0x9e>
  98:	f5b0 6f00 	cmp.w	r0, #2048	; 0x800
  9c:	d118      	bne.n	d0 <BkpFullWriteToBkp+0xd0>
C:\cortex\dimmers\src/dimmers_bkp.c:336
            (CHECK_OUTPUT_PIN ( UtilSwab(&BkpMemoryMap.light[index].outputpin ))) 
  9e:	230c      	movs	r3, #12
  a0:	fb03 7704 	mla	r7, r3, r4, r7
  a4:	f107 0008 	add.w	r0, r7, #8
  a8:	f7ff fffe 	bl	0 <BkpFullWriteToBkp>
C:\cortex\dimmers\src/dimmers_bkp.c:335
        if (    
            (CHECK_LIGHT_VALUE(UtilSwab(&BkpMemoryMap.light[index].value)))     &&
            (CHECK_MIN_MAX_VALUE ( UtilSwab(&BkpMemoryMap.light[index].min)))   &&   
            (CHECK_MIN_MAX_VALUE ( UtilSwab(&BkpMemoryMap.light[index].max )))  &&   
            (CHECK_STEP_VALUE ( UtilSwab(&BkpMemoryMap.light[index].step )))    &&   
            (CHECK_INPUT_PIN ( UtilSwab(&BkpMemoryMap.light[index].inputpin ))) &&  
  ac:	2801      	cmp	r0, #1
  ae:	d009      	beq.n	c4 <BkpFullWriteToBkp+0xc4>
C:\cortex\dimmers\src/dimmers_bkp.c:336
            (CHECK_OUTPUT_PIN ( UtilSwab(&BkpMemoryMap.light[index].outputpin ))) 
  b0:	2802      	cmp	r0, #2
  b2:	d007      	beq.n	c4 <BkpFullWriteToBkp+0xc4>
  b4:	2804      	cmp	r0, #4
  b6:	d005      	beq.n	c4 <BkpFullWriteToBkp+0xc4>
  b8:	2808      	cmp	r0, #8
  ba:	d003      	beq.n	c4 <BkpFullWriteToBkp+0xc4>
  bc:	2810      	cmp	r0, #16
  be:	d001      	beq.n	c4 <BkpFullWriteToBkp+0xc4>
  c0:	2820      	cmp	r0, #32
  c2:	d105      	bne.n	d0 <BkpFullWriteToBkp+0xd0>
C:\cortex\dimmers\src/dimmers_bkp.c:338
            ){ 
            ok = TRUE;
  c4:	2301      	movs	r3, #1
  c6:	18e4      	adds	r4, r4, r3
C:\cortex\dimmers\src/dimmers_bkp.c:329
    u16 value;
    static bool ok;

    memcpy( (u8 *) &BkpMemoryMap , (u8 * )&ExternData , sizeof (BkpMemoryMap));

    for ( index = 0 ; index < MAX_LIGHTS ; index ++ ){
  c8:	2c06      	cmp	r4, #6
C:\cortex\dimmers\src/dimmers_bkp.c:338
            (CHECK_MIN_MAX_VALUE ( UtilSwab(&BkpMemoryMap.light[index].max )))  &&   
            (CHECK_STEP_VALUE ( UtilSwab(&BkpMemoryMap.light[index].step )))    &&   
            (CHECK_INPUT_PIN ( UtilSwab(&BkpMemoryMap.light[index].inputpin ))) &&  
            (CHECK_OUTPUT_PIN ( UtilSwab(&BkpMemoryMap.light[index].outputpin ))) 
            ){ 
            ok = TRUE;
  ca:	702b      	strb	r3, [r5, #0]
C:\cortex\dimmers\src/dimmers_bkp.c:329
    u16 value;
    static bool ok;

    memcpy( (u8 *) &BkpMemoryMap , (u8 * )&ExternData , sizeof (BkpMemoryMap));

    for ( index = 0 ; index < MAX_LIGHTS ; index ++ ){
  cc:	d1a0      	bne.n	10 <BkpFullWriteToBkp+0x10>
  ce:	e001      	b.n	d4 <BkpFullWriteToBkp+0xd4>
C:\cortex\dimmers\src/dimmers_bkp.c:341
            (CHECK_OUTPUT_PIN ( UtilSwab(&BkpMemoryMap.light[index].outputpin ))) 
            ){ 
            ok = TRUE;
        }
        else{
            ok = FALSE;
  d0:	2300      	movs	r3, #0
  d2:	702b      	strb	r3, [r5, #0]
C:\cortex\dimmers\src/dimmers_bkp.c:346
            break;
        }        
    }

    if ( ok == TRUE ){
  d4:	782b      	ldrb	r3, [r5, #0]
  d6:	2b01      	cmp	r3, #1
  d8:	d11e      	bne.n	118 <BkpFullWriteToBkp+0x118>
  da:	4d13      	ldr	r5, [pc, #76]	; (128 <BkpFullWriteToBkp+0x128>)
  dc:	2404      	movs	r4, #4
C:\cortex\dimmers\src/dimmers_bkp.c:352
        for (index = BKP_DR1 ; index <= BKP_DR10 ; index +=4 ){
        #ifdef BIG_ENDIAN
            value  = ExternData.values[byteidx++] << 8; 
            value += ExternData.values[byteidx++];       
        #else
            value  = ExternData.values[byteidx++]; 
  de:	f815 3c01 	ldrb.w	r3, [r5, #-1]
C:\cortex\dimmers\src/dimmers_bkp.c:353
            value += ExternData.values[byteidx++] << 8;       
  e2:	f815 1b02 	ldrb.w	r1, [r5], #2
C:\cortex\dimmers\src/dimmers_bkp.c:356
        #endif
        
            BKP_WriteBackupRegister( index , value );
  e6:	4620      	mov	r0, r4
C:\cortex\dimmers\src/dimmers_bkp.c:353
        #ifdef BIG_ENDIAN
            value  = ExternData.values[byteidx++] << 8; 
            value += ExternData.values[byteidx++];       
        #else
            value  = ExternData.values[byteidx++]; 
            value += ExternData.values[byteidx++] << 8;       
  e8:	0209      	lsls	r1, r1, #8
  ea:	1859      	adds	r1, r3, r1
C:\cortex\dimmers\src/dimmers_bkp.c:347
            break;
        }        
    }

    if ( ok == TRUE ){
        for (index = BKP_DR1 ; index <= BKP_DR10 ; index +=4 ){
  ec:	3404      	adds	r4, #4
C:\cortex\dimmers\src/dimmers_bkp.c:356
        #else
            value  = ExternData.values[byteidx++]; 
            value += ExternData.values[byteidx++] << 8;       
        #endif
        
            BKP_WriteBackupRegister( index , value );
  ee:	b289      	uxth	r1, r1
C:\cortex\dimmers\src/dimmers_bkp.c:347
            break;
        }        
    }

    if ( ok == TRUE ){
        for (index = BKP_DR1 ; index <= BKP_DR10 ; index +=4 ){
  f0:	b2a4      	uxth	r4, r4
C:\cortex\dimmers\src/dimmers_bkp.c:356
        #else
            value  = ExternData.values[byteidx++]; 
            value += ExternData.values[byteidx++] << 8;       
        #endif
        
            BKP_WriteBackupRegister( index , value );
  f2:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:347
            break;
        }        
    }

    if ( ok == TRUE ){
        for (index = BKP_DR1 ; index <= BKP_DR10 ; index +=4 ){
  f6:	2c2c      	cmp	r4, #44	; 0x2c
  f8:	d1f1      	bne.n	de <BkpFullWriteToBkp+0xde>
  fa:	4d09      	ldr	r5, [pc, #36]	; (120 <BkpFullWriteToBkp+0x120>)
  fc:	3414      	adds	r4, #20
C:\cortex\dimmers\src/dimmers_bkp.c:365
        #ifdef BIG_ENDIAN
            value  = ExternData.values[byteidx++] << 8; 
            value += ExternData.values[byteidx++];       
        #else
            value  = ExternData.values[byteidx++]; 
            value += ExternData.values[byteidx++] << 8;       
  fe:	7d69      	ldrb	r1, [r5, #21]
C:\cortex\dimmers\src/dimmers_bkp.c:364
        for (index = BKP_DR11 ; index <= BKP_DR42 ; index +=4 ){
        #ifdef BIG_ENDIAN
            value  = ExternData.values[byteidx++] << 8; 
            value += ExternData.values[byteidx++];       
        #else
            value  = ExternData.values[byteidx++]; 
 100:	7d2b      	ldrb	r3, [r5, #20]
C:\cortex\dimmers\src/dimmers_bkp.c:365
            value += ExternData.values[byteidx++] << 8;       
 102:	0209      	lsls	r1, r1, #8
 104:	1859      	adds	r1, r3, r1
C:\cortex\dimmers\src/dimmers_bkp.c:367
        #endif
            BKP_WriteBackupRegister( index , value );
 106:	4620      	mov	r0, r4
C:\cortex\dimmers\src/dimmers_bkp.c:359
        #endif
        
            BKP_WriteBackupRegister( index , value );
        }

        for (index = BKP_DR11 ; index <= BKP_DR42 ; index +=4 ){
 108:	3404      	adds	r4, #4
C:\cortex\dimmers\src/dimmers_bkp.c:367
            value += ExternData.values[byteidx++];       
        #else
            value  = ExternData.values[byteidx++]; 
            value += ExternData.values[byteidx++] << 8;       
        #endif
            BKP_WriteBackupRegister( index , value );
 10a:	b289      	uxth	r1, r1
C:\cortex\dimmers\src/dimmers_bkp.c:359
        #endif
        
            BKP_WriteBackupRegister( index , value );
        }

        for (index = BKP_DR11 ; index <= BKP_DR42 ; index +=4 ){
 10c:	b2a4      	uxth	r4, r4
C:\cortex\dimmers\src/dimmers_bkp.c:367
            value += ExternData.values[byteidx++];       
        #else
            value  = ExternData.values[byteidx++]; 
            value += ExternData.values[byteidx++] << 8;       
        #endif
            BKP_WriteBackupRegister( index , value );
 10e:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:359
        #endif
        
            BKP_WriteBackupRegister( index , value );
        }

        for (index = BKP_DR11 ; index <= BKP_DR42 ; index +=4 ){
 112:	3502      	adds	r5, #2
 114:	2cc0      	cmp	r4, #192	; 0xc0
 116:	d1f2      	bne.n	fe <BkpFullWriteToBkp+0xfe>
 118:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	...
 128:	00000001 	.word	0x00000001
