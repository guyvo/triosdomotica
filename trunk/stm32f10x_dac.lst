
D:\cortex\gateway\stm32f10x_dac.o:     file format elf32-littlearm
D:\cortex\gateway\stm32f10x_dac.o

Disassembly of section .text.DAC_StructInit:

00000000 <DAC_StructInit>:
DAC_StructInit():
   0:	f04f 0300 	mov.w	r3, #0	; 0x0
   4:	6003      	str	r3, [r0, #0]
   6:	6043      	str	r3, [r0, #4]
   8:	6083      	str	r3, [r0, #8]
   a:	60c3      	str	r3, [r0, #12]
   c:	4770      	bx	lr
   e:	46c0      	nop			(mov r8, r8)
Disassembly of section .text.DAC_GetDataOutputValue:

00000000 <DAC_GetDataOutputValue>:
DAC_GetDataOutputValue():
   0:	b510      	push	{r4, lr}
   2:	b082      	sub	sp, #8
   4:	f04f 0300 	mov.w	r3, #0	; 0x0
   8:	9301      	str	r3, [sp, #4]
   a:	4604      	mov	r4, r0
   c:	2810      	cmp	r0, #16
   e:	bf14      	ite	ne
  10:	2300      	movne	r3, #0
  12:	2301      	moveq	r3, #1
  14:	2800      	cmp	r0, #0
  16:	bf14      	ite	ne
  18:	4618      	movne	r0, r3
  1a:	f043 0001 	orreq.w	r0, r3, #1	; 0x1
  1e:	f7ff fffe 	bl	0 <assert_param>
  22:	f247 4300 	movw	r3, #29696	; 0x7400
  26:	f2c4 0300 	movt	r3, #16384	; 0x4000
  2a:	9301      	str	r3, [sp, #4]
  2c:	9b01      	ldr	r3, [sp, #4]
  2e:	f103 032c 	add.w	r3, r3, #44	; 0x2c
  32:	eb03 0394 	add.w	r3, r3, r4, lsr #2
  36:	9301      	str	r3, [sp, #4]
  38:	9b01      	ldr	r3, [sp, #4]
  3a:	6818      	ldr	r0, [r3, #0]
  3c:	b280      	uxth	r0, r0
  3e:	b002      	add	sp, #8
  40:	bd10      	pop	{r4, pc}
  42:	46c0      	nop			(mov r8, r8)
Disassembly of section .text.DAC_SetDualChannelData:

00000000 <DAC_SetDualChannelData>:
DAC_SetDualChannelData():
   0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   4:	460f      	mov	r7, r1
   6:	4616      	mov	r6, r2
   8:	4605      	mov	r5, r0
   a:	2804      	cmp	r0, #4
   c:	bf14      	ite	ne
   e:	2300      	movne	r3, #0
  10:	2301      	moveq	r3, #1
  12:	2800      	cmp	r0, #0
  14:	bf08      	it	eq
  16:	f043 0301 	orreq.w	r3, r3, #1	; 0x1
  1a:	b913      	cbnz	r3, 22 <DAC_SetDualChannelData+0x22>
  1c:	2808      	cmp	r0, #8
  1e:	d121      	bne.n	64 <DAC_SetDualChannelData+0x64>
  20:	e033      	b.n	8a <DAC_SetDualChannelData+0x8a>
  22:	f04f 0001 	mov.w	r0, #1	; 0x1
  26:	f7ff fffe 	bl	0 <assert_param>
  2a:	f64f 74f0 	movw	r4, #65520	; 0xfff0
  2e:	42a6      	cmp	r6, r4
  30:	bf8c      	ite	hi
  32:	2000      	movhi	r0, #0
  34:	2001      	movls	r0, #1
  36:	f7ff fffe 	bl	0 <assert_param>
  3a:	42a7      	cmp	r7, r4
  3c:	bf8c      	ite	hi
  3e:	2000      	movhi	r0, #0
  40:	2001      	movls	r0, #1
  42:	f7ff fffe 	bl	0 <assert_param>
  46:	2d08      	cmp	r5, #8
  48:	d102      	bne.n	50 <DAC_SetDualChannelData+0x50>
  4a:	ea46 2007 	orr.w	r0, r6, r7, lsl #8
  4e:	e001      	b.n	54 <DAC_SetDualChannelData+0x54>
  50:	ea46 4007 	orr.w	r0, r6, r7, lsl #16
  54:	f247 4320 	movw	r3, #29728	; 0x7420
  58:	f2c4 0300 	movt	r3, #16384	; 0x4000
  5c:	442b      	add	r3, r5
  5e:	6018      	str	r0, [r3, #0]
  60:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  64:	f04f 0000 	mov.w	r0, #0	; 0x0
  68:	f7ff fffe 	bl	0 <assert_param>
  6c:	f64f 74f0 	movw	r4, #65520	; 0xfff0
  70:	42a6      	cmp	r6, r4
  72:	bf8c      	ite	hi
  74:	2000      	movhi	r0, #0
  76:	2001      	movls	r0, #1
  78:	f7ff fffe 	bl	0 <assert_param>
  7c:	42a7      	cmp	r7, r4
  7e:	bf8c      	ite	hi
  80:	2000      	movhi	r0, #0
  82:	2001      	movls	r0, #1
  84:	f7ff fffe 	bl	0 <assert_param>
  88:	e7e2      	b.n	50 <DAC_SetDualChannelData+0x50>
  8a:	f04f 0001 	mov.w	r0, #1	; 0x1
  8e:	f7ff fffe 	bl	0 <assert_param>
  92:	f64f 74f0 	movw	r4, #65520	; 0xfff0
  96:	42a6      	cmp	r6, r4
  98:	bf8c      	ite	hi
  9a:	2000      	movhi	r0, #0
  9c:	2001      	movls	r0, #1
  9e:	f7ff fffe 	bl	0 <assert_param>
  a2:	42a7      	cmp	r7, r4
  a4:	bf8c      	ite	hi
  a6:	2000      	movhi	r0, #0
  a8:	2001      	movls	r0, #1
  aa:	f7ff fffe 	bl	0 <assert_param>
  ae:	e7cc      	b.n	4a <assert_param+0x4a>
Disassembly of section .text.DAC_SetChannel2Data:

00000000 <DAC_SetChannel2Data>:
DAC_SetChannel2Data():
   0:	b530      	push	{r4, r5, lr}
   2:	b083      	sub	sp, #12
   4:	460d      	mov	r5, r1
   6:	f04f 0300 	mov.w	r3, #0	; 0x0
   a:	9301      	str	r3, [sp, #4]
   c:	4604      	mov	r4, r0
   e:	2804      	cmp	r0, #4
  10:	bf14      	ite	ne
  12:	2300      	movne	r3, #0
  14:	2301      	moveq	r3, #1
  16:	2800      	cmp	r0, #0
  18:	bf08      	it	eq
  1a:	f043 0301 	orreq.w	r3, r3, #1	; 0x1
  1e:	b113      	cbz	r3, 26 <DAC_SetChannel2Data+0x26>
  20:	f04f 0001 	mov.w	r0, #1	; 0x1
  24:	e003      	b.n	2e <DAC_SetChannel2Data+0x2e>
  26:	2808      	cmp	r0, #8
  28:	bf14      	ite	ne
  2a:	2000      	movne	r0, #0
  2c:	2001      	moveq	r0, #1
  2e:	f7ff fffe 	bl	0 <assert_param>
  32:	f64f 70f0 	movw	r0, #65520	; 0xfff0
  36:	4285      	cmp	r5, r0
  38:	bf8c      	ite	hi
  3a:	2000      	movhi	r0, #0
  3c:	2001      	movls	r0, #1
  3e:	f7ff fffe 	bl	0 <assert_param>
  42:	f247 4300 	movw	r3, #29696	; 0x7400
  46:	f2c4 0300 	movt	r3, #16384	; 0x4000
  4a:	9301      	str	r3, [sp, #4]
  4c:	9b01      	ldr	r3, [sp, #4]
  4e:	f103 0314 	add.w	r3, r3, #20	; 0x14
  52:	4423      	add	r3, r4
  54:	9301      	str	r3, [sp, #4]
  56:	9b01      	ldr	r3, [sp, #4]
  58:	601d      	str	r5, [r3, #0]
  5a:	b003      	add	sp, #12
  5c:	bd30      	pop	{r4, r5, pc}
  5e:	46c0      	nop			(mov r8, r8)
Disassembly of section .text.DAC_SetChannel1Data:

00000000 <DAC_SetChannel1Data>:
DAC_SetChannel1Data():
   0:	b530      	push	{r4, r5, lr}
   2:	b083      	sub	sp, #12
   4:	460d      	mov	r5, r1
   6:	f04f 0300 	mov.w	r3, #0	; 0x0
   a:	9301      	str	r3, [sp, #4]
   c:	4604      	mov	r4, r0
   e:	2804      	cmp	r0, #4
  10:	bf14      	ite	ne
  12:	2300      	movne	r3, #0
  14:	2301      	moveq	r3, #1
  16:	2800      	cmp	r0, #0
  18:	bf08      	it	eq
  1a:	f043 0301 	orreq.w	r3, r3, #1	; 0x1
  1e:	b113      	cbz	r3, 26 <DAC_SetChannel1Data+0x26>
  20:	f04f 0001 	mov.w	r0, #1	; 0x1
  24:	e003      	b.n	2e <DAC_SetChannel1Data+0x2e>
  26:	2808      	cmp	r0, #8
  28:	bf14      	ite	ne
  2a:	2000      	movne	r0, #0
  2c:	2001      	moveq	r0, #1
  2e:	f7ff fffe 	bl	0 <assert_param>
  32:	f64f 70f0 	movw	r0, #65520	; 0xfff0
  36:	4285      	cmp	r5, r0
  38:	bf8c      	ite	hi
  3a:	2000      	movhi	r0, #0
  3c:	2001      	movls	r0, #1
  3e:	f7ff fffe 	bl	0 <assert_param>
  42:	f247 4300 	movw	r3, #29696	; 0x7400
  46:	f2c4 0300 	movt	r3, #16384	; 0x4000
  4a:	9301      	str	r3, [sp, #4]
  4c:	9b01      	ldr	r3, [sp, #4]
  4e:	f103 0308 	add.w	r3, r3, #8	; 0x8
  52:	4423      	add	r3, r4
  54:	9301      	str	r3, [sp, #4]
  56:	9b01      	ldr	r3, [sp, #4]
  58:	601d      	str	r5, [r3, #0]
  5a:	b003      	add	sp, #12
  5c:	bd30      	pop	{r4, r5, pc}
  5e:	46c0      	nop			(mov r8, r8)
Disassembly of section .text.DAC_WaveGenerationCmd:

00000000 <DAC_WaveGenerationCmd>:
DAC_WaveGenerationCmd():
   0:	b570      	push	{r4, r5, r6, lr}
   2:	460d      	mov	r5, r1
   4:	4614      	mov	r4, r2
   6:	4606      	mov	r6, r0
   8:	2810      	cmp	r0, #16
   a:	bf14      	ite	ne
   c:	2300      	movne	r3, #0
   e:	2301      	moveq	r3, #1
  10:	2800      	cmp	r0, #0
  12:	bf14      	ite	ne
  14:	4618      	movne	r0, r3
  16:	f043 0001 	orreq.w	r0, r3, #1	; 0x1
  1a:	f7ff fffe 	bl	0 <assert_param>
  1e:	2d80      	cmp	r5, #128
  20:	bf14      	ite	ne
  22:	2000      	movne	r0, #0
  24:	2001      	moveq	r0, #1
  26:	2d40      	cmp	r5, #64
  28:	bf08      	it	eq
  2a:	f040 0001 	orreq.w	r0, r0, #1	; 0x1
  2e:	f7ff fffe 	bl	0 <assert_param>
  32:	2c01      	cmp	r4, #1
  34:	bf8c      	ite	hi
  36:	2000      	movhi	r0, #0
  38:	2001      	movls	r0, #1
  3a:	f7ff fffe 	bl	0 <assert_param>
  3e:	b154      	cbz	r4, 56 <assert_param+0x56>
  40:	f247 4300 	movw	r3, #29696	; 0x7400
  44:	f2c4 0300 	movt	r3, #16384	; 0x4000
  48:	6819      	ldr	r1, [r3, #0]
  4a:	fa05 f206 	lsl.w	r2, r5, r6
  4e:	ea42 0201 	orr.w	r2, r2, r1
  52:	601a      	str	r2, [r3, #0]
  54:	e00b      	b.n	6e <assert_param+0x6e>
  56:	f247 4300 	movw	r3, #29696	; 0x7400
  5a:	f2c4 0300 	movt	r3, #16384	; 0x4000
  5e:	6819      	ldr	r1, [r3, #0]
  60:	fa05 f206 	lsl.w	r2, r5, r6
  64:	ea6f 0202 	mvn.w	r2, r2
  68:	ea02 0201 	and.w	r2, r2, r1
  6c:	601a      	str	r2, [r3, #0]
  6e:	bd70      	pop	{r4, r5, r6, pc}
Disassembly of section .text.DAC_DualSoftwareTriggerCmd:

00000000 <DAC_DualSoftwareTriggerCmd>:
DAC_DualSoftwareTriggerCmd():
   0:	b510      	push	{r4, lr}
   2:	4604      	mov	r4, r0
   4:	2801      	cmp	r0, #1
   6:	bf8c      	ite	hi
   8:	2000      	movhi	r0, #0
   a:	2001      	movls	r0, #1
   c:	f7ff fffe 	bl	0 <assert_param>
  10:	b144      	cbz	r4, 24 <assert_param+0x24>
  12:	f247 4200 	movw	r2, #29696	; 0x7400
  16:	f2c4 0200 	movt	r2, #16384	; 0x4000
  1a:	6853      	ldr	r3, [r2, #4]
  1c:	f043 0303 	orr.w	r3, r3, #3	; 0x3
  20:	6053      	str	r3, [r2, #4]
  22:	e007      	b.n	34 <assert_param+0x34>
  24:	f247 4200 	movw	r2, #29696	; 0x7400
  28:	f2c4 0200 	movt	r2, #16384	; 0x4000
  2c:	6853      	ldr	r3, [r2, #4]
  2e:	f023 0303 	bic.w	r3, r3, #3	; 0x3
  32:	6053      	str	r3, [r2, #4]
  34:	bd10      	pop	{r4, pc}
  36:	46c0      	nop			(mov r8, r8)
Disassembly of section .text.DAC_SoftwareTriggerCmd:

00000000 <DAC_SoftwareTriggerCmd>:
DAC_SoftwareTriggerCmd():
   0:	b570      	push	{r4, r5, r6, lr}
   2:	460c      	mov	r4, r1
   4:	4605      	mov	r5, r0
   6:	2810      	cmp	r0, #16
   8:	bf14      	ite	ne
   a:	2300      	movne	r3, #0
   c:	2301      	moveq	r3, #1
   e:	2800      	cmp	r0, #0
  10:	bf14      	ite	ne
  12:	4618      	movne	r0, r3
  14:	f043 0001 	orreq.w	r0, r3, #1	; 0x1
  18:	f7ff fffe 	bl	0 <assert_param>
  1c:	2c01      	cmp	r4, #1
  1e:	bf8c      	ite	hi
  20:	2000      	movhi	r0, #0
  22:	2001      	movls	r0, #1
  24:	f7ff fffe 	bl	0 <assert_param>
  28:	b174      	cbz	r4, 48 <assert_param+0x48>
  2a:	f247 4200 	movw	r2, #29696	; 0x7400
  2e:	f2c4 0200 	movt	r2, #16384	; 0x4000
  32:	6850      	ldr	r0, [r2, #4]
  34:	ea4f 1115 	mov.w	r1, r5, lsr #4
  38:	f04f 0301 	mov.w	r3, #1	; 0x1
  3c:	fa03 f301 	lsl.w	r3, r3, r1
  40:	ea43 0300 	orr.w	r3, r3, r0
  44:	6053      	str	r3, [r2, #4]
  46:	e00f      	b.n	68 <assert_param+0x68>
  48:	f247 4200 	movw	r2, #29696	; 0x7400
  4c:	f2c4 0200 	movt	r2, #16384	; 0x4000
  50:	6850      	ldr	r0, [r2, #4]
  52:	ea4f 1115 	mov.w	r1, r5, lsr #4
  56:	f04f 0301 	mov.w	r3, #1	; 0x1
  5a:	fa03 f301 	lsl.w	r3, r3, r1
  5e:	ea6f 0303 	mvn.w	r3, r3
  62:	ea03 0300 	and.w	r3, r3, r0
  66:	6053      	str	r3, [r2, #4]
  68:	bd70      	pop	{r4, r5, r6, pc}
  6a:	46c0      	nop			(mov r8, r8)
Disassembly of section .text.DAC_DMACmd:

00000000 <DAC_DMACmd>:
DAC_DMACmd():
   0:	b570      	push	{r4, r5, r6, lr}
   2:	460c      	mov	r4, r1
   4:	4605      	mov	r5, r0
   6:	2810      	cmp	r0, #16
   8:	bf14      	ite	ne
   a:	2300      	movne	r3, #0
   c:	2301      	moveq	r3, #1
   e:	2800      	cmp	r0, #0
  10:	bf14      	ite	ne
  12:	4618      	movne	r0, r3
  14:	f043 0001 	orreq.w	r0, r3, #1	; 0x1
  18:	f7ff fffe 	bl	0 <assert_param>
  1c:	2c01      	cmp	r4, #1
  1e:	bf8c      	ite	hi
  20:	2000      	movhi	r0, #0
  22:	2001      	movls	r0, #1
  24:	f7ff fffe 	bl	0 <assert_param>
  28:	b164      	cbz	r4, 44 <assert_param+0x44>
  2a:	f247 4300 	movw	r3, #29696	; 0x7400
  2e:	f2c4 0300 	movt	r3, #16384	; 0x4000
  32:	6819      	ldr	r1, [r3, #0]
  34:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  38:	fa02 f205 	lsl.w	r2, r2, r5
  3c:	ea42 0201 	orr.w	r2, r2, r1
  40:	601a      	str	r2, [r3, #0]
  42:	e00d      	b.n	60 <assert_param+0x60>
  44:	f247 4300 	movw	r3, #29696	; 0x7400
  48:	f2c4 0300 	movt	r3, #16384	; 0x4000
  4c:	6819      	ldr	r1, [r3, #0]
  4e:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  52:	fa02 f205 	lsl.w	r2, r2, r5
  56:	ea6f 0202 	mvn.w	r2, r2
  5a:	ea02 0201 	and.w	r2, r2, r1
  5e:	601a      	str	r2, [r3, #0]
  60:	bd70      	pop	{r4, r5, r6, pc}
  62:	46c0      	nop			(mov r8, r8)
Disassembly of section .text.DAC_Cmd:

00000000 <DAC_Cmd>:
DAC_Cmd():
   0:	b570      	push	{r4, r5, r6, lr}
   2:	460c      	mov	r4, r1
   4:	4605      	mov	r5, r0
   6:	2810      	cmp	r0, #16
   8:	bf14      	ite	ne
   a:	2300      	movne	r3, #0
   c:	2301      	moveq	r3, #1
   e:	2800      	cmp	r0, #0
  10:	bf14      	ite	ne
  12:	4618      	movne	r0, r3
  14:	f043 0001 	orreq.w	r0, r3, #1	; 0x1
  18:	f7ff fffe 	bl	0 <assert_param>
  1c:	2c01      	cmp	r4, #1
  1e:	bf8c      	ite	hi
  20:	2000      	movhi	r0, #0
  22:	2001      	movls	r0, #1
  24:	f7ff fffe 	bl	0 <assert_param>
  28:	b164      	cbz	r4, 44 <assert_param+0x44>
  2a:	f247 4300 	movw	r3, #29696	; 0x7400
  2e:	f2c4 0300 	movt	r3, #16384	; 0x4000
  32:	6819      	ldr	r1, [r3, #0]
  34:	f04f 0201 	mov.w	r2, #1	; 0x1
  38:	fa02 f205 	lsl.w	r2, r2, r5
  3c:	ea42 0201 	orr.w	r2, r2, r1
  40:	601a      	str	r2, [r3, #0]
  42:	e00d      	b.n	60 <assert_param+0x60>
  44:	f247 4300 	movw	r3, #29696	; 0x7400
  48:	f2c4 0300 	movt	r3, #16384	; 0x4000
  4c:	6819      	ldr	r1, [r3, #0]
  4e:	f04f 0201 	mov.w	r2, #1	; 0x1
  52:	fa02 f205 	lsl.w	r2, r2, r5
  56:	ea6f 0202 	mvn.w	r2, r2
  5a:	ea02 0201 	and.w	r2, r2, r1
  5e:	601a      	str	r2, [r3, #0]
  60:	bd70      	pop	{r4, r5, r6, pc}
  62:	46c0      	nop			(mov r8, r8)
Disassembly of section .text.DAC_Init:

00000000 <DAC_Init>:
DAC_Init():
   0:	b570      	push	{r4, r5, r6, lr}
   2:	4605      	mov	r5, r0
   4:	460c      	mov	r4, r1
   6:	6808      	ldr	r0, [r1, #0]
   8:	2804      	cmp	r0, #4
   a:	bf14      	ite	ne
   c:	2300      	movne	r3, #0
   e:	2301      	moveq	r3, #1
  10:	2800      	cmp	r0, #0
  12:	bf08      	it	eq
  14:	f043 0301 	orreq.w	r3, r3, #1	; 0x1
  18:	b983      	cbnz	r3, 3c <DAC_Init+0x3c>
  1a:	280c      	cmp	r0, #12
  1c:	d00e      	beq.n	3c <DAC_Init+0x3c>
  1e:	2814      	cmp	r0, #20
  20:	d00c      	beq.n	3c <DAC_Init+0x3c>
  22:	281c      	cmp	r0, #28
  24:	d00a      	beq.n	3c <DAC_Init+0x3c>
  26:	2824      	cmp	r0, #36
  28:	d008      	beq.n	3c <DAC_Init+0x3c>
  2a:	282c      	cmp	r0, #44
  2c:	d006      	beq.n	3c <DAC_Init+0x3c>
  2e:	2834      	cmp	r0, #52
  30:	d004      	beq.n	3c <DAC_Init+0x3c>
  32:	283c      	cmp	r0, #60
  34:	bf14      	ite	ne
  36:	2000      	movne	r0, #0
  38:	2001      	moveq	r0, #1
  3a:	e001      	b.n	40 <DAC_Init+0x40>
  3c:	f04f 0001 	mov.w	r0, #1	; 0x1
  40:	f7ff fffe 	bl	0 <assert_param>
  44:	6860      	ldr	r0, [r4, #4]
  46:	2840      	cmp	r0, #64
  48:	bf14      	ite	ne
  4a:	2300      	movne	r3, #0
  4c:	2301      	moveq	r3, #1
  4e:	2800      	cmp	r0, #0
  50:	bf08      	it	eq
  52:	f043 0301 	orreq.w	r3, r3, #1	; 0x1
  56:	b113      	cbz	r3, 5e <DAC_Init+0x5e>
  58:	f04f 0001 	mov.w	r0, #1	; 0x1
  5c:	e003      	b.n	66 <DAC_Init+0x66>
  5e:	2880      	cmp	r0, #128
  60:	bf14      	ite	ne
  62:	2000      	movne	r0, #0
  64:	2001      	moveq	r0, #1
  66:	f7ff fffe 	bl	0 <assert_param>
  6a:	68a3      	ldr	r3, [r4, #8]
  6c:	f1d3 0201 	rsbs	r2, r3, #1	; 0x1
  70:	bf38      	it	cc
  72:	2200      	movcc	r2, #0
  74:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
  78:	bf14      	ite	ne
  7a:	2000      	movne	r0, #0
  7c:	2001      	moveq	r0, #1
  7e:	ea52 0100 	orrs.w	r1, r2, r0
  82:	d11e      	bne.n	c2 <DAC_Init+0xc2>
  84:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  88:	d01b      	beq.n	c2 <DAC_Init+0xc2>
  8a:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
  8e:	d018      	beq.n	c2 <DAC_Init+0xc2>
  90:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
  94:	d015      	beq.n	c2 <DAC_Init+0xc2>
  96:	f5b3 6fa0 	cmp.w	r3, #1280	; 0x500
  9a:	d012      	beq.n	c2 <DAC_Init+0xc2>
  9c:	f5b3 6fc0 	cmp.w	r3, #1536	; 0x600
  a0:	d00f      	beq.n	c2 <DAC_Init+0xc2>
  a2:	f5b3 6fe0 	cmp.w	r3, #1792	; 0x700
  a6:	d00c      	beq.n	c2 <DAC_Init+0xc2>
  a8:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
  ac:	d009      	beq.n	c2 <DAC_Init+0xc2>
  ae:	f5b3 6f10 	cmp.w	r3, #2304	; 0x900
  b2:	d006      	beq.n	c2 <DAC_Init+0xc2>
  b4:	f5b3 6f20 	cmp.w	r3, #2560	; 0xa00
  b8:	d003      	beq.n	c2 <DAC_Init+0xc2>
  ba:	f5b3 6f30 	cmp.w	r3, #2816	; 0xb00
  be:	d000      	beq.n	c2 <DAC_Init+0xc2>
  c0:	b10a      	cbz	r2, c6 <DAC_Init+0xc6>
  c2:	f04f 0001 	mov.w	r0, #1	; 0x1
  c6:	f7ff fffe 	bl	0 <assert_param>
  ca:	68e3      	ldr	r3, [r4, #12]
  cc:	2b02      	cmp	r3, #2
  ce:	bf14      	ite	ne
  d0:	2000      	movne	r0, #0
  d2:	2001      	moveq	r0, #1
  d4:	2b00      	cmp	r3, #0
  d6:	bf08      	it	eq
  d8:	f040 0001 	orreq.w	r0, r0, #1	; 0x1
  dc:	f7ff fffe 	bl	0 <assert_param>
  e0:	f247 4000 	movw	r0, #29696	; 0x7400
  e4:	f2c4 0000 	movt	r0, #16384	; 0x4000
  e8:	6803      	ldr	r3, [r0, #0]
  ea:	f640 72fe 	movw	r2, #4094	; 0xffe
  ee:	fa02 f205 	lsl.w	r2, r2, r5
  f2:	ea6f 0202 	mvn.w	r2, r2
  f6:	ea02 0203 	and.w	r2, r2, r3
  fa:	6863      	ldr	r3, [r4, #4]
  fc:	6821      	ldr	r1, [r4, #0]
  fe:	ea43 0301 	orr.w	r3, r3, r1
 102:	68a1      	ldr	r1, [r4, #8]
 104:	ea43 0301 	orr.w	r3, r3, r1
 108:	68e1      	ldr	r1, [r4, #12]
 10a:	ea43 0301 	orr.w	r3, r3, r1
 10e:	fa03 f305 	lsl.w	r3, r3, r5
 112:	ea42 0203 	orr.w	r2, r2, r3
 116:	6002      	str	r2, [r0, #0]
 118:	bd70      	pop	{r4, r5, r6, pc}
 11a:	46c0      	nop			(mov r8, r8)
Disassembly of section .text.DAC_DeInit:

00000000 <DAC_DeInit>:
DAC_DeInit():
   0:	b510      	push	{r4, lr}
   2:	f04f 5000 	mov.w	r0, #536870912	; 0x20000000
   6:	f04f 0101 	mov.w	r1, #1	; 0x1
   a:	f7ff fffe 	bl	0 <RCC_APB1PeriphResetCmd>
   e:	f04f 5000 	mov.w	r0, #536870912	; 0x20000000
  12:	f04f 0100 	mov.w	r1, #0	; 0x0
  16:	f7ff fffe 	bl	0 <RCC_APB1PeriphResetCmd>
  1a:	bd10      	pop	{r4, pc}
