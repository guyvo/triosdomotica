
C:\cortex\dimmers\hex\dimmers_bkp.o:     file format elf32-littlearm
C:\cortex\dimmers\hex\dimmers_bkp.o

Disassembly of section .text.BkpCopyIntExtMemory:

00000000 <BkpCopyIntExtMemory>:
BkpCopyIntExtMemory():
C:\cortex\dimmers\src/dimmers_bkp.c:304
        InternData.values[byteidx++] = (value & 0xFF00) >> 8; 
    #endif  
    }

}
void    BkpCopyIntExtMemory ( void){
   0:	b510      	push	{r4, lr}
C:\cortex\dimmers\src/dimmers_bkp.c:305
    memcpy( &ExternData.values[0] , &InternData.values[0] , sizeof(TBKPData));
   2:	4903      	ldr	r1, [pc, #12]	(10 <BkpCopyIntExtMemory+0x10>)
   4:	2254      	movs	r2, #84
   6:	4803      	ldr	r0, [pc, #12]	(14 <BkpCopyIntExtMemory+0x14>)
   8:	f7ff fffe 	bl	0 <memcpy>
C:\cortex\dimmers\src/dimmers_bkp.c:306
}
   c:	bd10      	pop	{r4, pc}
   e:	46c0      	nop			(mov r8, r8)
	...
Disassembly of section .text.UtilSwab:

00000000 <UtilSwab>:
UtilSwab():
C:\cortex\dimmers\src/dimmers_bkp.c:315
    swab( (u8*) ui, (u8*) &swapped , 2 );
#else
    swapped = *ui;
#endif
    return swapped;
}
   0:	8800      	ldrh	r0, [r0, #0]
   2:	4770      	bx	lr
Disassembly of section .text.BkpFullWriteToBkp:

00000000 <BkpFullWriteToBkp>:
BkpFullWriteToBkp():
C:\cortex\dimmers\src/dimmers_bkp.c:323
    u8  byteidx=0;
    u16 index;
    u16 value;
    static bool ok;

    memcpy( (u8 *) &BkpMemoryMap , (u8 * )&ExternData , sizeof (BkpMemoryMap));
   0:	493b      	ldr	r1, [pc, #236]	(f0 <BkpFullWriteToBkp+0xf0>)
C:\cortex\dimmers\src/dimmers_bkp.c:316
#else
    swapped = *ui;
#endif
    return swapped;
}
void    BkpFullWriteToBkp ( void ){
   2:	b570      	push	{r4, r5, r6, lr}
C:\cortex\dimmers\src/dimmers_bkp.c:323
    u8  byteidx=0;
    u16 index;
    u16 value;
    static bool ok;

    memcpy( (u8 *) &BkpMemoryMap , (u8 * )&ExternData , sizeof (BkpMemoryMap));
   4:	483b      	ldr	r0, [pc, #236]	(f4 <BkpFullWriteToBkp+0xf4>)
   6:	2254      	movs	r2, #84
   8:	f7ff fffe 	bl	0 <memcpy>
   c:	493a      	ldr	r1, [pc, #232]	(f8 <BkpFullWriteToBkp+0xf8>)
UtilSwab():
C:\cortex\dimmers\src/dimmers_bkp.c:312
u16 UtilSwab ( u16 * ui ){
    u16 swapped;
#ifdef BIG_ENDIAN
    swab( (u8*) ui, (u8*) &swapped , 2 );
#else
    swapped = *ui;
   e:	f831 2c08 	ldrh.w	r2, [r1, #-8]
BkpFullWriteToBkp():
C:\cortex\dimmers\src/dimmers_bkp.c:326
    static bool ok;

    memcpy( (u8 *) &BkpMemoryMap , (u8 * )&ExternData , sizeof (BkpMemoryMap));

    for ( index = 0 ; index < MAX_LIGHTS ; index ++ ){
        if (    
  12:	f5b2 7f7a 	cmp.w	r2, #1000	; 0x3e8
  16:	d907      	bls.n	28 <BkpFullWriteToBkp+0x28>
  18:	f242 3327 	movw	r3, #8999	; 0x2327
  1c:	429a      	cmp	r2, r3
  1e:	d905      	bls.n	2c <BkpFullWriteToBkp+0x2c>
  20:	f242 7310 	movw	r3, #10000	; 0x2710
  24:	429a      	cmp	r2, r3
  26:	d001      	beq.n	2c <BkpFullWriteToBkp+0x2c>
  28:	2a00      	cmp	r2, #0
  2a:	d13a      	bne.n	a2 <BkpFullWriteToBkp+0xa2>
UtilSwab():
C:\cortex\dimmers\src/dimmers_bkp.c:312
u16 UtilSwab ( u16 * ui ){
    u16 swapped;
#ifdef BIG_ENDIAN
    swab( (u8*) ui, (u8*) &swapped , 2 );
#else
    swapped = *ui;
  2c:	f831 3c06 	ldrh.w	r3, [r1, #-6]
BkpFullWriteToBkp():
C:\cortex\dimmers\src/dimmers_bkp.c:326
    static bool ok;

    memcpy( (u8 *) &BkpMemoryMap , (u8 * )&ExternData , sizeof (BkpMemoryMap));

    for ( index = 0 ; index < MAX_LIGHTS ; index ++ ){
        if (    
  30:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
  34:	d935      	bls.n	a2 <BkpFullWriteToBkp+0xa2>
  36:	f242 3227 	movw	r2, #8999	; 0x2327
  3a:	4293      	cmp	r3, r2
  3c:	d831      	bhi.n	a2 <BkpFullWriteToBkp+0xa2>
UtilSwab():
C:\cortex\dimmers\src/dimmers_bkp.c:312
u16 UtilSwab ( u16 * ui ){
    u16 swapped;
#ifdef BIG_ENDIAN
    swab( (u8*) ui, (u8*) &swapped , 2 );
#else
    swapped = *ui;
  3e:	f831 3c04 	ldrh.w	r3, [r1, #-4]
BkpFullWriteToBkp():
C:\cortex\dimmers\src/dimmers_bkp.c:326
    static bool ok;

    memcpy( (u8 *) &BkpMemoryMap , (u8 * )&ExternData , sizeof (BkpMemoryMap));

    for ( index = 0 ; index < MAX_LIGHTS ; index ++ ){
        if (    
  42:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
  46:	d92c      	bls.n	a2 <BkpFullWriteToBkp+0xa2>
  48:	4293      	cmp	r3, r2
  4a:	d82a      	bhi.n	a2 <BkpFullWriteToBkp+0xa2>
  4c:	f831 3c02 	ldrh.w	r3, [r1, #-2]
  50:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
  54:	d225      	bcs.n	a2 <BkpFullWriteToBkp+0xa2>
UtilSwab():
C:\cortex\dimmers\src/dimmers_bkp.c:312
u16 UtilSwab ( u16 * ui ){
    u16 swapped;
#ifdef BIG_ENDIAN
    swab( (u8*) ui, (u8*) &swapped , 2 );
#else
    swapped = *ui;
  56:	884b      	ldrh	r3, [r1, #2]
BkpFullWriteToBkp():
C:\cortex\dimmers\src/dimmers_bkp.c:326
    static bool ok;

    memcpy( (u8 *) &BkpMemoryMap , (u8 * )&ExternData , sizeof (BkpMemoryMap));

    for ( index = 0 ; index < MAX_LIGHTS ; index ++ ){
        if (    
  58:	2b40      	cmp	r3, #64
  5a:	d00d      	beq.n	78 <BkpFullWriteToBkp+0x78>
  5c:	2b80      	cmp	r3, #128
  5e:	d00b      	beq.n	78 <BkpFullWriteToBkp+0x78>
  60:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
  64:	d008      	beq.n	78 <BkpFullWriteToBkp+0x78>
  66:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  6a:	d005      	beq.n	78 <BkpFullWriteToBkp+0x78>
  6c:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
  70:	d002      	beq.n	78 <BkpFullWriteToBkp+0x78>
  72:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
  76:	d114      	bne.n	a2 <BkpFullWriteToBkp+0xa2>
UtilSwab():
C:\cortex\dimmers\src/dimmers_bkp.c:312
u16 UtilSwab ( u16 * ui ){
    u16 swapped;
#ifdef BIG_ENDIAN
    swab( (u8*) ui, (u8*) &swapped , 2 );
#else
    swapped = *ui;
  78:	880b      	ldrh	r3, [r1, #0]
BkpFullWriteToBkp():
C:\cortex\dimmers\src/dimmers_bkp.c:326
    static bool ok;

    memcpy( (u8 *) &BkpMemoryMap , (u8 * )&ExternData , sizeof (BkpMemoryMap));

    for ( index = 0 ; index < MAX_LIGHTS ; index ++ ){
        if (    
  7a:	2b01      	cmp	r3, #1
  7c:	d009      	beq.n	92 <BkpFullWriteToBkp+0x92>
  7e:	2b02      	cmp	r3, #2
  80:	d007      	beq.n	92 <BkpFullWriteToBkp+0x92>
  82:	2b04      	cmp	r3, #4
  84:	d005      	beq.n	92 <BkpFullWriteToBkp+0x92>
  86:	2b08      	cmp	r3, #8
  88:	d003      	beq.n	92 <BkpFullWriteToBkp+0x92>
  8a:	2b10      	cmp	r3, #16
  8c:	d001      	beq.n	92 <BkpFullWriteToBkp+0x92>
  8e:	2b20      	cmp	r3, #32
  90:	d107      	bne.n	a2 <BkpFullWriteToBkp+0xa2>
C:\cortex\dimmers\src/dimmers_bkp.c:325
    u16 value;
    static bool ok;

    memcpy( (u8 *) &BkpMemoryMap , (u8 * )&ExternData , sizeof (BkpMemoryMap));

    for ( index = 0 ; index < MAX_LIGHTS ; index ++ ){
  92:	4b1a      	ldr	r3, [pc, #104]	(fc <BkpFullWriteToBkp+0xfc>)
C:\cortex\dimmers\src/dimmers_bkp.c:326
        if (    
  94:	310c      	adds	r1, #12
C:\cortex\dimmers\src/dimmers_bkp.c:325
    u16 value;
    static bool ok;

    memcpy( (u8 *) &BkpMemoryMap , (u8 * )&ExternData , sizeof (BkpMemoryMap));

    for ( index = 0 ; index < MAX_LIGHTS ; index ++ ){
  96:	4299      	cmp	r1, r3
  98:	d1b9      	bne.n	e <BkpFullWriteToBkp+0xe>
  9a:	4a19      	ldr	r2, [pc, #100]	(100 <BkpFullWriteToBkp+0x100>)
  9c:	2301      	movs	r3, #1
  9e:	7013      	strb	r3, [r2, #0]
  a0:	e002      	b.n	a8 <BkpFullWriteToBkp+0xa8>
C:\cortex\dimmers\src/dimmers_bkp.c:337
            (CHECK_OUTPUT_PIN ( UtilSwab(&BkpMemoryMap.light[index].outputpin ))) 
            ){ 
            ok = TRUE;
        }
        else{
            ok = FALSE;
  a2:	4b17      	ldr	r3, [pc, #92]	(100 <BkpFullWriteToBkp+0x100>)
  a4:	2200      	movs	r2, #0
  a6:	701a      	strb	r2, [r3, #0]
C:\cortex\dimmers\src/dimmers_bkp.c:342
            break;
        }        
    }

    if ( ok == TRUE ){
  a8:	4b15      	ldr	r3, [pc, #84]	(100 <BkpFullWriteToBkp+0x100>)
  aa:	781b      	ldrb	r3, [r3, #0]
  ac:	2b01      	cmp	r3, #1
  ae:	d11d      	bne.n	ec <BkpFullWriteToBkp+0xec>
  b0:	4d0f      	ldr	r5, [pc, #60]	(f0 <BkpFullWriteToBkp+0xf0>)
  b2:	2404      	movs	r4, #4
C:\cortex\dimmers\src/dimmers_bkp.c:352
        #else
            value  = ExternData.values[byteidx++]; 
            value += ExternData.values[byteidx++] << 8;       
        #endif
        
            BKP_WriteBackupRegister( index , value );
  b4:	786b      	ldrb	r3, [r5, #1]
C:\cortex\dimmers\src/dimmers_bkp.c:348
        for (index = BKP_DR1 ; index <= BKP_DR10 ; index +=4 ){
        #ifdef BIG_ENDIAN
            value  = ExternData.values[byteidx++] << 8; 
            value += ExternData.values[byteidx++];       
        #else
            value  = ExternData.values[byteidx++]; 
  b6:	7829      	ldrb	r1, [r5, #0]
C:\cortex\dimmers\src/dimmers_bkp.c:352
            value += ExternData.values[byteidx++] << 8;       
        #endif
        
            BKP_WriteBackupRegister( index , value );
  b8:	4620      	mov	r0, r4
  ba:	eb01 2103 	add.w	r1, r1, r3, lsl #8
  be:	b289      	uxth	r1, r1
  c0:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:343
            break;
        }        
    }

    if ( ok == TRUE ){
        for (index = BKP_DR1 ; index <= BKP_DR10 ; index +=4 ){
  c4:	1d23      	adds	r3, r4, #4
  c6:	b29c      	uxth	r4, r3
  c8:	3502      	adds	r5, #2
  ca:	2c2c      	cmp	r4, #44
  cc:	d1f2      	bne.n	b4 <BkpFullWriteToBkp+0xb4>
  ce:	4d08      	ldr	r5, [pc, #32]	(f0 <BkpFullWriteToBkp+0xf0>)
  d0:	3414      	adds	r4, #20
C:\cortex\dimmers\src/dimmers_bkp.c:363
            value += ExternData.values[byteidx++];       
        #else
            value  = ExternData.values[byteidx++]; 
            value += ExternData.values[byteidx++] << 8;       
        #endif
            BKP_WriteBackupRegister( index , value );
  d2:	7d6b      	ldrb	r3, [r5, #21]
C:\cortex\dimmers\src/dimmers_bkp.c:360
        for (index = BKP_DR11 ; index <= BKP_DR42 ; index +=4 ){
        #ifdef BIG_ENDIAN
            value  = ExternData.values[byteidx++] << 8; 
            value += ExternData.values[byteidx++];       
        #else
            value  = ExternData.values[byteidx++]; 
  d4:	7d29      	ldrb	r1, [r5, #20]
C:\cortex\dimmers\src/dimmers_bkp.c:363
            value += ExternData.values[byteidx++] << 8;       
        #endif
            BKP_WriteBackupRegister( index , value );
  d6:	4620      	mov	r0, r4
  d8:	eb01 2103 	add.w	r1, r1, r3, lsl #8
  dc:	b289      	uxth	r1, r1
  de:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:355
        #endif
        
            BKP_WriteBackupRegister( index , value );
        }

        for (index = BKP_DR11 ; index <= BKP_DR42 ; index +=4 ){
  e2:	1d23      	adds	r3, r4, #4
  e4:	b29c      	uxth	r4, r3
  e6:	3502      	adds	r5, #2
  e8:	2cc0      	cmp	r4, #192
  ea:	d1f2      	bne.n	d2 <BkpFullWriteToBkp+0xd2>
C:\cortex\dimmers\src/dimmers_bkp.c:366
            value += ExternData.values[byteidx++] << 8;       
        #endif
            BKP_WriteBackupRegister( index , value );
        }
    }
}
  ec:	bd70      	pop	{r4, r5, r6, pc}
  ee:	46c0      	nop			(mov r8, r8)
	...
  f8:	00000008 	.word	0x00000008
  fc:	00000050 	.word	0x00000050
 100:	00000000 	.word	0x00000000
Disassembly of section .text.BkpSetFactoryDefaultsGeneral:

00000000 <BkpSetFactoryDefaultsGeneral>:
BkpSetFactoryDefaultsGeneral():
C:\cortex\dimmers\src/dimmers_bkp.c:132
        BKP_WriteBackupRegister( POS_VALUE_INPUT_PIN_LIGHT_6 ,  DEFAULT_VALUE_INPUT_PIN_6 );
    
    }
}

void    BkpSetFactoryDefaultsGeneral   ( void ){
   0:	b510      	push	{r4, lr}
C:\cortex\dimmers\src/dimmers_bkp.c:134

    BKP_WriteBackupRegister( POS_VALUE_TRESHOLD_ZEROCROSS   ,     DEFAULT_VALUE_TRESHOLD_ZEROCROSS );
   2:	20a8      	movs	r0, #168
   4:	2108      	movs	r1, #8
   6:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:135
    BKP_WriteBackupRegister( POS_VALUE_GENERAL_FLAGS        ,     DEFAULT_VALUE_GENERAL_FLAGS_BUTTON );
   a:	20bc      	movs	r0, #188
   c:	2100      	movs	r1, #0
   e:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:136
    BKP_WriteBackupRegister( POS_VALUE_FREE3 ,     DEFAULT_VALUE_FREE3 );
  12:	20b4      	movs	r0, #180
  14:	2100      	movs	r1, #0
  16:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:137
    BKP_WriteBackupRegister( POS_VALUE_FREE4 ,     DEFAULT_VALUE_FREE4 );
  1a:	20b8      	movs	r0, #184
  1c:	2100      	movs	r1, #0
  1e:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:139

}
  22:	bd10      	pop	{r4, pc}
Disassembly of section .text.BkpSetFactoryDefaultsForLight:

00000000 <BkpSetFactoryDefaultsForLight>:
BkpSetFactoryDefaultsForLight():
C:\cortex\dimmers\src/dimmers_bkp.c:70
    return index;
}

void    BkpSetFactoryDefaultsForLight ( u16 inputpin ){

    if ( inputpin == PIN_BUTTON_1 ){
   0:	2840      	cmp	r0, #64
C:\cortex\dimmers\src/dimmers_bkp.c:68
    }

    return index;
}

void    BkpSetFactoryDefaultsForLight ( u16 inputpin ){
   2:	b510      	push	{r4, lr}
   4:	4604      	mov	r4, r0
C:\cortex\dimmers\src/dimmers_bkp.c:70

    if ( inputpin == PIN_BUTTON_1 ){
   6:	d118      	bne.n	3a <BkpSetFactoryDefaultsForLight+0x3a>
C:\cortex\dimmers\src/dimmers_bkp.c:72
    
        BKP_WriteBackupRegister( POS_VALUE_LIGHT_1 ,            DEFAULT_VALUE_LIGHT_OFF );
   8:	2004      	movs	r0, #4
   a:	f242 7110 	movw	r1, #10000	; 0x2710
   e:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:73
        BKP_WriteBackupRegister( POS_VALUE_MIN_LIGHT_1 ,        DEFAULT_VALUE_MIN_LIGHT );
  12:	2008      	movs	r0, #8
  14:	f242 1134 	movw	r1, #8500	; 0x2134
  18:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:74
        BKP_WriteBackupRegister( POS_VALUE_MAX_LIGHT_1 ,        DEFAULT_VALUE_MAX_LIGHT );
  1c:	200c      	movs	r0, #12
  1e:	f640 11c4 	movw	r1, #2500	; 0x9c4
  22:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:75
        BKP_WriteBackupRegister( POS_VALUE_STEP_LIGHT_1 ,       DEFAULT_VALUE_STEP );
  26:	2010      	movs	r0, #16
  28:	2164      	movs	r1, #100
  2a:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:76
        BKP_WriteBackupRegister( POS_VALUE_OUTPUT_PIN_LIGHT_1 , DEFAULT_VALUE_OUTPUT_PIN_1 );
  2e:	2014      	movs	r0, #20
  30:	2101      	movs	r1, #1
  32:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:77
        BKP_WriteBackupRegister( POS_VALUE_INPUT_PIN_LIGHT_1 ,  DEFAULT_VALUE_INPUT_PIN_1 );
  36:	2018      	movs	r0, #24
  38:	e089      	b.n	14e <BkpSetFactoryDefaultsForLight+0x14e>
C:\cortex\dimmers\src/dimmers_bkp.c:80
    
    }
    else if ( inputpin == PIN_BUTTON_2 ){
  3a:	2880      	cmp	r0, #128
  3c:	d118      	bne.n	70 <BkpSetFactoryDefaultsForLight+0x70>
C:\cortex\dimmers\src/dimmers_bkp.c:82
    
        BKP_WriteBackupRegister( POS_VALUE_LIGHT_2 ,            DEFAULT_VALUE_LIGHT_OFF );
  3e:	201c      	movs	r0, #28
  40:	f242 7110 	movw	r1, #10000	; 0x2710
  44:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:83
        BKP_WriteBackupRegister( POS_VALUE_MIN_LIGHT_2 ,        DEFAULT_VALUE_MIN_LIGHT );
  48:	2020      	movs	r0, #32
  4a:	f242 1134 	movw	r1, #8500	; 0x2134
  4e:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:84
        BKP_WriteBackupRegister( POS_VALUE_MAX_LIGHT_2 ,        DEFAULT_VALUE_MAX_LIGHT );
  52:	2024      	movs	r0, #36
  54:	f640 11c4 	movw	r1, #2500	; 0x9c4
  58:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:85
        BKP_WriteBackupRegister( POS_VALUE_STEP_LIGHT_2 ,       DEFAULT_VALUE_STEP );
  5c:	2028      	movs	r0, #40
  5e:	2164      	movs	r1, #100
  60:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:86
        BKP_WriteBackupRegister( POS_VALUE_OUTPUT_PIN_LIGHT_2 , DEFAULT_VALUE_OUTPUT_PIN_2 );
  64:	2040      	movs	r0, #64
  66:	2102      	movs	r1, #2
  68:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:87
        BKP_WriteBackupRegister( POS_VALUE_INPUT_PIN_LIGHT_2 ,  DEFAULT_VALUE_INPUT_PIN_2 );
  6c:	2044      	movs	r0, #68
  6e:	e06e      	b.n	14e <BkpSetFactoryDefaultsForLight+0x14e>
C:\cortex\dimmers\src/dimmers_bkp.c:90
    
    }
    else if ( inputpin == PIN_BUTTON_3 ){
  70:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
  74:	d118      	bne.n	a8 <BkpSetFactoryDefaultsForLight+0xa8>
C:\cortex\dimmers\src/dimmers_bkp.c:92
    
        BKP_WriteBackupRegister( POS_VALUE_LIGHT_3 ,            DEFAULT_VALUE_LIGHT_OFF );
  76:	2048      	movs	r0, #72
  78:	f242 7110 	movw	r1, #10000	; 0x2710
  7c:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:93
        BKP_WriteBackupRegister( POS_VALUE_MIN_LIGHT_3 ,        DEFAULT_VALUE_MIN_LIGHT );
  80:	204c      	movs	r0, #76
  82:	f242 1134 	movw	r1, #8500	; 0x2134
  86:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:94
        BKP_WriteBackupRegister( POS_VALUE_MAX_LIGHT_3 ,        DEFAULT_VALUE_MAX_LIGHT );
  8a:	2050      	movs	r0, #80
  8c:	f640 11c4 	movw	r1, #2500	; 0x9c4
  90:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:95
        BKP_WriteBackupRegister( POS_VALUE_STEP_LIGHT_3 ,       DEFAULT_VALUE_STEP );
  94:	2054      	movs	r0, #84
  96:	2164      	movs	r1, #100
  98:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:96
        BKP_WriteBackupRegister( POS_VALUE_OUTPUT_PIN_LIGHT_3 , DEFAULT_VALUE_OUTPUT_PIN_3 );
  9c:	2058      	movs	r0, #88
  9e:	2104      	movs	r1, #4
  a0:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:97
        BKP_WriteBackupRegister( POS_VALUE_INPUT_PIN_LIGHT_3 ,  DEFAULT_VALUE_INPUT_PIN_3 );
  a4:	205c      	movs	r0, #92
  a6:	e052      	b.n	14e <BkpSetFactoryDefaultsForLight+0x14e>
C:\cortex\dimmers\src/dimmers_bkp.c:100
    
    }
    else if ( inputpin == PIN_BUTTON_4 ){
  a8:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
  ac:	d118      	bne.n	e0 <BkpSetFactoryDefaultsForLight+0xe0>
C:\cortex\dimmers\src/dimmers_bkp.c:102
    
        BKP_WriteBackupRegister( POS_VALUE_LIGHT_4 ,            DEFAULT_VALUE_LIGHT_OFF );
  ae:	2060      	movs	r0, #96
  b0:	f242 7110 	movw	r1, #10000	; 0x2710
  b4:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:103
        BKP_WriteBackupRegister( POS_VALUE_MIN_LIGHT_4 ,        DEFAULT_VALUE_MIN_LIGHT );
  b8:	2064      	movs	r0, #100
  ba:	f242 1134 	movw	r1, #8500	; 0x2134
  be:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:104
        BKP_WriteBackupRegister( POS_VALUE_MAX_LIGHT_4 ,        DEFAULT_VALUE_MAX_LIGHT );
  c2:	2068      	movs	r0, #104
  c4:	f640 11c4 	movw	r1, #2500	; 0x9c4
  c8:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:105
        BKP_WriteBackupRegister( POS_VALUE_STEP_LIGHT_4 ,       DEFAULT_VALUE_STEP );
  cc:	206c      	movs	r0, #108
  ce:	2164      	movs	r1, #100
  d0:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:106
        BKP_WriteBackupRegister( POS_VALUE_OUTPUT_PIN_LIGHT_4 , DEFAULT_VALUE_OUTPUT_PIN_4 );
  d4:	2070      	movs	r0, #112
  d6:	2108      	movs	r1, #8
  d8:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:107
        BKP_WriteBackupRegister( POS_VALUE_INPUT_PIN_LIGHT_4 ,  DEFAULT_VALUE_INPUT_PIN_4 );
  dc:	2074      	movs	r0, #116
  de:	e036      	b.n	14e <BkpSetFactoryDefaultsForLight+0x14e>
C:\cortex\dimmers\src/dimmers_bkp.c:110
    
    }
    else if ( inputpin == PIN_BUTTON_5 ){
  e0:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
  e4:	d118      	bne.n	118 <BkpSetFactoryDefaultsForLight+0x118>
C:\cortex\dimmers\src/dimmers_bkp.c:112
    
        BKP_WriteBackupRegister( POS_VALUE_LIGHT_5 ,            DEFAULT_VALUE_LIGHT_OFF );
  e6:	2078      	movs	r0, #120
  e8:	f242 7110 	movw	r1, #10000	; 0x2710
  ec:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:113
        BKP_WriteBackupRegister( POS_VALUE_MIN_LIGHT_5 ,        DEFAULT_VALUE_MIN_LIGHT );
  f0:	207c      	movs	r0, #124
  f2:	f242 1134 	movw	r1, #8500	; 0x2134
  f6:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:114
        BKP_WriteBackupRegister( POS_VALUE_MAX_LIGHT_5 ,        DEFAULT_VALUE_MAX_LIGHT );
  fa:	2080      	movs	r0, #128
  fc:	f640 11c4 	movw	r1, #2500	; 0x9c4
 100:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:115
        BKP_WriteBackupRegister( POS_VALUE_STEP_LIGHT_5 ,       DEFAULT_VALUE_STEP );
 104:	2084      	movs	r0, #132
 106:	2164      	movs	r1, #100
 108:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:116
        BKP_WriteBackupRegister( POS_VALUE_OUTPUT_PIN_LIGHT_5 , DEFAULT_VALUE_OUTPUT_PIN_5 );
 10c:	2088      	movs	r0, #136
 10e:	2110      	movs	r1, #16
 110:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:117
        BKP_WriteBackupRegister( POS_VALUE_INPUT_PIN_LIGHT_5 ,  DEFAULT_VALUE_INPUT_PIN_5 );
 114:	208c      	movs	r0, #140
 116:	e01a      	b.n	14e <BkpSetFactoryDefaultsForLight+0x14e>
C:\cortex\dimmers\src/dimmers_bkp.c:120
    
    }
    else if ( inputpin == PIN_BUTTON_6 ){
 118:	f5b0 6f00 	cmp.w	r0, #2048	; 0x800
 11c:	d11a      	bne.n	154 <BkpSetFactoryDefaultsForLight+0x154>
C:\cortex\dimmers\src/dimmers_bkp.c:122
    
        BKP_WriteBackupRegister( POS_VALUE_LIGHT_6 ,            DEFAULT_VALUE_LIGHT_OFF );
 11e:	2090      	movs	r0, #144
 120:	f242 7110 	movw	r1, #10000	; 0x2710
 124:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:123
        BKP_WriteBackupRegister( POS_VALUE_MIN_LIGHT_6 ,        DEFAULT_VALUE_MIN_LIGHT );
 128:	2094      	movs	r0, #148
 12a:	f242 1134 	movw	r1, #8500	; 0x2134
 12e:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:124
        BKP_WriteBackupRegister( POS_VALUE_MAX_LIGHT_6 ,        DEFAULT_VALUE_MAX_LIGHT );
 132:	2098      	movs	r0, #152
 134:	f640 11c4 	movw	r1, #2500	; 0x9c4
 138:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:125
        BKP_WriteBackupRegister( POS_VALUE_STEP_LIGHT_6 ,       DEFAULT_VALUE_STEP );
 13c:	209c      	movs	r0, #156
 13e:	2164      	movs	r1, #100
 140:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:126
        BKP_WriteBackupRegister( POS_VALUE_OUTPUT_PIN_LIGHT_6 , DEFAULT_VALUE_OUTPUT_PIN_6 );
 144:	20a0      	movs	r0, #160
 146:	2120      	movs	r1, #32
 148:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:127
        BKP_WriteBackupRegister( POS_VALUE_INPUT_PIN_LIGHT_6 ,  DEFAULT_VALUE_INPUT_PIN_6 );
 14c:	20a4      	movs	r0, #164
 14e:	4621      	mov	r1, r4
 150:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:130
    
    }
}
 154:	bd10      	pop	{r4, pc}
 156:	46c0      	nop			(mov r8, r8)
Disassembly of section .text.BkpFormat:

00000000 <BkpFormat>:
BkpFormat():
C:\cortex\dimmers\src/dimmers_bkp.c:38
void BkpUnlock ( void ){
    PWR_BackupAccessCmd(ENABLE);
    BKP_ClearFlag();
}

void BkpFormat ( u16 sign ){
   0:	b570      	push	{r4, r5, r6, lr}
   2:	4605      	mov	r5, r0
   4:	2404      	movs	r4, #4
C:\cortex\dimmers\src/dimmers_bkp.c:43
    
    u16 index;

    for (index = BKP_DR1 ; index <= BKP_DR10 ; index +=4 ){
        BKP_WriteBackupRegister(index,sign);
   6:	4620      	mov	r0, r4
   8:	4629      	mov	r1, r5
   a:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:42

void BkpFormat ( u16 sign ){
    
    u16 index;

    for (index = BKP_DR1 ; index <= BKP_DR10 ; index +=4 ){
   e:	1d23      	adds	r3, r4, #4
  10:	b29c      	uxth	r4, r3
  12:	2c2c      	cmp	r4, #44
  14:	d1f7      	bne.n	6 <BkpFormat+0x6>
  16:	3414      	adds	r4, #20
C:\cortex\dimmers\src/dimmers_bkp.c:47
        BKP_WriteBackupRegister(index,sign);
    }

    for (index = BKP_DR11 ; index <= BKP_DR42 ; index +=4 ){
        BKP_WriteBackupRegister(index,sign);
  18:	4620      	mov	r0, r4
  1a:	4629      	mov	r1, r5
  1c:	f7ff fffe 	bl	0 <BKP_WriteBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:46

    for (index = BKP_DR1 ; index <= BKP_DR10 ; index +=4 ){
        BKP_WriteBackupRegister(index,sign);
    }

    for (index = BKP_DR11 ; index <= BKP_DR42 ; index +=4 ){
  20:	1d23      	adds	r3, r4, #4
  22:	b29c      	uxth	r4, r3
  24:	2cc0      	cmp	r4, #192
  26:	d1f7      	bne.n	18 <BKP_WriteBackupRegister+0x18>
C:\cortex\dimmers\src/dimmers_bkp.c:49
        BKP_WriteBackupRegister(index,sign);
    }
}
  28:	bd70      	pop	{r4, r5, r6, pc}
  2a:	46c0      	nop			(mov r8, r8)
Disassembly of section .text.BkpFullReadToMemory:

00000000 <BkpFullReadToMemory>:
BkpFullReadToMemory():
C:\cortex\dimmers\src/dimmers_bkp.c:275
        BkpSetFactoryDefaultsForLight ( PIN_BUTTON_6 );
        BkpSetFactoryDefaultsGeneral();
    }
}

void    BkpFullReadToMemory (void){
   0:	b570      	push	{r4, r5, r6, lr}
   2:	4d0d      	ldr	r5, [pc, #52]	(38 <BkpFullReadToMemory+0x38>)
   4:	2404      	movs	r4, #4
C:\cortex\dimmers\src/dimmers_bkp.c:282
    u8  byteidx=0;
    u16 index;
    u16 value;

    for (index = BKP_DR1 ; index <= BKP_DR10 ; index +=4 ){
        value = BKP_ReadBackupRegister(index);
   6:	4620      	mov	r0, r4
   8:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:281

    u8  byteidx=0;
    u16 index;
    u16 value;

    for (index = BKP_DR1 ; index <= BKP_DR10 ; index +=4 ){
   c:	1d23      	adds	r3, r4, #4
C:\cortex\dimmers\src/dimmers_bkp.c:287
        value = BKP_ReadBackupRegister(index);
    #ifdef BIG_ENDIAN
        InternData.values[byteidx++] = (value & 0xFF00) >> 8; 
        InternData.values[byteidx++] =  value & 0x00FF;
    #else
        InternData.values[byteidx++] =  value & 0x00FF; 
   e:	7028      	strb	r0, [r5, #0]
C:\cortex\dimmers\src/dimmers_bkp.c:281

    u8  byteidx=0;
    u16 index;
    u16 value;

    for (index = BKP_DR1 ; index <= BKP_DR10 ; index +=4 ){
  10:	b29c      	uxth	r4, r3
C:\cortex\dimmers\src/dimmers_bkp.c:288
    #ifdef BIG_ENDIAN
        InternData.values[byteidx++] = (value & 0xFF00) >> 8; 
        InternData.values[byteidx++] =  value & 0x00FF;
    #else
        InternData.values[byteidx++] =  value & 0x00FF; 
        InternData.values[byteidx++] = (value & 0xFF00) >> 8; 
  12:	0a00      	lsrs	r0, r0, #8
  14:	7068      	strb	r0, [r5, #1]
C:\cortex\dimmers\src/dimmers_bkp.c:281

    u8  byteidx=0;
    u16 index;
    u16 value;

    for (index = BKP_DR1 ; index <= BKP_DR10 ; index +=4 ){
  16:	3502      	adds	r5, #2
  18:	2c2c      	cmp	r4, #44
  1a:	d1f4      	bne.n	6 <BkpFullReadToMemory+0x6>
  1c:	4d06      	ldr	r5, [pc, #24]	(38 <BkpFullReadToMemory+0x38>)
  1e:	3414      	adds	r4, #20
C:\cortex\dimmers\src/dimmers_bkp.c:293
        InternData.values[byteidx++] = (value & 0xFF00) >> 8; 
    #endif    
    }

    for (index = BKP_DR11 ; index <= BKP_DR42 ; index +=4 ){
        value = BKP_ReadBackupRegister(index);
  20:	4620      	mov	r0, r4
  22:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
C:\cortex\dimmers\src/dimmers_bkp.c:292
        InternData.values[byteidx++] =  value & 0x00FF; 
        InternData.values[byteidx++] = (value & 0xFF00) >> 8; 
    #endif    
    }

    for (index = BKP_DR11 ; index <= BKP_DR42 ; index +=4 ){
  26:	1d23      	adds	r3, r4, #4
C:\cortex\dimmers\src/dimmers_bkp.c:298
        value = BKP_ReadBackupRegister(index);
    #ifdef BIG_ENDIAN
        InternData.values[byteidx++] = (value & 0xFF00) >> 8; 
        InternData.values[byteidx++] =  value & 0x00FF; 
    #else
        InternData.values[byteidx++] =  value & 0x00FF; 
  28:	7528      	strb	r0, [r5, #20]
C:\cortex\dimmers\src/dimmers_bkp.c:292
        InternData.values[byteidx++] =  value & 0x00FF; 
        InternData.values[byteidx++] = (value & 0xFF00) >> 8; 
    #endif    
    }

    for (index = BKP_DR11 ; index <= BKP_DR42 ; index +=4 ){
  2a:	b29c      	uxth	r4, r3
C:\cortex\dimmers\src/dimmers_bkp.c:299
    #ifdef BIG_ENDIAN
        InternData.values[byteidx++] = (value & 0xFF00) >> 8; 
        InternData.values[byteidx++] =  value & 0x00FF; 
    #else
        InternData.values[byteidx++] =  value & 0x00FF; 
        InternData.values[byteidx++] = (value & 0xFF00) >> 8; 
  2c:	0a00      	lsrs	r0, r0, #8
  2e:	7568      	strb	r0, [r5, #21]
C:\cortex\dimmers\src/dimmers_bkp.c:292
        InternData.values[byteidx++] =  value & 0x00FF; 
        InternData.values[byteidx++] = (value & 0xFF00) >> 8; 
    #endif    
    }

    for (index = BKP_DR11 ; index <= BKP_DR42 ; index +=4 ){
  30:	3502      	adds	r5, #2
  32:	2cc0      	cmp	r4, #192
  34:	d1f4      	bne.n	20 <BkpFullReadToMemory+0x20>
C:\cortex\dimmers\src/dimmers_bkp.c:303
        InternData.values[byteidx++] =  value & 0x00FF; 
        InternData.values[byteidx++] = (value & 0xFF00) >> 8; 
    #endif  
    }

}
  36:	bd70      	pop	{r4, r5, r6, pc}
  38:	00000000 	.word	0x00000000
Disassembly of section .text.BkpWriteGeneralToMemory:

00000000 <BkpWriteGeneralToMemory>:
BkpWriteGeneralToMemory():
C:\cortex\dimmers\src/dimmers_bkp.c:254
        props->type     =   BkpGetSwitcherType(inputpin);
    }

}

void    BkpWriteGeneralToMemory ( void ){
   0:	b510      	push	{r4, lr}
C:\cortex\dimmers\src/dimmers_bkp.c:257

    //ZeroCrossTreshold   = BKP_ReadBackupRegister( POS_VALUE_TRESHOLD_ZEROCROSS );
    CountWatchdog       = BKP_ReadBackupRegister( POS_VALUE_COUNT_WATCHDOG );
   2:	20ac      	movs	r0, #172
   4:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
   8:	4b03      	ldr	r3, [pc, #12]	(18 <BkpWriteGeneralToMemory+0x18>)
   a:	8018      	strh	r0, [r3, #0]
C:\cortex\dimmers\src/dimmers_bkp.c:258
    PropertyFlags       = BKP_ReadBackupRegister( POS_VALUE_GENERAL_FLAGS );
   c:	20bc      	movs	r0, #188
   e:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
  12:	4b02      	ldr	r3, [pc, #8]	(1c <BkpWriteGeneralToMemory+0x1c>)
  14:	6018      	str	r0, [r3, #0]
C:\cortex\dimmers\src/dimmers_bkp.c:259
}
  16:	bd10      	pop	{r4, pc}
	...
Disassembly of section .text.BkpGetSwitcherType:

00000000 <BkpGetSwitcherType>:
BkpGetSwitcherType():
C:\cortex\dimmers\src/dimmers_bkp.c:141
    BKP_WriteBackupRegister( POS_VALUE_FREE3 ,     DEFAULT_VALUE_FREE3 );
    BKP_WriteBackupRegister( POS_VALUE_FREE4 ,     DEFAULT_VALUE_FREE4 );

}

SWITCHER_TYPE BkpGetSwitcherType (  u16 inputpin ){
   0:	b513      	push	{r0, r1, r4, lr}
   2:	4604      	mov	r4, r0
C:\cortex\dimmers\src/dimmers_bkp.c:145

    vu32 flags,bits;

    PropertyFlags = BKP_ReadBackupRegister( POS_VALUE_GENERAL_FLAGS );
   4:	20bc      	movs	r0, #188
   6:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
   a:	4b20      	ldr	r3, [pc, #128]	(8c <BkpGetSwitcherType+0x8c>)
C:\cortex\dimmers\src/dimmers_bkp.c:149

    flags = BB_GETVARADDR (PropertyFlags);

    if ( inputpin == PIN_BUTTON_1 ){
   c:	2c40      	cmp	r4, #64
C:\cortex\dimmers\src/dimmers_bkp.c:145

SWITCHER_TYPE BkpGetSwitcherType (  u16 inputpin ){

    vu32 flags,bits;

    PropertyFlags = BKP_ReadBackupRegister( POS_VALUE_GENERAL_FLAGS );
   e:	6018      	str	r0, [r3, #0]
C:\cortex\dimmers\src/dimmers_bkp.c:147

    flags = BB_GETVARADDR (PropertyFlags);
  10:	9301      	str	r3, [sp, #4]
C:\cortex\dimmers\src/dimmers_bkp.c:149

    if ( inputpin == PIN_BUTTON_1 ){
  12:	d104      	bne.n	1e <BkpGetSwitcherType+0x1e>
C:\cortex\dimmers\src/dimmers_bkp.c:150
        if ( BB_GETBIT (flags,0) == 1 )
  14:	9b01      	ldr	r3, [sp, #4]
  16:	015b      	lsls	r3, r3, #5
  18:	f043 5308 	orr.w	r3, r3, #570425344	; 0x22000000
  1c:	e02f      	b.n	7e <BkpGetSwitcherType+0x7e>
C:\cortex\dimmers\src/dimmers_bkp.c:155
            return SWITCH_TYPE;
        else
            return BUTTON_TYPE;
    }
    else if ( inputpin == PIN_BUTTON_2 ){
  1e:	2c80      	cmp	r4, #128
  20:	d106      	bne.n	30 <BkpGetSwitcherType+0x30>
C:\cortex\dimmers\src/dimmers_bkp.c:156
        if ( BB_GETBIT (flags,1) == 1 )
  22:	9b01      	ldr	r3, [sp, #4]
  24:	015b      	lsls	r3, r3, #5
  26:	f043 5308 	orr.w	r3, r3, #570425344	; 0x22000000
  2a:	f043 0304 	orr.w	r3, r3, #4	; 0x4
  2e:	e026      	b.n	7e <BkpGetSwitcherType+0x7e>
C:\cortex\dimmers\src/dimmers_bkp.c:161
            return SWITCH_TYPE;
        else
            return BUTTON_TYPE;
    }
    else if ( inputpin == PIN_BUTTON_3 ){
  30:	f5b4 7f80 	cmp.w	r4, #256	; 0x100
  34:	d106      	bne.n	44 <BkpGetSwitcherType+0x44>
C:\cortex\dimmers\src/dimmers_bkp.c:162
        if ( BB_GETBIT (flags,2) == 1 )
  36:	9b01      	ldr	r3, [sp, #4]
  38:	015b      	lsls	r3, r3, #5
  3a:	f043 5308 	orr.w	r3, r3, #570425344	; 0x22000000
  3e:	f043 0308 	orr.w	r3, r3, #8	; 0x8
  42:	e01c      	b.n	7e <BkpGetSwitcherType+0x7e>
C:\cortex\dimmers\src/dimmers_bkp.c:167
            return SWITCH_TYPE;
        else
            return BUTTON_TYPE;
    }
    else if ( inputpin == PIN_BUTTON_4 ){
  44:	f5b4 7f00 	cmp.w	r4, #512	; 0x200
  48:	d106      	bne.n	58 <BkpGetSwitcherType+0x58>
C:\cortex\dimmers\src/dimmers_bkp.c:168
        if ( BB_GETBIT (flags,3) == 1 )
  4a:	9b01      	ldr	r3, [sp, #4]
  4c:	015b      	lsls	r3, r3, #5
  4e:	f043 5308 	orr.w	r3, r3, #570425344	; 0x22000000
  52:	f043 030c 	orr.w	r3, r3, #12	; 0xc
  56:	e012      	b.n	7e <BkpGetSwitcherType+0x7e>
C:\cortex\dimmers\src/dimmers_bkp.c:173
            return SWITCH_TYPE;
        else
            return BUTTON_TYPE;
    }
    else if ( inputpin == PIN_BUTTON_5 ){
  58:	f5b4 6f80 	cmp.w	r4, #1024	; 0x400
  5c:	d106      	bne.n	6c <BkpGetSwitcherType+0x6c>
C:\cortex\dimmers\src/dimmers_bkp.c:174
        if ( BB_GETBIT (flags,4) == 1 )
  5e:	9b01      	ldr	r3, [sp, #4]
  60:	015b      	lsls	r3, r3, #5
  62:	f043 5308 	orr.w	r3, r3, #570425344	; 0x22000000
  66:	f043 0310 	orr.w	r3, r3, #16	; 0x10
  6a:	e008      	b.n	7e <BkpGetSwitcherType+0x7e>
C:\cortex\dimmers\src/dimmers_bkp.c:179
            return SWITCH_TYPE;
        else
            return BUTTON_TYPE;
    }
    else if ( inputpin == PIN_BUTTON_6 ){
  6c:	f5b4 6f00 	cmp.w	r4, #2048	; 0x800
  70:	d10b      	bne.n	8a <BkpGetSwitcherType+0x8a>
C:\cortex\dimmers\src/dimmers_bkp.c:180
        if ( BB_GETBIT (flags,5) == 1 )
  72:	9b01      	ldr	r3, [sp, #4]
  74:	015b      	lsls	r3, r3, #5
  76:	f043 5308 	orr.w	r3, r3, #570425344	; 0x22000000
  7a:	f043 0314 	orr.w	r3, r3, #20	; 0x14
  7e:	681b      	ldr	r3, [r3, #0]
  80:	2b01      	cmp	r3, #1
  82:	bf14      	ite	ne
  84:	2000      	movne	r0, #0
  86:	2001      	moveq	r0, #1
  88:	e7ff      	b.n	8a <BkpGetSwitcherType+0x8a>
C:\cortex\dimmers\src/dimmers_bkp.c:185
            return SWITCH_TYPE;
        else
            return BUTTON_TYPE;
    }
}
  8a:	bd1c      	pop	{r2, r3, r4, pc}
  8c:	00000000 	.word	0x00000000
Disassembly of section .text.BkpWriteLightPropertiesToMemory:

00000000 <BkpWriteLightPropertiesToMemory>:
BkpWriteLightPropertiesToMemory():
C:\cortex\dimmers\src/dimmers_bkp.c:189

void    BkpWriteLightPropertiesToMemory ( u16 inputpin , pTLightProperties props ){

    if ( inputpin == PIN_BUTTON_1 ){
   0:	2840      	cmp	r0, #64
C:\cortex\dimmers\src/dimmers_bkp.c:187
        else
            return BUTTON_TYPE;
    }
}

void    BkpWriteLightPropertiesToMemory ( u16 inputpin , pTLightProperties props ){
   2:	b570      	push	{r4, r5, r6, lr}
   4:	4605      	mov	r5, r0
   6:	460c      	mov	r4, r1
C:\cortex\dimmers\src/dimmers_bkp.c:189

    if ( inputpin == PIN_BUTTON_1 ){
   8:	d115      	bne.n	36 <BkpWriteLightPropertiesToMemory+0x36>
C:\cortex\dimmers\src/dimmers_bkp.c:191
    
        props->value    =   BKP_ReadBackupRegister( POS_VALUE_LIGHT_1 );
   a:	2004      	movs	r0, #4
   c:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
  10:	8020      	strh	r0, [r4, #0]
C:\cortex\dimmers\src/dimmers_bkp.c:192
        props->min      =   BKP_ReadBackupRegister( POS_VALUE_MIN_LIGHT_1 );
  12:	2008      	movs	r0, #8
  14:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
  18:	8060      	strh	r0, [r4, #2]
C:\cortex\dimmers\src/dimmers_bkp.c:193
        props->max      =   BKP_ReadBackupRegister( POS_VALUE_MAX_LIGHT_1 );
  1a:	200c      	movs	r0, #12
  1c:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
  20:	80a0      	strh	r0, [r4, #4]
C:\cortex\dimmers\src/dimmers_bkp.c:194
        props->step     =   BKP_ReadBackupRegister( POS_VALUE_STEP_LIGHT_1 );
  22:	2010      	movs	r0, #16
  24:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
  28:	80e0      	strh	r0, [r4, #6]
C:\cortex\dimmers\src/dimmers_bkp.c:195
        props->outputpin=   BKP_ReadBackupRegister( POS_VALUE_OUTPUT_PIN_LIGHT_1 );
  2a:	2014      	movs	r0, #20
  2c:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
  30:	8120      	strh	r0, [r4, #8]
C:\cortex\dimmers\src/dimmers_bkp.c:196
        props->inputpin =   BKP_ReadBackupRegister( POS_VALUE_INPUT_PIN_LIGHT_1 );
  32:	2018      	movs	r0, #24
  34:	e07a      	b.n	12c <BkpWriteLightPropertiesToMemory+0x12c>
C:\cortex\dimmers\src/dimmers_bkp.c:200
        props->type     =   BkpGetSwitcherType(inputpin);
    
    }
    else if ( inputpin == PIN_BUTTON_2 ){
  36:	2880      	cmp	r0, #128
  38:	d115      	bne.n	66 <BkpWriteLightPropertiesToMemory+0x66>
C:\cortex\dimmers\src/dimmers_bkp.c:202
    
        props->value    =   BKP_ReadBackupRegister( POS_VALUE_LIGHT_2 );
  3a:	201c      	movs	r0, #28
  3c:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
  40:	8020      	strh	r0, [r4, #0]
C:\cortex\dimmers\src/dimmers_bkp.c:203
        props->min      =   BKP_ReadBackupRegister( POS_VALUE_MIN_LIGHT_2 );
  42:	2020      	movs	r0, #32
  44:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
  48:	8060      	strh	r0, [r4, #2]
C:\cortex\dimmers\src/dimmers_bkp.c:204
        props->max      =   BKP_ReadBackupRegister( POS_VALUE_MAX_LIGHT_2 );
  4a:	2024      	movs	r0, #36
  4c:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
  50:	80a0      	strh	r0, [r4, #4]
C:\cortex\dimmers\src/dimmers_bkp.c:205
        props->step     =   BKP_ReadBackupRegister( POS_VALUE_STEP_LIGHT_2 );
  52:	2028      	movs	r0, #40
  54:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
  58:	80e0      	strh	r0, [r4, #6]
C:\cortex\dimmers\src/dimmers_bkp.c:206
        props->outputpin=   BKP_ReadBackupRegister( POS_VALUE_OUTPUT_PIN_LIGHT_2 );
  5a:	2040      	movs	r0, #64
  5c:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
  60:	8120      	strh	r0, [r4, #8]
C:\cortex\dimmers\src/dimmers_bkp.c:207
        props->inputpin =   BKP_ReadBackupRegister( POS_VALUE_INPUT_PIN_LIGHT_2 );
  62:	2044      	movs	r0, #68
  64:	e062      	b.n	12c <BkpWriteLightPropertiesToMemory+0x12c>
C:\cortex\dimmers\src/dimmers_bkp.c:211
        props->type     =   BkpGetSwitcherType(inputpin);

    }
    else if ( inputpin == PIN_BUTTON_3 ){
  66:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
  6a:	d115      	bne.n	98 <BkpWriteLightPropertiesToMemory+0x98>
C:\cortex\dimmers\src/dimmers_bkp.c:213
    
        props->value    =   BKP_ReadBackupRegister( POS_VALUE_LIGHT_3 );
  6c:	2048      	movs	r0, #72
  6e:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
  72:	8020      	strh	r0, [r4, #0]
C:\cortex\dimmers\src/dimmers_bkp.c:214
        props->min      =   BKP_ReadBackupRegister( POS_VALUE_MIN_LIGHT_3 );
  74:	204c      	movs	r0, #76
  76:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
  7a:	8060      	strh	r0, [r4, #2]
C:\cortex\dimmers\src/dimmers_bkp.c:215
        props->max      =   BKP_ReadBackupRegister( POS_VALUE_MAX_LIGHT_3 );
  7c:	2050      	movs	r0, #80
  7e:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
  82:	80a0      	strh	r0, [r4, #4]
C:\cortex\dimmers\src/dimmers_bkp.c:216
        props->step     =   BKP_ReadBackupRegister( POS_VALUE_STEP_LIGHT_3 );
  84:	2054      	movs	r0, #84
  86:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
  8a:	80e0      	strh	r0, [r4, #6]
C:\cortex\dimmers\src/dimmers_bkp.c:217
        props->outputpin=   BKP_ReadBackupRegister( POS_VALUE_OUTPUT_PIN_LIGHT_3 );
  8c:	2058      	movs	r0, #88
  8e:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
  92:	8120      	strh	r0, [r4, #8]
C:\cortex\dimmers\src/dimmers_bkp.c:218
        props->inputpin =   BKP_ReadBackupRegister( POS_VALUE_INPUT_PIN_LIGHT_3 );
  94:	205c      	movs	r0, #92
  96:	e049      	b.n	12c <BkpWriteLightPropertiesToMemory+0x12c>
C:\cortex\dimmers\src/dimmers_bkp.c:221
        props->type     =   BkpGetSwitcherType(inputpin);
    }
    else if ( inputpin == PIN_BUTTON_4 ){
  98:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
  9c:	d115      	bne.n	ca <BkpWriteLightPropertiesToMemory+0xca>
C:\cortex\dimmers\src/dimmers_bkp.c:223
    
        props->value    =   BKP_ReadBackupRegister( POS_VALUE_LIGHT_4 );
  9e:	2060      	movs	r0, #96
  a0:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
  a4:	8020      	strh	r0, [r4, #0]
C:\cortex\dimmers\src/dimmers_bkp.c:224
        props->min      =   BKP_ReadBackupRegister( POS_VALUE_MIN_LIGHT_4 );
  a6:	2064      	movs	r0, #100
  a8:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
  ac:	8060      	strh	r0, [r4, #2]
C:\cortex\dimmers\src/dimmers_bkp.c:225
        props->max      =   BKP_ReadBackupRegister( POS_VALUE_MAX_LIGHT_4 );
  ae:	2068      	movs	r0, #104
  b0:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
  b4:	80a0      	strh	r0, [r4, #4]
C:\cortex\dimmers\src/dimmers_bkp.c:226
        props->step     =   BKP_ReadBackupRegister( POS_VALUE_STEP_LIGHT_4 );
  b6:	206c      	movs	r0, #108
  b8:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
  bc:	80e0      	strh	r0, [r4, #6]
C:\cortex\dimmers\src/dimmers_bkp.c:227
        props->outputpin=   BKP_ReadBackupRegister( POS_VALUE_OUTPUT_PIN_LIGHT_4 );
  be:	2070      	movs	r0, #112
  c0:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
  c4:	8120      	strh	r0, [r4, #8]
C:\cortex\dimmers\src/dimmers_bkp.c:228
        props->inputpin =   BKP_ReadBackupRegister( POS_VALUE_INPUT_PIN_LIGHT_4 );
  c6:	2074      	movs	r0, #116
  c8:	e030      	b.n	12c <BkpWriteLightPropertiesToMemory+0x12c>
C:\cortex\dimmers\src/dimmers_bkp.c:231
        props->type     =   BkpGetSwitcherType(inputpin);
    }
    else if ( inputpin == PIN_BUTTON_5 ){
  ca:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
  ce:	d115      	bne.n	fc <BkpWriteLightPropertiesToMemory+0xfc>
C:\cortex\dimmers\src/dimmers_bkp.c:233
    
        props->value    =   BKP_ReadBackupRegister( POS_VALUE_LIGHT_5 );
  d0:	2078      	movs	r0, #120
  d2:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
  d6:	8020      	strh	r0, [r4, #0]
C:\cortex\dimmers\src/dimmers_bkp.c:234
        props->min      =   BKP_ReadBackupRegister( POS_VALUE_MIN_LIGHT_5 );
  d8:	207c      	movs	r0, #124
  da:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
  de:	8060      	strh	r0, [r4, #2]
C:\cortex\dimmers\src/dimmers_bkp.c:235
        props->max      =   BKP_ReadBackupRegister( POS_VALUE_MAX_LIGHT_5 );
  e0:	2080      	movs	r0, #128
  e2:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
  e6:	80a0      	strh	r0, [r4, #4]
C:\cortex\dimmers\src/dimmers_bkp.c:236
        props->step     =   BKP_ReadBackupRegister( POS_VALUE_STEP_LIGHT_5 );
  e8:	2084      	movs	r0, #132
  ea:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
  ee:	80e0      	strh	r0, [r4, #6]
C:\cortex\dimmers\src/dimmers_bkp.c:237
        props->outputpin=   BKP_ReadBackupRegister( POS_VALUE_OUTPUT_PIN_LIGHT_5 );
  f0:	2088      	movs	r0, #136
  f2:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
  f6:	8120      	strh	r0, [r4, #8]
C:\cortex\dimmers\src/dimmers_bkp.c:238
        props->inputpin =   BKP_ReadBackupRegister( POS_VALUE_INPUT_PIN_LIGHT_5 );
  f8:	208c      	movs	r0, #140
  fa:	e017      	b.n	12c <BkpWriteLightPropertiesToMemory+0x12c>
C:\cortex\dimmers\src/dimmers_bkp.c:241
        props->type     =   BkpGetSwitcherType(inputpin);
    }
    else if ( inputpin == PIN_BUTTON_6 ){
  fc:	f5b0 6f00 	cmp.w	r0, #2048	; 0x800
 100:	d11b      	bne.n	13a <BkpWriteLightPropertiesToMemory+0x13a>
C:\cortex\dimmers\src/dimmers_bkp.c:243
    
        props->value    =   BKP_ReadBackupRegister( POS_VALUE_LIGHT_6 );
 102:	2090      	movs	r0, #144
 104:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
 108:	8020      	strh	r0, [r4, #0]
C:\cortex\dimmers\src/dimmers_bkp.c:244
        props->min      =   BKP_ReadBackupRegister( POS_VALUE_MIN_LIGHT_6 );
 10a:	2094      	movs	r0, #148
 10c:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
 110:	8060      	strh	r0, [r4, #2]
C:\cortex\dimmers\src/dimmers_bkp.c:245
        props->max      =   BKP_ReadBackupRegister( POS_VALUE_MAX_LIGHT_6 );
 112:	2098      	movs	r0, #152
 114:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
 118:	80a0      	strh	r0, [r4, #4]
C:\cortex\dimmers\src/dimmers_bkp.c:246
        props->step     =   BKP_ReadBackupRegister( POS_VALUE_STEP_LIGHT_6);
 11a:	209c      	movs	r0, #156
 11c:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
 120:	80e0      	strh	r0, [r4, #6]
C:\cortex\dimmers\src/dimmers_bkp.c:247
        props->outputpin=   BKP_ReadBackupRegister( POS_VALUE_OUTPUT_PIN_LIGHT_6 );
 122:	20a0      	movs	r0, #160
 124:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
 128:	8120      	strh	r0, [r4, #8]
C:\cortex\dimmers\src/dimmers_bkp.c:248
        props->inputpin =   BKP_ReadBackupRegister( POS_VALUE_INPUT_PIN_LIGHT_6 );
 12a:	20a4      	movs	r0, #164
 12c:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
 130:	8160      	strh	r0, [r4, #10]
C:\cortex\dimmers\src/dimmers_bkp.c:249
        props->type     =   BkpGetSwitcherType(inputpin);
 132:	4628      	mov	r0, r5
 134:	f7ff fffe 	bl	0 <BkpWriteLightPropertiesToMemory>
 138:	7320      	strb	r0, [r4, #12]
C:\cortex\dimmers\src/dimmers_bkp.c:252
    }

}
 13a:	bd70      	pop	{r4, r5, r6, pc}
Disassembly of section .text.BkpVerify:

00000000 <BkpVerify>:
BkpVerify():
C:\cortex\dimmers\src/dimmers_bkp.c:51
    for (index = BKP_DR11 ; index <= BKP_DR42 ; index +=4 ){
        BKP_WriteBackupRegister(index,sign);
    }
}

u16 BkpVerify ( u16 sign ){
   0:	b570      	push	{r4, r5, r6, lr}
   2:	4605      	mov	r5, r0
   4:	2404      	movs	r4, #4
C:\cortex\dimmers\src/dimmers_bkp.c:56

    u16 index;

    for (index = BKP_DR1 ; index <= BKP_DR10 ; index +=4 ){
      if ( BKP_ReadBackupRegister(index) != sign )
   6:	4620      	mov	r0, r4
   8:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
   c:	42a8      	cmp	r0, r5
   e:	d10d      	bne.n	2c <BkpVerify+0x2c>
C:\cortex\dimmers\src/dimmers_bkp.c:55

u16 BkpVerify ( u16 sign ){

    u16 index;

    for (index = BKP_DR1 ; index <= BKP_DR10 ; index +=4 ){
  10:	1d23      	adds	r3, r4, #4
  12:	b29c      	uxth	r4, r3
  14:	2c2c      	cmp	r4, #44
  16:	d1f6      	bne.n	6 <BkpVerify+0x6>
  18:	3414      	adds	r4, #20
C:\cortex\dimmers\src/dimmers_bkp.c:61
      if ( BKP_ReadBackupRegister(index) != sign )
              return index;
    }

    for (index = BKP_DR11 ; index <= BKP_DR42 ; index +=4 ){
      if ( BKP_ReadBackupRegister(index) != sign )
  1a:	4620      	mov	r0, r4
  1c:	f7ff fffe 	bl	0 <BKP_ReadBackupRegister>
  20:	42a8      	cmp	r0, r5
  22:	d103      	bne.n	2c <BKP_ReadBackupRegister+0x2c>
C:\cortex\dimmers\src/dimmers_bkp.c:60
    for (index = BKP_DR1 ; index <= BKP_DR10 ; index +=4 ){
      if ( BKP_ReadBackupRegister(index) != sign )
              return index;
    }

    for (index = BKP_DR11 ; index <= BKP_DR42 ; index +=4 ){
  24:	1d23      	adds	r3, r4, #4
  26:	b29c      	uxth	r4, r3
  28:	2cc0      	cmp	r4, #192
  2a:	d1f6      	bne.n	1a <BKP_ReadBackupRegister+0x1a>
C:\cortex\dimmers\src/dimmers_bkp.c:66
      if ( BKP_ReadBackupRegister(index) != sign )
              return index;
    }

    return index;
}
  2c:	4620      	mov	r0, r4
  2e:	bd70      	pop	{r4, r5, r6, pc}
Disassembly of section .text.BkpSetFactoryDefaultsToLights:

00000000 <BkpSetFactoryDefaultsToLights>:
BkpSetFactoryDefaultsToLights():
C:\cortex\dimmers\src/dimmers_bkp.c:261
    //ZeroCrossTreshold   = BKP_ReadBackupRegister( POS_VALUE_TRESHOLD_ZEROCROSS );
    CountWatchdog       = BKP_ReadBackupRegister( POS_VALUE_COUNT_WATCHDOG );
    PropertyFlags       = BKP_ReadBackupRegister( POS_VALUE_GENERAL_FLAGS );
}

void    BkpSetFactoryDefaultsToLights ( void ){
   0:	b510      	push	{r4, lr}
C:\cortex\dimmers\src/dimmers_bkp.c:263

    if ( (GpioGetDipState(FACTORY_DEFAULT_SWITCH) == ON ) || ( IsWatchdog == TRUE) ) {
   2:	f44f 5080 	mov.w	r0, #4096	; 0x1000
   6:	f7ff fffe 	bl	0 <GpioGetDipState>
   a:	b118      	cbz	r0, 14 <BkpSetFactoryDefaultsToLights+0x14>
   c:	4b0e      	ldr	r3, [pc, #56]	(48 <BkpSetFactoryDefaultsToLights+0x48>)
   e:	781b      	ldrb	r3, [r3, #0]
  10:	2b01      	cmp	r3, #1
  12:	d117      	bne.n	44 <BkpSetFactoryDefaultsToLights+0x44>
C:\cortex\dimmers\src/dimmers_bkp.c:265

        BkpSetFactoryDefaultsForLight ( PIN_BUTTON_1 );
  14:	2040      	movs	r0, #64
  16:	f7ff fffe 	bl	0 <BkpSetFactoryDefaultsToLights>
C:\cortex\dimmers\src/dimmers_bkp.c:266
        BkpSetFactoryDefaultsForLight ( PIN_BUTTON_2 );
  1a:	2080      	movs	r0, #128
  1c:	f7ff fffe 	bl	0 <BkpSetFactoryDefaultsToLights>
C:\cortex\dimmers\src/dimmers_bkp.c:267
        BkpSetFactoryDefaultsForLight ( PIN_BUTTON_3 );
  20:	f44f 7080 	mov.w	r0, #256	; 0x100
  24:	f7ff fffe 	bl	0 <BkpSetFactoryDefaultsToLights>
C:\cortex\dimmers\src/dimmers_bkp.c:268
        BkpSetFactoryDefaultsForLight ( PIN_BUTTON_4 );
  28:	f44f 7000 	mov.w	r0, #512	; 0x200
  2c:	f7ff fffe 	bl	0 <BkpSetFactoryDefaultsToLights>
C:\cortex\dimmers\src/dimmers_bkp.c:269
        BkpSetFactoryDefaultsForLight ( PIN_BUTTON_5 );
  30:	f44f 6080 	mov.w	r0, #1024	; 0x400
  34:	f7ff fffe 	bl	0 <BkpSetFactoryDefaultsToLights>
C:\cortex\dimmers\src/dimmers_bkp.c:270
        BkpSetFactoryDefaultsForLight ( PIN_BUTTON_6 );
  38:	f44f 6000 	mov.w	r0, #2048	; 0x800
  3c:	f7ff fffe 	bl	0 <BkpSetFactoryDefaultsToLights>
C:\cortex\dimmers\src/dimmers_bkp.c:271
        BkpSetFactoryDefaultsGeneral();
  40:	f7ff fffe 	bl	0 <BkpSetFactoryDefaultsToLights>
C:\cortex\dimmers\src/dimmers_bkp.c:273
    }
}
  44:	bd10      	pop	{r4, pc}
  46:	46c0      	nop			(mov r8, r8)
  48:	00000000 	.word	0x00000000
Disassembly of section .text.BkpUnlock:

00000000 <BkpUnlock>:
BkpUnlock():
C:\cortex\dimmers\src/dimmers_bkp.c:33
void BkpLock ( void ){
    PWR_BackupAccessCmd(DISABLE);
    BKP_ClearFlag();
}

void BkpUnlock ( void ){
   0:	b510      	push	{r4, lr}
C:\cortex\dimmers\src/dimmers_bkp.c:34
    PWR_BackupAccessCmd(ENABLE);
   2:	2001      	movs	r0, #1
   4:	f7ff fffe 	bl	0 <PWR_BackupAccessCmd>
C:\cortex\dimmers\src/dimmers_bkp.c:35
    BKP_ClearFlag();
   8:	f7ff fffe 	bl	0 <BKP_ClearFlag>
C:\cortex\dimmers\src/dimmers_bkp.c:36
}
   c:	bd10      	pop	{r4, pc}
   e:	46c0      	nop			(mov r8, r8)
Disassembly of section .text.BkpLock:

00000000 <BkpLock>:
BkpLock():
C:\cortex\dimmers\src/dimmers_bkp.c:28
    PWR_BackupAccessCmd(ENABLE);
    BKP_ClearFlag();

}

void BkpLock ( void ){
   0:	b510      	push	{r4, lr}
C:\cortex\dimmers\src/dimmers_bkp.c:29
    PWR_BackupAccessCmd(DISABLE);
   2:	2000      	movs	r0, #0
   4:	f7ff fffe 	bl	0 <PWR_BackupAccessCmd>
C:\cortex\dimmers\src/dimmers_bkp.c:30
    BKP_ClearFlag();
   8:	f7ff fffe 	bl	0 <BKP_ClearFlag>
C:\cortex\dimmers\src/dimmers_bkp.c:31
}
   c:	bd10      	pop	{r4, pc}
   e:	46c0      	nop			(mov r8, r8)
Disassembly of section .text.BkpInit:

00000000 <BkpInit>:
BkpInit():
C:\cortex\dimmers\src/dimmers_bkp.c:20
#include "dimmers_gpio.h"

#include <string.h>
#include <stdlib.h>

void BkpInit( void){
   0:	b510      	push	{r4, lr}
C:\cortex\dimmers\src/dimmers_bkp.c:22

    RCC_APB1PeriphClockCmd(RCC_APB1Periph_PWR | RCC_APB1Periph_BKP, ENABLE);
   2:	2101      	movs	r1, #1
   4:	f04f 50c0 	mov.w	r0, #402653184	; 0x18000000
   8:	f7ff fffe 	bl	0 <RCC_APB1PeriphClockCmd>
C:\cortex\dimmers\src/dimmers_bkp.c:23
    PWR_BackupAccessCmd(ENABLE);
   c:	2001      	movs	r0, #1
   e:	f7ff fffe 	bl	0 <PWR_BackupAccessCmd>
C:\cortex\dimmers\src/dimmers_bkp.c:24
    BKP_ClearFlag();
  12:	f7ff fffe 	bl	0 <BKP_ClearFlag>
C:\cortex\dimmers\src/dimmers_bkp.c:26

}
  16:	bd10      	pop	{r4, pc}
