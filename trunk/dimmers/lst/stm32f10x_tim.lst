
C:\cortex\dimmers\hex\stm32f10x_tim.o:     file format elf32-littlearm
C:\cortex\dimmers\hex\stm32f10x_tim.o


Disassembly of section .text.TI1_Config:

00000000 <TI1_Config>:
TI1_Config():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3055
* Output         : None
* Return         : None
*******************************************************************************/
static void TI1_Config(TIM_TypeDef* TIMx, u16 TIM_ICPolarity, u16 TIM_ICSelection,
                       u16 TIM_ICFilter)
{
   0:	b530      	push	{r4, r5, lr}
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3059
  u16 tmpccmr1 = 0, tmpccer = 0;

  /* Disable the Channel 1: Reset the CC1E Bit */
  TIMx->CCER &= CCER_CC1E_Reset;
   2:	8c04      	ldrh	r4, [r0, #32]
   4:	f024 0401 	bic.w	r4, r4, #1
   8:	0424      	lsls	r4, r4, #16
   a:	0c24      	lsrs	r4, r4, #16
   c:	8404      	strh	r4, [r0, #32]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3061

  tmpccmr1 = TIMx->CCMR1;
   e:	8b04      	ldrh	r4, [r0, #24]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3062
  tmpccer = TIMx->CCER;
  10:	8c05      	ldrh	r5, [r0, #32]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3065

  /* Select the Input and set the filter */
  tmpccmr1 &= CCMR_CC13S_Mask & CCMR_IC13F_Mask;
  12:	f024 04f3 	bic.w	r4, r4, #243	; 0xf3
  16:	0424      	lsls	r4, r4, #16
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3069
  tmpccmr1 |= TIM_ICSelection | (u16)(TIM_ICFilter << 4);

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= CCER_CC1P_Reset;
  18:	f025 0502 	bic.w	r5, r5, #2
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3065

  tmpccmr1 = TIMx->CCMR1;
  tmpccer = TIMx->CCER;

  /* Select the Input and set the filter */
  tmpccmr1 &= CCMR_CC13S_Mask & CCMR_IC13F_Mask;
  1c:	0c24      	lsrs	r4, r4, #16
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3069
  tmpccmr1 |= TIM_ICSelection | (u16)(TIM_ICFilter << 4);

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= CCER_CC1P_Reset;
  1e:	042d      	lsls	r5, r5, #16
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3066
  tmpccmr1 = TIMx->CCMR1;
  tmpccer = TIMx->CCER;

  /* Select the Input and set the filter */
  tmpccmr1 &= CCMR_CC13S_Mask & CCMR_IC13F_Mask;
  tmpccmr1 |= TIM_ICSelection | (u16)(TIM_ICFilter << 4);
  20:	ea42 0404 	orr.w	r4, r2, r4
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3069

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= CCER_CC1P_Reset;
  24:	0c2d      	lsrs	r5, r5, #16
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3066
  tmpccmr1 = TIMx->CCMR1;
  tmpccer = TIMx->CCER;

  /* Select the Input and set the filter */
  tmpccmr1 &= CCMR_CC13S_Mask & CCMR_IC13F_Mask;
  tmpccmr1 |= TIM_ICSelection | (u16)(TIM_ICFilter << 4);
  26:	ea44 1403 	orr.w	r4, r4, r3, lsl #4
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3070

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= CCER_CC1P_Reset;
  tmpccer |= TIM_ICPolarity | CCER_CC1E_Set;
  2a:	f045 0501 	orr.w	r5, r5, #1
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3066
  tmpccmr1 = TIMx->CCMR1;
  tmpccer = TIMx->CCER;

  /* Select the Input and set the filter */
  tmpccmr1 &= CCMR_CC13S_Mask & CCMR_IC13F_Mask;
  tmpccmr1 |= TIM_ICSelection | (u16)(TIM_ICFilter << 4);
  2e:	b2a4      	uxth	r4, r4
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3070

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= CCER_CC1P_Reset;
  tmpccer |= TIM_ICPolarity | CCER_CC1E_Set;
  30:	430d      	orrs	r5, r1
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3073

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
  32:	8304      	strh	r4, [r0, #24]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3074
  TIMx->CCER = tmpccer;
  34:	8405      	strh	r5, [r0, #32]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3075
}
  36:	bd30      	pop	{r4, r5, pc}

Disassembly of section .text.TI2_Config:

00000000 <TI2_Config>:
TI2_Config():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3101
* Output         : None
* Return         : None
*******************************************************************************/
static void TI2_Config(TIM_TypeDef* TIMx, u16 TIM_ICPolarity, u16 TIM_ICSelection,
                       u16 TIM_ICFilter)
{
   0:	b530      	push	{r4, r5, lr}
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3105
  u16 tmpccmr1 = 0, tmpccer = 0, tmp = 0;

  /* Disable the Channel 2: Reset the CC2E Bit */
  TIMx->CCER &= CCER_CC2E_Reset;
   2:	8c04      	ldrh	r4, [r0, #32]
   4:	f024 0410 	bic.w	r4, r4, #16
   8:	0424      	lsls	r4, r4, #16
   a:	0c24      	lsrs	r4, r4, #16
   c:	8404      	strh	r4, [r0, #32]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3107

  tmpccmr1 = TIMx->CCMR1;
   e:	8b04      	ldrh	r4, [r0, #24]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3108
  tmpccer = TIMx->CCER;
  10:	8c05      	ldrh	r5, [r0, #32]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3112
  tmp = (u16)(TIM_ICPolarity << 4);

  /* Select the Input and set the filter */
  tmpccmr1 &= CCMR_CC24S_Mask & CCMR_IC24F_Mask;
  12:	f424 7440 	bic.w	r4, r4, #768	; 0x300
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3117
  tmpccmr1 |= (u16)(TIM_ICFilter << 12);
  tmpccmr1 |= (u16)(TIM_ICSelection << 8);

  /* Select the Polarity and set the CC2E Bit */
  tmpccer &= CCER_CC2P_Reset;
  16:	f025 0520 	bic.w	r5, r5, #32
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3112
  tmpccmr1 = TIMx->CCMR1;
  tmpccer = TIMx->CCER;
  tmp = (u16)(TIM_ICPolarity << 4);

  /* Select the Input and set the filter */
  tmpccmr1 &= CCMR_CC24S_Mask & CCMR_IC24F_Mask;
  1a:	0524      	lsls	r4, r4, #20
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3117
  tmpccmr1 |= (u16)(TIM_ICFilter << 12);
  tmpccmr1 |= (u16)(TIM_ICSelection << 8);

  /* Select the Polarity and set the CC2E Bit */
  tmpccer &= CCER_CC2P_Reset;
  1c:	042d      	lsls	r5, r5, #16
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3112
  tmpccmr1 = TIMx->CCMR1;
  tmpccer = TIMx->CCER;
  tmp = (u16)(TIM_ICPolarity << 4);

  /* Select the Input and set the filter */
  tmpccmr1 &= CCMR_CC24S_Mask & CCMR_IC24F_Mask;
  1e:	0d24      	lsrs	r4, r4, #20
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3117
  tmpccmr1 |= (u16)(TIM_ICFilter << 12);
  tmpccmr1 |= (u16)(TIM_ICSelection << 8);

  /* Select the Polarity and set the CC2E Bit */
  tmpccer &= CCER_CC2P_Reset;
  20:	0c2d      	lsrs	r5, r5, #16
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3113
  tmpccer = TIMx->CCER;
  tmp = (u16)(TIM_ICPolarity << 4);

  /* Select the Input and set the filter */
  tmpccmr1 &= CCMR_CC24S_Mask & CCMR_IC24F_Mask;
  tmpccmr1 |= (u16)(TIM_ICFilter << 12);
  22:	ea44 2402 	orr.w	r4, r4, r2, lsl #8
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3118
  tmpccmr1 |= (u16)(TIM_ICSelection << 8);

  /* Select the Polarity and set the CC2E Bit */
  tmpccer &= CCER_CC2P_Reset;
  tmpccer |=  tmp | CCER_CC2E_Set;
  26:	f045 0510 	orr.w	r5, r5, #16
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3114
  tmp = (u16)(TIM_ICPolarity << 4);

  /* Select the Input and set the filter */
  tmpccmr1 &= CCMR_CC24S_Mask & CCMR_IC24F_Mask;
  tmpccmr1 |= (u16)(TIM_ICFilter << 12);
  tmpccmr1 |= (u16)(TIM_ICSelection << 8);
  2a:	ea44 3403 	orr.w	r4, r4, r3, lsl #12
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3118

  /* Select the Polarity and set the CC2E Bit */
  tmpccer &= CCER_CC2P_Reset;
  tmpccer |=  tmp | CCER_CC2E_Set;
  2e:	ea45 1501 	orr.w	r5, r5, r1, lsl #4
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3114
  tmp = (u16)(TIM_ICPolarity << 4);

  /* Select the Input and set the filter */
  tmpccmr1 &= CCMR_CC24S_Mask & CCMR_IC24F_Mask;
  tmpccmr1 |= (u16)(TIM_ICFilter << 12);
  tmpccmr1 |= (u16)(TIM_ICSelection << 8);
  32:	b2a4      	uxth	r4, r4
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3118

  /* Select the Polarity and set the CC2E Bit */
  tmpccer &= CCER_CC2P_Reset;
  tmpccer |=  tmp | CCER_CC2E_Set;
  34:	b2ad      	uxth	r5, r5
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3121

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1 ;
  36:	8304      	strh	r4, [r0, #24]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3122
  TIMx->CCER = tmpccer;
  38:	8405      	strh	r5, [r0, #32]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3123
}
  3a:	bd30      	pop	{r4, r5, pc}

Disassembly of section .text.TIM_DeInit:

00000000 <TIM_DeInit>:
TIM_DeInit():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:135
* Input          : - TIMx: where x can be 1 to 8 to select the TIM peripheral.
* Output         : None
* Return         : None
*******************************************************************************/
void TIM_DeInit(TIM_TypeDef* TIMx)
{
   0:	b507      	push	{r0, r1, r2, lr}
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:139
  /* Check the parameters */
  assert_param(IS_TIM_ALL_PERIPH(TIMx)); 
 
  switch (*(u32*)&TIMx)
   2:	4b2c      	ldr	r3, [pc, #176]	; (b4 <TIM_DeInit+0xb4>)
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:135
* Input          : - TIMx: where x can be 1 to 8 to select the TIM peripheral.
* Output         : None
* Return         : None
*******************************************************************************/
void TIM_DeInit(TIM_TypeDef* TIMx)
{
   4:	9001      	str	r0, [sp, #4]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:139
  /* Check the parameters */
  assert_param(IS_TIM_ALL_PERIPH(TIMx)); 
 
  switch (*(u32*)&TIMx)
   6:	4298      	cmp	r0, r3
   8:	d033      	beq.n	72 <TIM_DeInit+0x72>
   a:	d809      	bhi.n	20 <TIM_DeInit+0x20>
   c:	4b2a      	ldr	r3, [pc, #168]	; (b8 <TIM_DeInit+0xb8>)
   e:	4298      	cmp	r0, r3
  10:	d023      	beq.n	5a <TIM_DeInit+0x5a>
  12:	4b2a      	ldr	r3, [pc, #168]	; (bc <TIM_DeInit+0xbc>)
  14:	4298      	cmp	r0, r3
  16:	d026      	beq.n	66 <TIM_DeInit+0x66>
  18:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
  1c:	d148      	bne.n	b0 <TIM_DeInit+0xb0>
  1e:	e016      	b.n	4e <TIM_DeInit+0x4e>
  20:	4b27      	ldr	r3, [pc, #156]	; (c0 <TIM_DeInit+0xc0>)
  22:	4298      	cmp	r0, r3
  24:	d031      	beq.n	8a <TIM_DeInit+0x8a>
  26:	d803      	bhi.n	30 <TIM_DeInit+0x30>
  28:	4b26      	ldr	r3, [pc, #152]	; (c4 <TIM_DeInit+0xc4>)
  2a:	4298      	cmp	r0, r3
  2c:	d140      	bne.n	b0 <TIM_DeInit+0xb0>
  2e:	e026      	b.n	7e <TIM_DeInit+0x7e>
  30:	4b25      	ldr	r3, [pc, #148]	; (c8 <TIM_DeInit+0xc8>)
  32:	4298      	cmp	r0, r3
  34:	d003      	beq.n	3e <TIM_DeInit+0x3e>
  36:	4b25      	ldr	r3, [pc, #148]	; (cc <TIM_DeInit+0xcc>)
  38:	4298      	cmp	r0, r3
  3a:	d139      	bne.n	b0 <TIM_DeInit+0xb0>
  3c:	e02e      	b.n	9c <TIM_DeInit+0x9c>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:142
  {
    case TIM1_BASE:
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM1, ENABLE);
  3e:	f44f 6000 	mov.w	r0, #2048	; 0x800
  42:	2101      	movs	r1, #1
  44:	f7ff fffe 	bl	0 <RCC_APB2PeriphResetCmd>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:143
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM1, DISABLE);  
  48:	f44f 6000 	mov.w	r0, #2048	; 0x800
  4c:	e02d      	b.n	aa <TIM_DeInit+0xaa>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:147
      break; 
      
    case TIM2_BASE:
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM2, ENABLE);
  4e:	2001      	movs	r0, #1
  50:	4601      	mov	r1, r0
  52:	f7ff fffe 	bl	0 <RCC_APB1PeriphResetCmd>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:148
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM2, DISABLE);
  56:	2001      	movs	r0, #1
  58:	e01c      	b.n	94 <TIM_DeInit+0x94>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:152
      break;
 
    case TIM3_BASE:
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM3, ENABLE);
  5a:	2002      	movs	r0, #2
  5c:	2101      	movs	r1, #1
  5e:	f7ff fffe 	bl	0 <RCC_APB1PeriphResetCmd>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:153
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM3, DISABLE);
  62:	2002      	movs	r0, #2
  64:	e016      	b.n	94 <TIM_DeInit+0x94>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:157
      break;
 
    case TIM4_BASE:
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM4, ENABLE);
  66:	2004      	movs	r0, #4
  68:	2101      	movs	r1, #1
  6a:	f7ff fffe 	bl	0 <RCC_APB1PeriphResetCmd>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:158
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM4, DISABLE);
  6e:	2004      	movs	r0, #4
  70:	e010      	b.n	94 <TIM_DeInit+0x94>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:162
      break;
      
    case TIM5_BASE:
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM5, ENABLE);
  72:	2008      	movs	r0, #8
  74:	2101      	movs	r1, #1
  76:	f7ff fffe 	bl	0 <RCC_APB1PeriphResetCmd>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:163
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM5, DISABLE);
  7a:	2008      	movs	r0, #8
  7c:	e00a      	b.n	94 <TIM_DeInit+0x94>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:167
      break;
      
    case TIM6_BASE:
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM6, ENABLE);
  7e:	2010      	movs	r0, #16
  80:	2101      	movs	r1, #1
  82:	f7ff fffe 	bl	0 <RCC_APB1PeriphResetCmd>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:168
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM6, DISABLE);
  86:	2010      	movs	r0, #16
  88:	e004      	b.n	94 <TIM_DeInit+0x94>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:172
      break;
      
    case TIM7_BASE:
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, ENABLE);
  8a:	2020      	movs	r0, #32
  8c:	2101      	movs	r1, #1
  8e:	f7ff fffe 	bl	0 <RCC_APB1PeriphResetCmd>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:173
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, DISABLE);
  92:	2020      	movs	r0, #32
  94:	2100      	movs	r1, #0
  96:	f7ff fffe 	bl	0 <RCC_APB1PeriphResetCmd>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:174
      break;
  9a:	e009      	b.n	b0 <TIM_DeInit+0xb0>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:177
      
    case TIM8_BASE:
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, ENABLE);
  9c:	f44f 5000 	mov.w	r0, #8192	; 0x2000
  a0:	2101      	movs	r1, #1
  a2:	f7ff fffe 	bl	0 <RCC_APB2PeriphResetCmd>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:178
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, DISABLE);  
  a6:	f44f 5000 	mov.w	r0, #8192	; 0x2000
  aa:	2100      	movs	r1, #0
  ac:	f7ff fffe 	bl	0 <RCC_APB2PeriphResetCmd>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:184
      break; 
      
    default:
      break;
  }
}
  b0:	bd0e      	pop	{r1, r2, r3, pc}
  b2:	bf00      	nop
  b4:	40000c00 	.word	0x40000c00
  b8:	40000400 	.word	0x40000400
  bc:	40000800 	.word	0x40000800
  c0:	40001400 	.word	0x40001400
  c4:	40001000 	.word	0x40001000
  c8:	40012c00 	.word	0x40012c00
  cc:	40013400 	.word	0x40013400

Disassembly of section .text.TIM_TimeBaseInit:

00000000 <TIM_TimeBaseInit>:
TIM_TimeBaseInit():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:206
  assert_param(IS_TIM_123458_PERIPH(TIMx)); 
  assert_param(IS_TIM_COUNTER_MODE(TIM_TimeBaseInitStruct->TIM_CounterMode));
  assert_param(IS_TIM_CKD_DIV(TIM_TimeBaseInitStruct->TIM_ClockDivision));

  /* Select the Counter Mode and set the clock division */
  TIMx->CR1 &= CR1_CKD_Mask & CR1_CounterMode_Mask;
   0:	88ca8803 	.word	0x88ca8803
   4:	f003 038f 	and.w	r3, r3, #143	; 0x8f
   8:	8003      	strh	r3, [r0, #0]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:207
  TIMx->CR1 |= (u32)TIM_TimeBaseInitStruct->TIM_ClockDivision |
   a:	8803      	ldrh	r3, [r0, #0]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:199
*                   the specified TIM peripheral.
* Output         : None
* Return         : None
*******************************************************************************/
void TIM_TimeBaseInit(TIM_TypeDef* TIMx, TIM_TimeBaseInitTypeDef* TIM_TimeBaseInitStruct)
{
   c:	b082      	sub	sp, #8
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:207
  assert_param(IS_TIM_COUNTER_MODE(TIM_TimeBaseInitStruct->TIM_CounterMode));
  assert_param(IS_TIM_CKD_DIV(TIM_TimeBaseInitStruct->TIM_ClockDivision));

  /* Select the Counter Mode and set the clock division */
  TIMx->CR1 &= CR1_CKD_Mask & CR1_CounterMode_Mask;
  TIMx->CR1 |= (u32)TIM_TimeBaseInitStruct->TIM_ClockDivision |
   e:	b29b      	uxth	r3, r3
  10:	4313      	orrs	r3, r2
  12:	884a      	ldrh	r2, [r1, #2]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:199
*                   the specified TIM peripheral.
* Output         : None
* Return         : None
*******************************************************************************/
void TIM_TimeBaseInit(TIM_TypeDef* TIMx, TIM_TimeBaseInitTypeDef* TIM_TimeBaseInitStruct)
{
  14:	9001      	str	r0, [sp, #4]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:207
  assert_param(IS_TIM_COUNTER_MODE(TIM_TimeBaseInitStruct->TIM_CounterMode));
  assert_param(IS_TIM_CKD_DIV(TIM_TimeBaseInitStruct->TIM_ClockDivision));

  /* Select the Counter Mode and set the clock division */
  TIMx->CR1 &= CR1_CKD_Mask & CR1_CounterMode_Mask;
  TIMx->CR1 |= (u32)TIM_TimeBaseInitStruct->TIM_ClockDivision |
  16:	4313      	orrs	r3, r2
  18:	b29b      	uxth	r3, r3
  1a:	8003      	strh	r3, [r0, #0]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:210
                TIM_TimeBaseInitStruct->TIM_CounterMode;
  /* Set the Autoreload value */
  TIMx->ARR = TIM_TimeBaseInitStruct->TIM_Period ;
  1c:	888b      	ldrh	r3, [r1, #4]
  1e:	8583      	strh	r3, [r0, #44]	; 0x2c
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:213

  /* Set the Prescaler value */
  TIMx->PSC = TIM_TimeBaseInitStruct->TIM_Prescaler;
  20:	880b      	ldrh	r3, [r1, #0]
  22:	8503      	strh	r3, [r0, #40]	; 0x28
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:216

  /* Generate an update event to reload the Prescaler value immediatly */
  TIMx->EGR = TIM_PSCReloadMode_Immediate;
  24:	2301      	movs	r3, #1
  26:	8283      	strh	r3, [r0, #20]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:218
    
  if (((*(u32*)&TIMx) == TIM1_BASE) || ((*(u32*)&TIMx) == TIM8_BASE))  
  28:	4b04      	ldr	r3, [pc, #16]	; (3c <TIM_TimeBaseInit+0x3c>)
  2a:	4298      	cmp	r0, r3
  2c:	d002      	beq.n	34 <TIM_TimeBaseInit+0x34>
  2e:	4b04      	ldr	r3, [pc, #16]	; (40 <TIM_TimeBaseInit+0x40>)
  30:	4298      	cmp	r0, r3
  32:	d101      	bne.n	38 <TIM_TimeBaseInit+0x38>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:221
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = TIM_TimeBaseInitStruct->TIM_RepetitionCounter;
  34:	7a0b      	ldrb	r3, [r1, #8]
  36:	8603      	strh	r3, [r0, #48]	; 0x30
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:223
  }        
}
  38:	b002      	add	sp, #8
  3a:	4770      	bx	lr
  3c:	40012c00 	.word	0x40012c00
  40:	40013400 	.word	0x40013400

Disassembly of section .text.TIM_OC1Init:

00000000 <TIM_OC1Init>:
TIM_OC1Init():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:248
  assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
  assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
  assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   

  /* Disable the Channel 1: Reset the CC1E Bit */
  TIMx->CCER &= CCER_CC1E_Reset;
   0:	8c03      	ldrh	r3, [r0, #32]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:238
*                    TIM peripheral.
* Output         : None
* Return         : None
*******************************************************************************/
void TIM_OC1Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
{
   2:	b573      	push	{r0, r1, r4, r5, r6, lr}
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:248
  assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
  assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
  assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   

  /* Disable the Channel 1: Reset the CC1E Bit */
  TIMx->CCER &= CCER_CC1E_Reset;
   4:	f023 0301 	bic.w	r3, r3, #1
   8:	041b      	lsls	r3, r3, #16
   a:	0c1b      	lsrs	r3, r3, #16
   c:	8403      	strh	r3, [r0, #32]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:251
  
  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
   e:	8c03      	ldrh	r3, [r0, #32]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:254

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
  10:	8884      	ldrh	r4, [r0, #4]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:257
  
  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
  12:	8b02      	ldrh	r2, [r0, #24]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:263
    
  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= CCMR_OC13M_Mask;
  
  /* Select the Output Compare Mode */
  tmpccmrx |= TIM_OCInitStruct->TIM_OCMode;
  14:	880d      	ldrh	r5, [r1, #0]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:260
  
  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
    
  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= CCMR_OC13M_Mask;
  16:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  1a:	0412      	lsls	r2, r2, #16
  1c:	0c12      	lsrs	r2, r2, #16
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:269
  
  /* Reset the Output Polarity level */
  tmpccer &= CCER_CC1P_Reset;

  /* Set the Output Compare Polarity */
  tmpccer |= TIM_OCInitStruct->TIM_OCPolarity;
  1e:	884e      	ldrh	r6, [r1, #2]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:263
    
  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= CCMR_OC13M_Mask;
  
  /* Select the Output Compare Mode */
  tmpccmrx |= TIM_OCInitStruct->TIM_OCMode;
  20:	432a      	orrs	r2, r5
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:269
  
  /* Reset the Output Polarity level */
  tmpccer &= CCER_CC1P_Reset;

  /* Set the Output Compare Polarity */
  tmpccer |= TIM_OCInitStruct->TIM_OCPolarity;
  22:	890d      	ldrh	r5, [r1, #8]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:266
  
  /* Select the Output Compare Mode */
  tmpccmrx |= TIM_OCInitStruct->TIM_OCMode;
  
  /* Reset the Output Polarity level */
  tmpccer &= CCER_CC1P_Reset;
  24:	f023 0302 	bic.w	r3, r3, #2
  28:	041b      	lsls	r3, r3, #16
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:269

  /* Set the Output Compare Polarity */
  tmpccer |= TIM_OCInitStruct->TIM_OCPolarity;
  2a:	ea46 0505 	orr.w	r5, r6, r5
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:266
  
  /* Select the Output Compare Mode */
  tmpccmrx |= TIM_OCInitStruct->TIM_OCMode;
  
  /* Reset the Output Polarity level */
  tmpccer &= CCER_CC1P_Reset;
  2e:	0c1b      	lsrs	r3, r3, #16
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:269

  /* Set the Output Compare Polarity */
  tmpccer |= TIM_OCInitStruct->TIM_OCPolarity;
  30:	b2ad      	uxth	r5, r5
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:272
  
  /* Set the Output State */
  tmpccer |= TIM_OCInitStruct->TIM_OutputState;
  32:	ea45 0303 	orr.w	r3, r5, r3
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:275
  
  /* Set the Capture Compare Register value */
  TIMx->CCR1 = TIM_OCInitStruct->TIM_Pulse;
  36:	88cd      	ldrh	r5, [r1, #6]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:238
*                    TIM peripheral.
* Output         : None
* Return         : None
*******************************************************************************/
void TIM_OC1Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
{
  38:	9001      	str	r0, [sp, #4]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:275
  
  /* Set the Output State */
  tmpccer |= TIM_OCInitStruct->TIM_OutputState;
  
  /* Set the Capture Compare Register value */
  TIMx->CCR1 = TIM_OCInitStruct->TIM_Pulse;
  3a:	8685      	strh	r5, [r0, #52]	; 0x34
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:277
  
  if((*(u32*)&TIMx == TIM1_BASE) || (*(u32*)&TIMx == TIM8_BASE))
  3c:	4d0f      	ldr	r5, [pc, #60]	; (7c <TIM_OC1Init+0x7c>)
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:254
  
  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
  3e:	b2a4      	uxth	r4, r4
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:277
  tmpccer |= TIM_OCInitStruct->TIM_OutputState;
  
  /* Set the Capture Compare Register value */
  TIMx->CCR1 = TIM_OCInitStruct->TIM_Pulse;
  
  if((*(u32*)&TIMx == TIM1_BASE) || (*(u32*)&TIMx == TIM8_BASE))
  40:	42a8      	cmp	r0, r5
  42:	d002      	beq.n	4a <TIM_OC1Init+0x4a>
  44:	4d0e      	ldr	r5, [pc, #56]	; (80 <TIM_OC1Init+0x80>)
  46:	42a8      	cmp	r0, r5
  48:	d114      	bne.n	74 <TIM_OC1Init+0x74>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:285
    assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
    assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
    
    /* Reset the Output N Polarity level */
    tmpccer &= CCER_CC1NP_Reset;
  4a:	f64f 75f7 	movw	r5, #65527	; 0xfff7
  4e:	ea03 0505 	and.w	r5, r3, r5
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:288

    /* Set the Output N Polarity */
    tmpccer |= TIM_OCInitStruct->TIM_OCNPolarity;
  52:	894b      	ldrh	r3, [r1, #10]
  54:	431d      	orrs	r5, r3
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:291

    /* Reset the Output N State */
    tmpccer &= CCER_CC1NE_Reset;
  56:	f64f 73fb 	movw	r3, #65531	; 0xfffb
  5a:	ea05 0303 	and.w	r3, r5, r3
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:294
    
    /* Set the Output N State */
    tmpccer |= TIM_OCInitStruct->TIM_OutputNState;
  5e:	888d      	ldrh	r5, [r1, #4]
  60:	432b      	orrs	r3, r5
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:298

    /* Reset the Ouput Compare and Output Compare N IDLE State */
    tmpcr2 &= CR2_OIS1_Reset;
    tmpcr2 &= CR2_OIS1N_Reset;
  62:	f647 45ff 	movw	r5, #31999	; 0x7cff
  66:	ea04 0505 	and.w	r5, r4, r5
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:301

    /* Set the Output Idle state */
    tmpcr2 |= TIM_OCInitStruct->TIM_OCIdleState;
  6a:	89cc      	ldrh	r4, [r1, #14]
  6c:	8989      	ldrh	r1, [r1, #12]
  6e:	430c      	orrs	r4, r1
  70:	b2a4      	uxth	r4, r4
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:304

    /* Set the Output N Idle state */
    tmpcr2 |= TIM_OCInitStruct->TIM_OCNIdleState;
  72:	432c      	orrs	r4, r5
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:307
  }
  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
  74:	8084      	strh	r4, [r0, #4]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:310
  
  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
  76:	8302      	strh	r2, [r0, #24]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:313
  
  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
  78:	8403      	strh	r3, [r0, #32]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:314
}
  7a:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
  7c:	40012c00 	.word	0x40012c00
  80:	40013400 	.word	0x40013400

Disassembly of section .text.TIM_OC2Init:

00000000 <TIM_OC2Init>:
TIM_OC2Init():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:339
  assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
  assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
  assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   

  /* Disable the Channel 2: Reset the CC2E Bit */
  TIMx->CCER &= CCER_CC2E_Reset;
   0:	8c03      	ldrh	r3, [r0, #32]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:329
*                    TIM peripheral.
* Output         : None
* Return         : None
*******************************************************************************/
void TIM_OC2Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
{
   2:	b537      	push	{r0, r1, r2, r4, r5, lr}
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:339
  assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
  assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
  assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   

  /* Disable the Channel 2: Reset the CC2E Bit */
  TIMx->CCER &= CCER_CC2E_Reset;
   4:	f023 0310 	bic.w	r3, r3, #16
   8:	041b      	lsls	r3, r3, #16
   a:	0c1b      	lsrs	r3, r3, #16
   c:	8403      	strh	r3, [r0, #32]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:342
  
  /* Get the TIMx CCER register value */  
  tmpccer = TIMx->CCER;
   e:	8c03      	ldrh	r3, [r0, #32]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:345

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
  10:	8882      	ldrh	r2, [r0, #4]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:348
  
  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
  12:	8b04      	ldrh	r4, [r0, #24]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:354
    
  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= CCMR_OC24M_Mask;
  
  /* Select the Output Compare Mode */
  tmpccmrx |= (u16)(TIM_OCInitStruct->TIM_OCMode << 8);
  14:	880d      	ldrh	r5, [r1, #0]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:351
  
  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
    
  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= CCMR_OC24M_Mask;
  16:	f424 44e0 	bic.w	r4, r4, #28672	; 0x7000
  1a:	0424      	lsls	r4, r4, #16
  1c:	0c24      	lsrs	r4, r4, #16
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:357
  
  /* Select the Output Compare Mode */
  tmpccmrx |= (u16)(TIM_OCInitStruct->TIM_OCMode << 8);
  
  /* Reset the Output Polarity level */
  tmpccer &= CCER_CC2P_Reset;
  1e:	f023 0320 	bic.w	r3, r3, #32
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:354
    
  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= CCMR_OC24M_Mask;
  
  /* Select the Output Compare Mode */
  tmpccmrx |= (u16)(TIM_OCInitStruct->TIM_OCMode << 8);
  22:	ea44 2405 	orr.w	r4, r4, r5, lsl #8
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:357
  
  /* Reset the Output Polarity level */
  tmpccer &= CCER_CC2P_Reset;
  26:	041b      	lsls	r3, r3, #16
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:360

  /* Set the Output Compare Polarity */
  tmpccer |= (u16)(TIM_OCInitStruct->TIM_OCPolarity << 4);
  28:	890d      	ldrh	r5, [r1, #8]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:357
  
  /* Select the Output Compare Mode */
  tmpccmrx |= (u16)(TIM_OCInitStruct->TIM_OCMode << 8);
  
  /* Reset the Output Polarity level */
  tmpccer &= CCER_CC2P_Reset;
  2a:	0c1b      	lsrs	r3, r3, #16
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:360

  /* Set the Output Compare Polarity */
  tmpccer |= (u16)(TIM_OCInitStruct->TIM_OCPolarity << 4);
  2c:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:363
  
  /* Set the Output State */
  tmpccer |= (u16)(TIM_OCInitStruct->TIM_OutputState << 4);
  30:	884d      	ldrh	r5, [r1, #2]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:329
*                    TIM peripheral.
* Output         : None
* Return         : None
*******************************************************************************/
void TIM_OC2Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
{
  32:	9001      	str	r0, [sp, #4]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:363

  /* Set the Output Compare Polarity */
  tmpccer |= (u16)(TIM_OCInitStruct->TIM_OCPolarity << 4);
  
  /* Set the Output State */
  tmpccer |= (u16)(TIM_OCInitStruct->TIM_OutputState << 4);
  34:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:366
  
  /* Set the Capture Compare Register value */
  TIMx->CCR2 = TIM_OCInitStruct->TIM_Pulse;
  38:	88cd      	ldrh	r5, [r1, #6]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:345
  
  /* Get the TIMx CCER register value */  
  tmpccer = TIMx->CCER;

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
  3a:	b292      	uxth	r2, r2
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:366
  
  /* Set the Output State */
  tmpccer |= (u16)(TIM_OCInitStruct->TIM_OutputState << 4);
  
  /* Set the Capture Compare Register value */
  TIMx->CCR2 = TIM_OCInitStruct->TIM_Pulse;
  3c:	8705      	strh	r5, [r0, #56]	; 0x38
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:368
  
  if((*(u32*)&TIMx == TIM1_BASE) || (*(u32*)&TIMx == TIM8_BASE))
  3e:	4d13      	ldr	r5, [pc, #76]	; (8c <TIM_OC2Init+0x8c>)
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:354
    
  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= CCMR_OC24M_Mask;
  
  /* Select the Output Compare Mode */
  tmpccmrx |= (u16)(TIM_OCInitStruct->TIM_OCMode << 8);
  40:	b2a4      	uxth	r4, r4
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:368
  tmpccer |= (u16)(TIM_OCInitStruct->TIM_OutputState << 4);
  
  /* Set the Capture Compare Register value */
  TIMx->CCR2 = TIM_OCInitStruct->TIM_Pulse;
  
  if((*(u32*)&TIMx == TIM1_BASE) || (*(u32*)&TIMx == TIM8_BASE))
  42:	42a8      	cmp	r0, r5
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:363

  /* Set the Output Compare Polarity */
  tmpccer |= (u16)(TIM_OCInitStruct->TIM_OCPolarity << 4);
  
  /* Set the Output State */
  tmpccer |= (u16)(TIM_OCInitStruct->TIM_OutputState << 4);
  44:	b29b      	uxth	r3, r3
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:368
  
  /* Set the Capture Compare Register value */
  TIMx->CCR2 = TIM_OCInitStruct->TIM_Pulse;
  
  if((*(u32*)&TIMx == TIM1_BASE) || (*(u32*)&TIMx == TIM8_BASE))
  46:	d002      	beq.n	4e <TIM_OC2Init+0x4e>
  48:	4d11      	ldr	r5, [pc, #68]	; (90 <TIM_OC2Init+0x90>)
  4a:	42a8      	cmp	r0, r5
  4c:	d119      	bne.n	82 <TIM_OC2Init+0x82>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:376
    assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
    assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
    
    /* Reset the Output N Polarity level */
    tmpccer &= CCER_CC2NP_Reset;
  4e:	f64f 757f 	movw	r5, #65407	; 0xff7f
  52:	ea03 0505 	and.w	r5, r3, r5
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:379

    /* Set the Output N Polarity */
    tmpccer |= (u16)(TIM_OCInitStruct->TIM_OCNPolarity << 4);
  56:	894b      	ldrh	r3, [r1, #10]
  58:	ea45 1503 	orr.w	r5, r5, r3, lsl #4
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:382

    /* Reset the Output N State */
    tmpccer &= CCER_CC2NE_Reset;
  5c:	f64f 73bf 	movw	r3, #65471	; 0xffbf
  60:	ea05 0303 	and.w	r3, r5, r3
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:385
    
    /* Set the Output N State */
    tmpccer |= (u16)(TIM_OCInitStruct->TIM_OutputNState << 4);
  64:	888d      	ldrh	r5, [r1, #4]
  66:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:389

    /* Reset the Ouput Compare and Output Compare N IDLE State */
    tmpcr2 &= CR2_OIS2_Reset;
    tmpcr2 &= CR2_OIS2N_Reset;
  6a:	f247 35ff 	movw	r5, #29695	; 0x73ff
  6e:	ea02 0505 	and.w	r5, r2, r5
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:392

    /* Set the Output Idle state */
    tmpcr2 |= (u16)(TIM_OCInitStruct->TIM_OCIdleState << 2);
  72:	898a      	ldrh	r2, [r1, #12]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:385

    /* Reset the Output N State */
    tmpccer &= CCER_CC2NE_Reset;
    
    /* Set the Output N State */
    tmpccer |= (u16)(TIM_OCInitStruct->TIM_OutputNState << 4);
  74:	b29b      	uxth	r3, r3
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:392
    /* Reset the Ouput Compare and Output Compare N IDLE State */
    tmpcr2 &= CR2_OIS2_Reset;
    tmpcr2 &= CR2_OIS2N_Reset;

    /* Set the Output Idle state */
    tmpcr2 |= (u16)(TIM_OCInitStruct->TIM_OCIdleState << 2);
  76:	ea45 0582 	orr.w	r5, r5, r2, lsl #2
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:395

    /* Set the Output N Idle state */
    tmpcr2 |= (u16)(TIM_OCInitStruct->TIM_OCNIdleState << 2);
  7a:	89ca      	ldrh	r2, [r1, #14]
  7c:	ea45 0282 	orr.w	r2, r5, r2, lsl #2
  80:	b292      	uxth	r2, r2
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:399
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
  82:	8082      	strh	r2, [r0, #4]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:402
  
  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
  84:	8304      	strh	r4, [r0, #24]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:405
  
  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
  86:	8403      	strh	r3, [r0, #32]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:406
}
  88:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
  8a:	bf00      	nop
  8c:	40012c00 	.word	0x40012c00
  90:	40013400 	.word	0x40013400

Disassembly of section .text.TIM_OC3Init:

00000000 <TIM_OC3Init>:
TIM_OC3Init():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:431
  assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
  assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
  assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   

  /* Disable the Channel 2: Reset the CC2E Bit */
  TIMx->CCER &= CCER_CC3E_Reset;
   0:	b5378c03 	.word	0xb5378c03
   4:	f423 7380 	bic.w	r3, r3, #256	; 0x100
   8:	041b      	lsls	r3, r3, #16
   a:	0c1b      	lsrs	r3, r3, #16
   c:	8403      	strh	r3, [r0, #32]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:434
  
  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
   e:	8c03      	ldrh	r3, [r0, #32]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:437

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
  10:	8882      	ldrh	r2, [r0, #4]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:440
  
  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
  12:	8b84      	ldrh	r4, [r0, #28]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:446
    
  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= CCMR_OC13M_Mask;
  
  /* Select the Output Compare Mode */
  tmpccmrx |= TIM_OCInitStruct->TIM_OCMode;
  14:	880d      	ldrh	r5, [r1, #0]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:443
  
  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
    
  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= CCMR_OC13M_Mask;
  16:	f024 0470 	bic.w	r4, r4, #112	; 0x70
  1a:	0424      	lsls	r4, r4, #16
  1c:	0c24      	lsrs	r4, r4, #16
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:449
  
  /* Select the Output Compare Mode */
  tmpccmrx |= TIM_OCInitStruct->TIM_OCMode;
  
  /* Reset the Output Polarity level */
  tmpccer &= CCER_CC3P_Reset;
  1e:	f423 7300 	bic.w	r3, r3, #512	; 0x200
  22:	041b      	lsls	r3, r3, #16
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:446
    
  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= CCMR_OC13M_Mask;
  
  /* Select the Output Compare Mode */
  tmpccmrx |= TIM_OCInitStruct->TIM_OCMode;
  24:	432c      	orrs	r4, r5
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:452
  
  /* Reset the Output Polarity level */
  tmpccer &= CCER_CC3P_Reset;

  /* Set the Output Compare Polarity */
  tmpccer |= (u16)(TIM_OCInitStruct->TIM_OCPolarity << 8);
  26:	890d      	ldrh	r5, [r1, #8]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:449
  
  /* Select the Output Compare Mode */
  tmpccmrx |= TIM_OCInitStruct->TIM_OCMode;
  
  /* Reset the Output Polarity level */
  tmpccer &= CCER_CC3P_Reset;
  28:	0c1b      	lsrs	r3, r3, #16
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:452

  /* Set the Output Compare Polarity */
  tmpccer |= (u16)(TIM_OCInitStruct->TIM_OCPolarity << 8);
  2a:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:455
  
  /* Set the Output State */
  tmpccer |= (u16)(TIM_OCInitStruct->TIM_OutputState << 8);
  2e:	884d      	ldrh	r5, [r1, #2]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:421
*                    TIM peripheral.
* Output         : None
* Return         : None
*******************************************************************************/
void TIM_OC3Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
{
  30:	9001      	str	r0, [sp, #4]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:455

  /* Set the Output Compare Polarity */
  tmpccer |= (u16)(TIM_OCInitStruct->TIM_OCPolarity << 8);
  
  /* Set the Output State */
  tmpccer |= (u16)(TIM_OCInitStruct->TIM_OutputState << 8);
  32:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:458
  
  /* Set the Capture Compare Register value */
  TIMx->CCR3 = TIM_OCInitStruct->TIM_Pulse;
  36:	88cd      	ldrh	r5, [r1, #6]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:437
  
  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
  38:	b292      	uxth	r2, r2
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:458
  
  /* Set the Output State */
  tmpccer |= (u16)(TIM_OCInitStruct->TIM_OutputState << 8);
  
  /* Set the Capture Compare Register value */
  TIMx->CCR3 = TIM_OCInitStruct->TIM_Pulse;
  3a:	8785      	strh	r5, [r0, #60]	; 0x3c
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:460
  
  if((*(u32*)&TIMx == TIM1_BASE) || (*(u32*)&TIMx == TIM8_BASE))
  3c:	4d12      	ldr	r5, [pc, #72]	; (88 <TIM_OC3Init+0x88>)
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:455

  /* Set the Output Compare Polarity */
  tmpccer |= (u16)(TIM_OCInitStruct->TIM_OCPolarity << 8);
  
  /* Set the Output State */
  tmpccer |= (u16)(TIM_OCInitStruct->TIM_OutputState << 8);
  3e:	b29b      	uxth	r3, r3
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:460
  
  /* Set the Capture Compare Register value */
  TIMx->CCR3 = TIM_OCInitStruct->TIM_Pulse;
  
  if((*(u32*)&TIMx == TIM1_BASE) || (*(u32*)&TIMx == TIM8_BASE))
  40:	42a8      	cmp	r0, r5
  42:	d002      	beq.n	4a <TIM_OC3Init+0x4a>
  44:	4d11      	ldr	r5, [pc, #68]	; (8c <TIM_OC3Init+0x8c>)
  46:	42a8      	cmp	r0, r5
  48:	d119      	bne.n	7e <TIM_OC3Init+0x7e>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:468
    assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
    assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
    
    /* Reset the Output N Polarity level */
    tmpccer &= CCER_CC3NP_Reset;
  4a:	f24f 75ff 	movw	r5, #63487	; 0xf7ff
  4e:	ea03 0505 	and.w	r5, r3, r5
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:471

    /* Set the Output N Polarity */
    tmpccer |= (u16)(TIM_OCInitStruct->TIM_OCNPolarity << 8);
  52:	894b      	ldrh	r3, [r1, #10]
  54:	ea45 2503 	orr.w	r5, r5, r3, lsl #8
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:474

    /* Reset the Output N State */
    tmpccer &= CCER_CC3NE_Reset;
  58:	f64f 33ff 	movw	r3, #64511	; 0xfbff
  5c:	ea05 0303 	and.w	r3, r5, r3
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:477
    
    /* Set the Output N State */
    tmpccer |= (u16)(TIM_OCInitStruct->TIM_OutputNState << 8);
  60:	888d      	ldrh	r5, [r1, #4]
  62:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:481

    /* Reset the Ouput Compare and Output Compare N IDLE State */
    tmpcr2 &= CR2_OIS3_Reset;
    tmpcr2 &= CR2_OIS3N_Reset;
  66:	f644 75ff 	movw	r5, #20479	; 0x4fff
  6a:	ea02 0505 	and.w	r5, r2, r5
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:484

    /* Set the Output Idle state */
    tmpcr2 |= (u16)(TIM_OCInitStruct->TIM_OCIdleState << 4);
  6e:	898a      	ldrh	r2, [r1, #12]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:477

    /* Reset the Output N State */
    tmpccer &= CCER_CC3NE_Reset;
    
    /* Set the Output N State */
    tmpccer |= (u16)(TIM_OCInitStruct->TIM_OutputNState << 8);
  70:	b29b      	uxth	r3, r3
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:484
    /* Reset the Ouput Compare and Output Compare N IDLE State */
    tmpcr2 &= CR2_OIS3_Reset;
    tmpcr2 &= CR2_OIS3N_Reset;

    /* Set the Output Idle state */
    tmpcr2 |= (u16)(TIM_OCInitStruct->TIM_OCIdleState << 4);
  72:	ea45 1502 	orr.w	r5, r5, r2, lsl #4
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:487

    /* Set the Output N Idle state */
    tmpcr2 |= (u16)(TIM_OCInitStruct->TIM_OCNIdleState << 4);
  76:	89ca      	ldrh	r2, [r1, #14]
  78:	ea45 1202 	orr.w	r2, r5, r2, lsl #4
  7c:	b292      	uxth	r2, r2
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:491
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
  7e:	8082      	strh	r2, [r0, #4]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:494
  
  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
  80:	8384      	strh	r4, [r0, #28]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:497
  
  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
  82:	8403      	strh	r3, [r0, #32]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:498
}
  84:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
  86:	bf00      	nop
  88:	40012c00 	.word	0x40012c00
  8c:	40013400 	.word	0x40013400

Disassembly of section .text.TIM_OC4Init:

00000000 <TIM_OC4Init>:
TIM_OC4Init():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:523
  assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
  assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
  assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   

  /* Disable the Channel 2: Reset the CC4E Bit */
  TIMx->CCER &= CCER_CC4E_Reset;
   0:	b5378c03 	.word	0xb5378c03
   4:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
   8:	041b      	lsls	r3, r3, #16
   a:	0c1b      	lsrs	r3, r3, #16
   c:	8403      	strh	r3, [r0, #32]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:526
  
  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
   e:	8c03      	ldrh	r3, [r0, #32]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:529

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
  10:	8884      	ldrh	r4, [r0, #4]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:532
  
  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
  12:	8b82      	ldrh	r2, [r0, #28]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:538
    
  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= CCMR_OC24M_Mask;
  
  /* Select the Output Compare Mode */
  tmpccmrx |= (u16)(TIM_OCInitStruct->TIM_OCMode << 8);
  14:	880d      	ldrh	r5, [r1, #0]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:535
  
  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
    
  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= CCMR_OC24M_Mask;
  16:	f422 42e0 	bic.w	r2, r2, #28672	; 0x7000
  1a:	0412      	lsls	r2, r2, #16
  1c:	0c12      	lsrs	r2, r2, #16
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:541
  
  /* Select the Output Compare Mode */
  tmpccmrx |= (u16)(TIM_OCInitStruct->TIM_OCMode << 8);
  
  /* Reset the Output Polarity level */
  tmpccer &= CCER_CC4P_Reset;
  1e:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:538
    
  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= CCMR_OC24M_Mask;
  
  /* Select the Output Compare Mode */
  tmpccmrx |= (u16)(TIM_OCInitStruct->TIM_OCMode << 8);
  22:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:541
  
  /* Reset the Output Polarity level */
  tmpccer &= CCER_CC4P_Reset;
  26:	041b      	lsls	r3, r3, #16
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:544

  /* Set the Output Compare Polarity */
  tmpccer |= (u16)(TIM_OCInitStruct->TIM_OCPolarity << 12);
  28:	890d      	ldrh	r5, [r1, #8]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:541
  
  /* Select the Output Compare Mode */
  tmpccmrx |= (u16)(TIM_OCInitStruct->TIM_OCMode << 8);
  
  /* Reset the Output Polarity level */
  tmpccer &= CCER_CC4P_Reset;
  2a:	0c1b      	lsrs	r3, r3, #16
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:544

  /* Set the Output Compare Polarity */
  tmpccer |= (u16)(TIM_OCInitStruct->TIM_OCPolarity << 12);
  2c:	ea43 3305 	orr.w	r3, r3, r5, lsl #12
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:547
  
  /* Set the Output State */
  tmpccer |= (u16)(TIM_OCInitStruct->TIM_OutputState << 12);
  30:	884d      	ldrh	r5, [r1, #2]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:513
*                    TIM peripheral.
* Output         : None
* Return         : None
*******************************************************************************/
void TIM_OC4Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
{
  32:	9001      	str	r0, [sp, #4]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:547

  /* Set the Output Compare Polarity */
  tmpccer |= (u16)(TIM_OCInitStruct->TIM_OCPolarity << 12);
  
  /* Set the Output State */
  tmpccer |= (u16)(TIM_OCInitStruct->TIM_OutputState << 12);
  34:	ea43 3305 	orr.w	r3, r3, r5, lsl #12
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:550
  
  /* Set the Capture Compare Register value */
  TIMx->CCR4 = TIM_OCInitStruct->TIM_Pulse;
  38:	88cd      	ldrh	r5, [r1, #6]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:529
  
  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
  3a:	b2a4      	uxth	r4, r4
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:550
  
  /* Set the Output State */
  tmpccer |= (u16)(TIM_OCInitStruct->TIM_OutputState << 12);
  
  /* Set the Capture Compare Register value */
  TIMx->CCR4 = TIM_OCInitStruct->TIM_Pulse;
  3c:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:552
  
  if((*(u32*)&TIMx == TIM1_BASE) || (*(u32*)&TIMx == TIM8_BASE))
  40:	4d08      	ldr	r5, [pc, #32]	; (64 <TIM_OC4Init+0x64>)
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:538
    
  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= CCMR_OC24M_Mask;
  
  /* Select the Output Compare Mode */
  tmpccmrx |= (u16)(TIM_OCInitStruct->TIM_OCMode << 8);
  42:	b292      	uxth	r2, r2
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:552
  tmpccer |= (u16)(TIM_OCInitStruct->TIM_OutputState << 12);
  
  /* Set the Capture Compare Register value */
  TIMx->CCR4 = TIM_OCInitStruct->TIM_Pulse;
  
  if((*(u32*)&TIMx == TIM1_BASE) || (*(u32*)&TIMx == TIM8_BASE))
  44:	42a8      	cmp	r0, r5
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:547

  /* Set the Output Compare Polarity */
  tmpccer |= (u16)(TIM_OCInitStruct->TIM_OCPolarity << 12);
  
  /* Set the Output State */
  tmpccer |= (u16)(TIM_OCInitStruct->TIM_OutputState << 12);
  46:	b29b      	uxth	r3, r3
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:552
  
  /* Set the Capture Compare Register value */
  TIMx->CCR4 = TIM_OCInitStruct->TIM_Pulse;
  
  if((*(u32*)&TIMx == TIM1_BASE) || (*(u32*)&TIMx == TIM8_BASE))
  48:	d002      	beq.n	50 <TIM_OC4Init+0x50>
  4a:	4d07      	ldr	r5, [pc, #28]	; (68 <TIM_OC4Init+0x68>)
  4c:	42a8      	cmp	r0, r5
  4e:	d105      	bne.n	5c <TIM_OC4Init+0x5c>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:557
  {
    assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));

    /* Reset the Ouput Compare IDLE State */
    tmpcr2 &= CR2_OIS4_Reset;
  50:	04a4      	lsls	r4, r4, #18
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:560

    /* Set the Output Idle state */
    tmpcr2 |= (u16)(TIM_OCInitStruct->TIM_OCIdleState << 6);
  52:	8989      	ldrh	r1, [r1, #12]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:557
  if((*(u32*)&TIMx == TIM1_BASE) || (*(u32*)&TIMx == TIM8_BASE))
  {
    assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));

    /* Reset the Ouput Compare IDLE State */
    tmpcr2 &= CR2_OIS4_Reset;
  54:	0ca4      	lsrs	r4, r4, #18
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:560

    /* Set the Output Idle state */
    tmpcr2 |= (u16)(TIM_OCInitStruct->TIM_OCIdleState << 6);
  56:	ea44 1481 	orr.w	r4, r4, r1, lsl #6
  5a:	b2a4      	uxth	r4, r4
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:564
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
  5c:	8084      	strh	r4, [r0, #4]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:567
  
  /* Write to TIMx CCMR2 */  
  TIMx->CCMR2 = tmpccmrx;
  5e:	8382      	strh	r2, [r0, #28]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:570
  
  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
  60:	8403      	strh	r3, [r0, #32]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:571
}
  62:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
  64:	40012c00 	.word	0x40012c00
  68:	40013400 	.word	0x40013400

Disassembly of section .text.TIM_BDTRConfig:

00000000 <TIM_BDTRConfig>:
TIM_BDTRConfig():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:735
  assert_param(IS_TIM_AUTOMATIC_OUTPUT_STATE(TIM_BDTRInitStruct->TIM_AutomaticOutput));

  /* Set the Lock level, the Break enable Bit and the Ploarity, the OSSR State,
     the OSSI State, the dead time value and the Automatic Output Enable Bit */

  TIMx->BDTR = (u32)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
   0:	884a      	ldrh	r2, [r1, #2]
   2:	880b      	ldrh	r3, [r1, #0]
   4:	ea42 0303 	orr.w	r3, r2, r3
   8:	888a      	ldrh	r2, [r1, #4]
   a:	4313      	orrs	r3, r2
   c:	88ca      	ldrh	r2, [r1, #6]
   e:	4313      	orrs	r3, r2
  10:	890a      	ldrh	r2, [r1, #8]
  12:	4313      	orrs	r3, r2
  14:	894a      	ldrh	r2, [r1, #10]
  16:	4313      	orrs	r3, r2
  18:	898a      	ldrh	r2, [r1, #12]
  1a:	4313      	orrs	r3, r2
  1c:	b29b      	uxth	r3, r3
  1e:	f8a0 3044 	strh.w	r3, [r0, #68]	; 0x44
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:740
             TIM_BDTRInitStruct->TIM_LOCKLevel | TIM_BDTRInitStruct->TIM_DeadTime |
             TIM_BDTRInitStruct->TIM_Break | TIM_BDTRInitStruct->TIM_BreakPolarity |
             TIM_BDTRInitStruct->TIM_AutomaticOutput;

}
  22:	4770      	bx	lr

Disassembly of section .text.TIM_TimeBaseStructInit:

00000000 <TIM_TimeBaseStructInit>:
TIM_TimeBaseStructInit():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:753
* Return         : None
*******************************************************************************/
void TIM_TimeBaseStructInit(TIM_TimeBaseInitTypeDef* TIM_TimeBaseInitStruct)
{
  /* Set the default configuration */
  TIM_TimeBaseInitStruct->TIM_Period = 0xFFFF;
   0:	f04f 33ff 	mov.w	r3, #4294967295
   4:	8083      	strh	r3, [r0, #4]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:754
  TIM_TimeBaseInitStruct->TIM_Prescaler = 0x0000;
   6:	2300      	movs	r3, #0
   8:	8003      	strh	r3, [r0, #0]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:755
  TIM_TimeBaseInitStruct->TIM_ClockDivision = TIM_CKD_DIV1;
   a:	80c3      	strh	r3, [r0, #6]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:756
  TIM_TimeBaseInitStruct->TIM_CounterMode = TIM_CounterMode_Up;
   c:	8043      	strh	r3, [r0, #2]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:757
  TIM_TimeBaseInitStruct->TIM_RepetitionCounter = 0x0000;
   e:	7203      	strb	r3, [r0, #8]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:758
}
  10:	4770      	bx	lr

Disassembly of section .text.TIM_OCStructInit:

00000000 <TIM_OCStructInit>:
TIM_OCStructInit():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:771
* Return         : None
*******************************************************************************/
void TIM_OCStructInit(TIM_OCInitTypeDef* TIM_OCInitStruct)
{
  /* Set the default configuration */
  TIM_OCInitStruct->TIM_OCMode = TIM_OCMode_Timing;
   0:	2300      	movs	r3, #0
   2:	8003      	strh	r3, [r0, #0]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:772
  TIM_OCInitStruct->TIM_OutputState = TIM_OutputState_Disable;
   4:	8043      	strh	r3, [r0, #2]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:773
  TIM_OCInitStruct->TIM_OutputNState = TIM_OutputNState_Disable;
   6:	8083      	strh	r3, [r0, #4]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:774
  TIM_OCInitStruct->TIM_Pulse = 0x0000;
   8:	80c3      	strh	r3, [r0, #6]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:775
  TIM_OCInitStruct->TIM_OCPolarity = TIM_OCPolarity_High;
   a:	8103      	strh	r3, [r0, #8]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:776
  TIM_OCInitStruct->TIM_OCNPolarity = TIM_OCPolarity_High;
   c:	8143      	strh	r3, [r0, #10]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:777
  TIM_OCInitStruct->TIM_OCIdleState = TIM_OCIdleState_Reset;
   e:	8183      	strh	r3, [r0, #12]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:778
  TIM_OCInitStruct->TIM_OCNIdleState = TIM_OCNIdleState_Reset;
  10:	81c3      	strh	r3, [r0, #14]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:779
}
  12:	4770      	bx	lr

Disassembly of section .text.TIM_ICStructInit:

00000000 <TIM_ICStructInit>:
TIM_ICStructInit():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:792
* Return         : None
*******************************************************************************/
void TIM_ICStructInit(TIM_ICInitTypeDef* TIM_ICInitStruct)
{
  /* Set the default configuration */
  TIM_ICInitStruct->TIM_Channel = TIM_Channel_1;
   0:	2300      	movs	r3, #0
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:794
  TIM_ICInitStruct->TIM_ICPolarity = TIM_ICPolarity_Rising;
  TIM_ICInitStruct->TIM_ICSelection = TIM_ICSelection_DirectTI;
   2:	2201      	movs	r2, #1
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:792
* Return         : None
*******************************************************************************/
void TIM_ICStructInit(TIM_ICInitTypeDef* TIM_ICInitStruct)
{
  /* Set the default configuration */
  TIM_ICInitStruct->TIM_Channel = TIM_Channel_1;
   4:	8003      	strh	r3, [r0, #0]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:793
  TIM_ICInitStruct->TIM_ICPolarity = TIM_ICPolarity_Rising;
   6:	8043      	strh	r3, [r0, #2]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:794
  TIM_ICInitStruct->TIM_ICSelection = TIM_ICSelection_DirectTI;
   8:	8082      	strh	r2, [r0, #4]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:795
  TIM_ICInitStruct->TIM_ICPrescaler = TIM_ICPSC_DIV1;
   a:	80c3      	strh	r3, [r0, #6]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:796
  TIM_ICInitStruct->TIM_ICFilter = 0x00;
   c:	8103      	strh	r3, [r0, #8]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:797
}
   e:	4770      	bx	lr

Disassembly of section .text.TIM_BDTRStructInit:

00000000 <TIM_BDTRStructInit>:
TIM_BDTRStructInit():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:810
* Return         : None
*******************************************************************************/
void TIM_BDTRStructInit(TIM_BDTRInitTypeDef* TIM_BDTRInitStruct)
{
  /* Set the default configuration */
  TIM_BDTRInitStruct->TIM_OSSRState = TIM_OSSRState_Disable;
   0:	2300      	movs	r3, #0
   2:	8003      	strh	r3, [r0, #0]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:811
  TIM_BDTRInitStruct->TIM_OSSIState = TIM_OSSIState_Disable;
   4:	8043      	strh	r3, [r0, #2]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:812
  TIM_BDTRInitStruct->TIM_LOCKLevel = TIM_LOCKLevel_OFF;
   6:	8083      	strh	r3, [r0, #4]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:813
  TIM_BDTRInitStruct->TIM_DeadTime = 0x00;
   8:	80c3      	strh	r3, [r0, #6]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:814
  TIM_BDTRInitStruct->TIM_Break = TIM_Break_Disable;
   a:	8103      	strh	r3, [r0, #8]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:815
  TIM_BDTRInitStruct->TIM_BreakPolarity = TIM_BreakPolarity_Low;
   c:	8143      	strh	r3, [r0, #10]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:816
  TIM_BDTRInitStruct->TIM_AutomaticOutput = TIM_AutomaticOutput_Disable;
   e:	8183      	strh	r3, [r0, #12]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:817
}
  10:	4770      	bx	lr

Disassembly of section .text.TIM_Cmd:

00000000 <TIM_Cmd>:
TIM_Cmd():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:834
{
  /* Check the parameters */
  assert_param(IS_TIM_ALL_PERIPH(TIMx));
  assert_param(IS_FUNCTIONAL_STATE(NewState));
  
  if (NewState != DISABLE)
   0:	b121      	cbz	r1, c <TIM_Cmd+0xc>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:837
  {
    /* Enable the TIM Counter */
    TIMx->CR1 |= CR1_CEN_Set;
   2:	8803      	ldrh	r3, [r0, #0]
   4:	b29b      	uxth	r3, r3
   6:	f043 0301 	orr.w	r3, r3, #1
   a:	e004      	b.n	16 <TIM_Cmd+0x16>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:842
  }
  else
  {
    /* Disable the TIM Counter */
    TIMx->CR1 &= CR1_CEN_Reset;
   c:	8803      	ldrh	r3, [r0, #0]
   e:	f023 0301 	bic.w	r3, r3, #1
  12:	059b      	lsls	r3, r3, #22
  14:	0d9b      	lsrs	r3, r3, #22
  16:	8003      	strh	r3, [r0, #0]
  18:	4770      	bx	lr

Disassembly of section .text.TIM_CtrlPWMOutputs:

00000000 <TIM_CtrlPWMOutputs>:
TIM_CtrlPWMOutputs():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:861
{
  /* Check the parameters */
  assert_param(IS_TIM_18_PERIPH(TIMx));
  assert_param(IS_FUNCTIONAL_STATE(NewState));

  if (NewState != DISABLE)
   0:	b139      	cbz	r1, 12 <TIM_CtrlPWMOutputs+0x12>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:864
  {
    /* Enable the TIM Main Output */
    TIMx->BDTR |= BDTR_MOE_Set;
   2:	f8b0 3044 	ldrh.w	r3, [r0, #68]	; 0x44
   6:	ea6f 4343 	mvn.w	r3, r3, lsl #17
   a:	ea6f 4353 	mvn.w	r3, r3, lsr #17
   e:	b29b      	uxth	r3, r3
  10:	e003      	b.n	1a <TIM_CtrlPWMOutputs+0x1a>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:869
  }
  else
  {
    /* Disable the TIM Main Output */
    TIMx->BDTR &= BDTR_MOE_Reset;
  12:	f8b0 3044 	ldrh.w	r3, [r0, #68]	; 0x44
  16:	045b      	lsls	r3, r3, #17
  18:	0c5b      	lsrs	r3, r3, #17
  1a:	f8a0 3044 	strh.w	r3, [r0, #68]	; 0x44
  1e:	4770      	bx	lr

Disassembly of section .text.TIM_ITConfig:

00000000 <TIM_ITConfig>:
TIM_ITConfig():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:901
  assert_param(IS_TIM_ALL_PERIPH(TIMx));
  assert_param(IS_TIM_IT(TIM_IT));
  assert_param(IS_TIM_PERIPH_IT((TIMx), (TIM_IT)));
  assert_param(IS_FUNCTIONAL_STATE(NewState));
  
  if (NewState != DISABLE)
   0:	b11a      	cbz	r2, a <TIM_ITConfig+0xa>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:904
  {
    /* Enable the Interrupt sources */
    TIMx->DIER |= TIM_IT;
   2:	8983      	ldrh	r3, [r0, #12]
   4:	b29b      	uxth	r3, r3
   6:	4319      	orrs	r1, r3
   8:	e003      	b.n	12 <TIM_ITConfig+0x12>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:909
  }
  else
  {
    /* Disable the Interrupt sources */
    TIMx->DIER &= (u16)~TIM_IT;
   a:	8983      	ldrh	r3, [r0, #12]
   c:	b29b      	uxth	r3, r3
   e:	ea23 0101 	bic.w	r1, r3, r1
  12:	8181      	strh	r1, [r0, #12]
  14:	4770      	bx	lr

Disassembly of section .text.TIM_GenerateEvent:

00000000 <TIM_GenerateEvent>:
TIM_GenerateEvent():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:936
  assert_param(IS_TIM_ALL_PERIPH(TIMx));
  assert_param(IS_TIM_EVENT_SOURCE(TIM_EventSource));
  assert_param(IS_TIM_PERIPH_EVENT((TIMx), (TIM_EventSource)));

  /* Set the event sources */
  TIMx->EGR = TIM_EventSource;
   0:	8281      	strh	r1, [r0, #20]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:937
}
   2:	4770      	bx	lr

Disassembly of section .text.TIM_DMAConfig:

00000000 <TIM_DMAConfig>:
TIM_DMAConfig():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:967
  assert_param(IS_TIM_123458_PERIPH(TIMx));
  assert_param(IS_TIM_DMA_BASE(TIM_DMABase));
  assert_param(IS_TIM_DMA_LENGTH(TIM_DMABurstLength));

  /* Set the DMA Base and the DMA Burst Length */
  TIMx->DCR = TIM_DMABase | TIM_DMABurstLength;
   0:	430a      	orrs	r2, r1
   2:	f8a0 2048 	strh.w	r2, [r0, #72]	; 0x48
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:968
}
   6:	4770      	bx	lr

Disassembly of section .text.TIM_DMACmd:

00000000 <TIM_DMACmd>:
TIM_DMACmd():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:996
  assert_param(IS_TIM_ALL_PERIPH(TIMx));
  assert_param(IS_TIM_DMA_SOURCE(TIM_DMASource));
  assert_param(IS_TIM_PERIPH_DMA(TIMx, TIM_DMASource));
  assert_param(IS_FUNCTIONAL_STATE(NewState));
  
  if (NewState != DISABLE)
   0:	b11a      	cbz	r2, a <TIM_DMACmd+0xa>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:999
  {
    /* Enable the DMA sources */
    TIMx->DIER |= TIM_DMASource; 
   2:	8983      	ldrh	r3, [r0, #12]
   4:	b29b      	uxth	r3, r3
   6:	4319      	orrs	r1, r3
   8:	e003      	b.n	12 <TIM_DMACmd+0x12>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1004
  }
  else
  {
    /* Disable the DMA sources */
    TIMx->DIER &= (u16)~TIM_DMASource;
   a:	8983      	ldrh	r3, [r0, #12]
   c:	b29b      	uxth	r3, r3
   e:	ea23 0101 	bic.w	r1, r3, r1
  12:	8181      	strh	r1, [r0, #12]
  14:	4770      	bx	lr

Disassembly of section .text.TIM_InternalClockConfig:

00000000 <TIM_InternalClockConfig>:
TIM_InternalClockConfig():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1022
{
  /* Check the parameters */
  assert_param(IS_TIM_123458_PERIPH(TIMx));

  /* Disable slave mode to clock the prescaler directly with the internal clock */
  TIMx->SMCR &=  SMCR_SMS_Mask;
   0:	8903      	ldrh	r3, [r0, #8]
   2:	f023 0307 	bic.w	r3, r3, #7
   6:	041b      	lsls	r3, r3, #16
   8:	0c1b      	lsrs	r3, r3, #16
   a:	8103      	strh	r3, [r0, #8]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1023
}
   c:	4770      	bx	lr

Disassembly of section .text.TIM_ETRConfig:

00000000 <TIM_ETRConfig>:
TIM_ETRConfig():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1203
* Output         : None
* Return         : None
*******************************************************************************/
void TIM_ETRConfig(TIM_TypeDef* TIMx, u16 TIM_ExtTRGPrescaler, u16 TIM_ExtTRGPolarity,
                   u16 ExtTRGFilter)
{
   0:	b510      	push	{r4, lr}
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1212
  assert_param(IS_TIM_123458_PERIPH(TIMx));
  assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
  assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
  assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));

  tmpsmcr = TIMx->SMCR;
   2:	8904      	ldrh	r4, [r0, #8]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1215

  /* Reset the ETR Bits */
  tmpsmcr &= SMCR_ETR_Mask;
   4:	b2e4      	uxtb	r4, r4
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1218

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= TIM_ExtTRGPrescaler | TIM_ExtTRGPolarity | (u16)(ExtTRGFilter << 8);
   6:	ea41 0404 	orr.w	r4, r1, r4
   a:	ea42 0404 	orr.w	r4, r2, r4
   e:	ea44 2403 	orr.w	r4, r4, r3, lsl #8
  12:	b2a4      	uxth	r4, r4
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1221

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
  14:	8104      	strh	r4, [r0, #8]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1222
}
  16:	bd10      	pop	{r4, pc}

Disassembly of section .text.TIM_ETRClockMode2Config:

00000000 <TIM_ETRClockMode2Config>:
TIM_ETRClockMode2Config():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1167
* Output         : None
* Return         : None
*******************************************************************************/
void TIM_ETRClockMode2Config(TIM_TypeDef* TIMx, u16 TIM_ExtTRGPrescaler, 
                             u16 TIM_ExtTRGPolarity, u16 ExtTRGFilter)
{
   0:	b510      	push	{r4, lr}
   2:	4604      	mov	r4, r0
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1175
  assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
  assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
  assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));

  /* Configure the ETR Clock source */
  TIM_ETRConfig(TIMx, TIM_ExtTRGPrescaler, TIM_ExtTRGPolarity, ExtTRGFilter);
   4:	f7ff fffe 	bl	0 <TIM_ETRClockMode2Config>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1178

  /* Enable the External clock mode2 */
  TIMx->SMCR |= SMCR_ECE_Set;
   8:	8923      	ldrh	r3, [r4, #8]
   a:	b29b      	uxth	r3, r3
   c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
  10:	8123      	strh	r3, [r4, #8]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1179
}
  12:	bd10      	pop	{r4, pc}

Disassembly of section .text.TIM_ETRClockMode1Config:

00000000 <TIM_ETRClockMode1Config>:
TIM_ETRClockMode1Config():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1117
* Output         : None
* Return         : None
*******************************************************************************/
void TIM_ETRClockMode1Config(TIM_TypeDef* TIMx, u16 TIM_ExtTRGPrescaler, u16 TIM_ExtTRGPolarity,
                             u16 ExtTRGFilter)
{
   0:	b510      	push	{r4, lr}
   2:	4604      	mov	r4, r0
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1127
  assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
  assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
  assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));

  /* Configure the ETR Clock source */
  TIM_ETRConfig(TIMx, TIM_ExtTRGPrescaler, TIM_ExtTRGPolarity, ExtTRGFilter);
   4:	f7ff fffe 	bl	0 <TIM_ETRClockMode1Config>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1130
  
  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
   8:	8923      	ldrh	r3, [r4, #8]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1135

  /* Reset the SMS Bits */
  tmpsmcr &= SMCR_SMS_Mask;
  /* Select the External clock mode1 */
  tmpsmcr |= TIM_SlaveMode_External1;
   a:	f023 0377 	bic.w	r3, r3, #119	; 0x77
   e:	041b      	lsls	r3, r3, #16
  10:	0c1b      	lsrs	r3, r3, #16
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1139

  /* Select the Trigger selection : ETRF */
  tmpsmcr &= SMCR_TS_Mask;
  tmpsmcr |= TIM_TS_ETRF;
  12:	f043 0377 	orr.w	r3, r3, #119	; 0x77
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1142

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
  16:	8123      	strh	r3, [r4, #8]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1143
}
  18:	bd10      	pop	{r4, pc}

Disassembly of section .text.TIM_PrescalerConfig:

00000000 <TIM_PrescalerConfig>:
TIM_PrescalerConfig():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1245
  /* Check the parameters */
  assert_param(IS_TIM_ALL_PERIPH(TIMx));
  assert_param(IS_TIM_PRESCALER_RELOAD(TIM_PSCReloadMode));

  /* Set the Prescaler value */
  TIMx->PSC = Prescaler;
   0:	8501      	strh	r1, [r0, #40]	; 0x28
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1248

  /* Set or reset the UG Bit */
  TIMx->EGR = TIM_PSCReloadMode;
   2:	8282      	strh	r2, [r0, #20]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1249
}
   4:	4770      	bx	lr

Disassembly of section .text.TIM_CounterModeConfig:

00000000 <TIM_CounterModeConfig>:
TIM_CounterModeConfig():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1274

  /* Check the parameters */
  assert_param(IS_TIM_123458_PERIPH(TIMx));
  assert_param(IS_TIM_COUNTER_MODE(TIM_CounterMode));

  tmpcr1 = TIMx->CR1;
   0:	8803      	ldrh	r3, [r0, #0]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1277

  /* Reset the CMS and DIR Bits */
  tmpcr1 &= CR1_CounterMode_Mask;
   2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
   6:	059b      	lsls	r3, r3, #22
   8:	0d9b      	lsrs	r3, r3, #22
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1280

  /* Set the Counter Mode */
  tmpcr1 |= TIM_CounterMode;
   a:	ea41 0303 	orr.w	r3, r1, r3
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1283

  /* Write to TIMx CR1 register */
  TIMx->CR1 = tmpcr1;
   e:	8003      	strh	r3, [r0, #0]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1284
}
  10:	4770      	bx	lr

Disassembly of section .text.TIM_SelectInputTrigger:

00000000 <TIM_SelectInputTrigger>:
TIM_SelectInputTrigger():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1313
  /* Check the parameters */
  assert_param(IS_TIM_123458_PERIPH(TIMx));
  assert_param(IS_TIM_TRIGGER_SELECTION(TIM_InputTriggerSource));

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
   0:	8903      	ldrh	r3, [r0, #8]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1316

  /* Reset the TS Bits */
  tmpsmcr &= SMCR_TS_Mask;
   2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
   6:	041b      	lsls	r3, r3, #16
   8:	0c1b      	lsrs	r3, r3, #16
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1319

  /* Set the Input Trigger source */
  tmpsmcr |= TIM_InputTriggerSource;
   a:	ea41 0303 	orr.w	r3, r1, r3
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1322

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
   e:	8103      	strh	r3, [r0, #8]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1323
}
  10:	4770      	bx	lr

Disassembly of section .text.TIM_TIxExternalClockConfig:

00000000 <TIM_TIxExternalClockConfig>:
TIM_TIxExternalClockConfig():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1071
* Output         : None
* Return         : None
*******************************************************************************/
void TIM_TIxExternalClockConfig(TIM_TypeDef* TIMx, u16 TIM_TIxExternalCLKSource,
                                u16 TIM_ICPolarity, u16 ICFilter)
{
   0:	b538      	push	{r3, r4, r5, lr}
   2:	460d      	mov	r5, r1
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1079
  assert_param(IS_TIM_TIXCLK_SOURCE(TIM_TIxExternalCLKSource));
  assert_param(IS_TIM_IC_POLARITY(TIM_ICPolarity));
  assert_param(IS_TIM_IC_FILTER(ICFilter));

  /* Configure the Timer Input Clock Source */
  if (TIM_TIxExternalCLKSource == TIM_TIxExternalCLK1Source_TI2)
   4:	2d60      	cmp	r5, #96	; 0x60
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1071
* Output         : None
* Return         : None
*******************************************************************************/
void TIM_TIxExternalClockConfig(TIM_TypeDef* TIMx, u16 TIM_TIxExternalCLKSource,
                                u16 TIM_ICPolarity, u16 ICFilter)
{
   6:	4604      	mov	r4, r0
   8:	4611      	mov	r1, r2
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1079
  assert_param(IS_TIM_TIXCLK_SOURCE(TIM_TIxExternalCLKSource));
  assert_param(IS_TIM_IC_POLARITY(TIM_ICPolarity));
  assert_param(IS_TIM_IC_FILTER(ICFilter));

  /* Configure the Timer Input Clock Source */
  if (TIM_TIxExternalCLKSource == TIM_TIxExternalCLK1Source_TI2)
   a:	d103      	bne.n	14 <TIM_TIxExternalClockConfig+0x14>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1081
  {
    TI2_Config(TIMx, TIM_ICPolarity, TIM_ICSelection_DirectTI, ICFilter);
   c:	2201      	movs	r2, #1
   e:	f7ff fffe 	bl	0 <TIM_TIxExternalClockConfig>
  12:	e002      	b.n	1a <TIM_TIxExternalClockConfig+0x1a>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1085
  }
  else
  {
    TI1_Config(TIMx, TIM_ICPolarity, TIM_ICSelection_DirectTI, ICFilter);
  14:	2201      	movs	r2, #1
  16:	f7ff fffe 	bl	0 <TIM_TIxExternalClockConfig>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1089
  }

  /* Select the Trigger source */
  TIM_SelectInputTrigger(TIMx, TIM_TIxExternalCLKSource);
  1a:	4620      	mov	r0, r4
  1c:	4629      	mov	r1, r5
  1e:	f7ff fffe 	bl	0 <TIM_TIxExternalClockConfig>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1092

  /* Select the External clock mode1 */
  TIMx->SMCR |= TIM_SlaveMode_External1;
  22:	8923      	ldrh	r3, [r4, #8]
  24:	b29b      	uxth	r3, r3
  26:	f043 0307 	orr.w	r3, r3, #7
  2a:	8123      	strh	r3, [r4, #8]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1093
}
  2c:	bd38      	pop	{r3, r4, r5, pc}

Disassembly of section .text.TIM_ITRxExternalClockConfig:

00000000 <TIM_ITRxExternalClockConfig>:
TIM_ITRxExternalClockConfig():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1039
*                       - TIM_TS_ITR3: Internal Trigger 3
* Output         : None
* Return         : None
*******************************************************************************/
void TIM_ITRxExternalClockConfig(TIM_TypeDef* TIMx, u16 TIM_InputTriggerSource)
{
   0:	b510      	push	{r4, lr}
   2:	4604      	mov	r4, r0
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1045
  /* Check the parameters */
  assert_param(IS_TIM_123458_PERIPH(TIMx));
  assert_param(IS_TIM_INTERNAL_TRIGGER_SELECTION(TIM_InputTriggerSource));

  /* Select the Internal Trigger */
  TIM_SelectInputTrigger(TIMx, TIM_InputTriggerSource);
   4:	f7ff fffe 	bl	0 <TIM_ITRxExternalClockConfig>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1048

  /* Select the External clock mode1 */
  TIMx->SMCR |= TIM_SlaveMode_External1;
   8:	8923      	ldrh	r3, [r4, #8]
   a:	b29b      	uxth	r3, r3
   c:	f043 0307 	orr.w	r3, r3, #7
  10:	8123      	strh	r3, [r4, #8]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1049
}
  12:	bd10      	pop	{r4, pc}

Disassembly of section .text.TIM_EncoderInterfaceConfig:

00000000 <TIM_EncoderInterfaceConfig>:
TIM_EncoderInterfaceConfig():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1351
* Output         : None
* Return         : None
*******************************************************************************/
void TIM_EncoderInterfaceConfig(TIM_TypeDef* TIMx, u16 TIM_EncoderMode,
                                u16 TIM_IC1Polarity, u16 TIM_IC2Polarity)
{
   0:	b570      	push	{r4, r5, r6, lr}
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1363
  assert_param(IS_TIM_ENCODER_MODE(TIM_EncoderMode));
  assert_param(IS_TIM_IC_POLARITY(TIM_IC1Polarity));
  assert_param(IS_TIM_IC_POLARITY(TIM_IC2Polarity));

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
   2:	8904      	ldrh	r4, [r0, #8]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1366

  /* Get the TIMx CCMR1 register value */
  tmpccmr1 = TIMx->CCMR1;
   4:	8b06      	ldrh	r6, [r0, #24]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1369

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
   6:	8c05      	ldrh	r5, [r0, #32]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1376
  /* Set the encoder Mode */
  tmpsmcr &= SMCR_SMS_Mask;
  tmpsmcr |= TIM_EncoderMode;

  /* Select the Capture Compare 1 and the Capture Compare 2 as input */
  tmpccmr1 &= CCMR_CC13S_Mask & CCMR_CC24S_Mask;
   8:	f426 7640 	bic.w	r6, r6, #768	; 0x300
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1380
  tmpccmr1 |= CCMR_TI13Direct_Set | CCMR_TI24Direct_Set;

  /* Set the TI1 and the TI2 Polarities */
  tmpccer &= CCER_CC1P_Reset & CCER_CC2P_Reset;
   c:	f025 0522 	bic.w	r5, r5, #34	; 0x22
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1376
  /* Set the encoder Mode */
  tmpsmcr &= SMCR_SMS_Mask;
  tmpsmcr |= TIM_EncoderMode;

  /* Select the Capture Compare 1 and the Capture Compare 2 as input */
  tmpccmr1 &= CCMR_CC13S_Mask & CCMR_CC24S_Mask;
  10:	f026 0603 	bic.w	r6, r6, #3
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1380
  tmpccmr1 |= CCMR_TI13Direct_Set | CCMR_TI24Direct_Set;

  /* Set the TI1 and the TI2 Polarities */
  tmpccer &= CCER_CC1P_Reset & CCER_CC2P_Reset;
  14:	042d      	lsls	r5, r5, #16
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1372

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;

  /* Set the encoder Mode */
  tmpsmcr &= SMCR_SMS_Mask;
  16:	f024 0407 	bic.w	r4, r4, #7
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1376
  tmpsmcr |= TIM_EncoderMode;

  /* Select the Capture Compare 1 and the Capture Compare 2 as input */
  tmpccmr1 &= CCMR_CC13S_Mask & CCMR_CC24S_Mask;
  1a:	0436      	lsls	r6, r6, #16
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1380
  tmpccmr1 |= CCMR_TI13Direct_Set | CCMR_TI24Direct_Set;

  /* Set the TI1 and the TI2 Polarities */
  tmpccer &= CCER_CC1P_Reset & CCER_CC2P_Reset;
  1c:	0c2d      	lsrs	r5, r5, #16
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1372

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;

  /* Set the encoder Mode */
  tmpsmcr &= SMCR_SMS_Mask;
  1e:	0424      	lsls	r4, r4, #16
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1376
  tmpsmcr |= TIM_EncoderMode;

  /* Select the Capture Compare 1 and the Capture Compare 2 as input */
  tmpccmr1 &= CCMR_CC13S_Mask & CCMR_CC24S_Mask;
  20:	0c36      	lsrs	r6, r6, #16
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1381
  tmpccmr1 |= CCMR_TI13Direct_Set | CCMR_TI24Direct_Set;

  /* Set the TI1 and the TI2 Polarities */
  tmpccer &= CCER_CC1P_Reset & CCER_CC2P_Reset;
  tmpccer |= (TIM_IC1Polarity | (u16)(TIM_IC2Polarity << 4));
  22:	ea42 0505 	orr.w	r5, r2, r5
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1372

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;

  /* Set the encoder Mode */
  tmpsmcr &= SMCR_SMS_Mask;
  26:	0c24      	lsrs	r4, r4, #16
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1377
  tmpsmcr |= TIM_EncoderMode;

  /* Select the Capture Compare 1 and the Capture Compare 2 as input */
  tmpccmr1 &= CCMR_CC13S_Mask & CCMR_CC24S_Mask;
  tmpccmr1 |= CCMR_TI13Direct_Set | CCMR_TI24Direct_Set;
  28:	f446 7680 	orr.w	r6, r6, #256	; 0x100
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1381

  /* Set the TI1 and the TI2 Polarities */
  tmpccer &= CCER_CC1P_Reset & CCER_CC2P_Reset;
  tmpccer |= (TIM_IC1Polarity | (u16)(TIM_IC2Polarity << 4));
  2c:	ea45 1503 	orr.w	r5, r5, r3, lsl #4
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1373
  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;

  /* Set the encoder Mode */
  tmpsmcr &= SMCR_SMS_Mask;
  tmpsmcr |= TIM_EncoderMode;
  30:	4321      	orrs	r1, r4
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1377

  /* Select the Capture Compare 1 and the Capture Compare 2 as input */
  tmpccmr1 &= CCMR_CC13S_Mask & CCMR_CC24S_Mask;
  tmpccmr1 |= CCMR_TI13Direct_Set | CCMR_TI24Direct_Set;
  32:	f046 0601 	orr.w	r6, r6, #1
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1381

  /* Set the TI1 and the TI2 Polarities */
  tmpccer &= CCER_CC1P_Reset & CCER_CC2P_Reset;
  tmpccer |= (TIM_IC1Polarity | (u16)(TIM_IC2Polarity << 4));
  36:	b2ad      	uxth	r5, r5
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1384

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
  38:	8101      	strh	r1, [r0, #8]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1387

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmr1;
  3a:	8306      	strh	r6, [r0, #24]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1390

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
  3c:	8405      	strh	r5, [r0, #32]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1391
}
  3e:	bd70      	pop	{r4, r5, r6, pc}

Disassembly of section .text.TIM_ForcedOC1Config:

00000000 <TIM_ForcedOC1Config>:
TIM_ForcedOC1Config():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1415

  /* Check the parameters */
  assert_param(IS_TIM_123458_PERIPH(TIMx));
  assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));

  tmpccmr1 = TIMx->CCMR1;
   0:	8b03      	ldrh	r3, [r0, #24]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1418

  /* Reset the OC1M Bits */
  tmpccmr1 &= CCMR_OC13M_Mask;
   2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
   6:	041b      	lsls	r3, r3, #16
   8:	0c1b      	lsrs	r3, r3, #16
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1421

  /* Configure The Forced output Mode */
  tmpccmr1 |= TIM_ForcedAction;
   a:	ea41 0303 	orr.w	r3, r1, r3
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1424

  /* Write to TIMx CCMR1 register */
  TIMx->CCMR1 = tmpccmr1;
   e:	8303      	strh	r3, [r0, #24]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1425
}
  10:	4770      	bx	lr

Disassembly of section .text.TIM_ForcedOC2Config:

00000000 <TIM_ForcedOC2Config>:
TIM_ForcedOC2Config():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1449

  /* Check the parameters */
  assert_param(IS_TIM_123458_PERIPH(TIMx));
  assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));

  tmpccmr1 = TIMx->CCMR1;
   0:	8b03      	ldrh	r3, [r0, #24]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1452

  /* Reset the OC2M Bits */
  tmpccmr1 &= CCMR_OC24M_Mask;
   2:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
   6:	041b      	lsls	r3, r3, #16
   8:	0c1b      	lsrs	r3, r3, #16
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1455

  /* Configure The Forced output Mode */
  tmpccmr1 |= (u16)(TIM_ForcedAction << 8);
   a:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
   e:	b29b      	uxth	r3, r3
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1458

  /* Write to TIMx CCMR1 register */
  TIMx->CCMR1 = tmpccmr1;
  10:	8303      	strh	r3, [r0, #24]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1459
}
  12:	4770      	bx	lr

Disassembly of section .text.TIM_ForcedOC3Config:

00000000 <TIM_ForcedOC3Config>:
TIM_ForcedOC3Config():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1483

  /* Check the parameters */
  assert_param(IS_TIM_123458_PERIPH(TIMx));
  assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));

  tmpccmr2 = TIMx->CCMR2;
   0:	8b83      	ldrh	r3, [r0, #28]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1486

  /* Reset the OC1M Bits */
  tmpccmr2 &= CCMR_OC13M_Mask;
   2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
   6:	041b      	lsls	r3, r3, #16
   8:	0c1b      	lsrs	r3, r3, #16
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1489

  /* Configure The Forced output Mode */
  tmpccmr2 |= TIM_ForcedAction;
   a:	ea41 0303 	orr.w	r3, r1, r3
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1492

  /* Write to TIMx CCMR2 register */
  TIMx->CCMR2 = tmpccmr2;
   e:	8383      	strh	r3, [r0, #28]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1493
}
  10:	4770      	bx	lr

Disassembly of section .text.TIM_ForcedOC4Config:

00000000 <TIM_ForcedOC4Config>:
TIM_ForcedOC4Config():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1516
  u16 tmpccmr2 = 0;

  /* Check the parameters */
  assert_param(IS_TIM_123458_PERIPH(TIMx));
  assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
  tmpccmr2 = TIMx->CCMR2;
   0:	8b83      	ldrh	r3, [r0, #28]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1519

  /* Reset the OC2M Bits */
  tmpccmr2 &= CCMR_OC24M_Mask;
   2:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
   6:	041b      	lsls	r3, r3, #16
   8:	0c1b      	lsrs	r3, r3, #16
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1522

  /* Configure The Forced output Mode */
  tmpccmr2 |= (u16)(TIM_ForcedAction << 8);
   a:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
   e:	b29b      	uxth	r3, r3
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1525

  /* Write to TIMx CCMR2 register */
  TIMx->CCMR2 = tmpccmr2;
  10:	8383      	strh	r3, [r0, #28]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1526
}
  12:	4770      	bx	lr

Disassembly of section .text.TIM_ARRPreloadConfig:

00000000 <TIM_ARRPreloadConfig>:
TIM_ARRPreloadConfig():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1544
{
  /* Check the parameters */
  assert_param(IS_TIM_ALL_PERIPH(TIMx));
  assert_param(IS_FUNCTIONAL_STATE(NewState));

  if (NewState != DISABLE)
   0:	b121      	cbz	r1, c <TIM_ARRPreloadConfig+0xc>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1547
  {
    /* Set the ARR Preload Bit */
    TIMx->CR1 |= CR1_ARPE_Set;
   2:	8803      	ldrh	r3, [r0, #0]
   4:	b29b      	uxth	r3, r3
   6:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   a:	e004      	b.n	16 <TIM_ARRPreloadConfig+0x16>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1552
  }
  else
  {
    /* Reset the ARR Preload Bit */
    TIMx->CR1 &= CR1_ARPE_Reset;
   c:	8803      	ldrh	r3, [r0, #0]
   e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  12:	059b      	lsls	r3, r3, #22
  14:	0d9b      	lsrs	r3, r3, #22
  16:	8003      	strh	r3, [r0, #0]
  18:	4770      	bx	lr

Disassembly of section .text.TIM_SelectCOM:

00000000 <TIM_SelectCOM>:
TIM_SelectCOM():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1571
{
  /* Check the parameters */
  assert_param(IS_TIM_18_PERIPH(TIMx));
  assert_param(IS_FUNCTIONAL_STATE(NewState));

  if (NewState != DISABLE)
   0:	b121      	cbz	r1, c <TIM_SelectCOM+0xc>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1574
  {
    /* Set the COM Bit */
    TIMx->CR2 |= CR2_CCUS_Set;
   2:	8883      	ldrh	r3, [r0, #4]
   4:	b29b      	uxth	r3, r3
   6:	f043 0304 	orr.w	r3, r3, #4
   a:	e004      	b.n	16 <TIM_SelectCOM+0x16>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1579
  }
  else
  {
    /* Reset the COM Bit */
    TIMx->CR2 &= CR2_CCUS_Reset;
   c:	8883      	ldrh	r3, [r0, #4]
   e:	f023 0304 	bic.w	r3, r3, #4
  12:	041b      	lsls	r3, r3, #16
  14:	0c1b      	lsrs	r3, r3, #16
  16:	8083      	strh	r3, [r0, #4]
  18:	4770      	bx	lr

Disassembly of section .text.TIM_SelectCCDMA:

00000000 <TIM_SelectCCDMA>:
TIM_SelectCCDMA():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1599
{
  /* Check the parameters */
  assert_param(IS_TIM_123458_PERIPH(TIMx));
  assert_param(IS_FUNCTIONAL_STATE(NewState));

  if (NewState != DISABLE)
   0:	b121      	cbz	r1, c <TIM_SelectCCDMA+0xc>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1602
  {
    /* Set the CCDS Bit */
    TIMx->CR2 |= CR2_CCDS_Set;
   2:	8883      	ldrh	r3, [r0, #4]
   4:	b29b      	uxth	r3, r3
   6:	f043 0308 	orr.w	r3, r3, #8
   a:	e004      	b.n	16 <TIM_SelectCCDMA+0x16>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1607
  }
  else
  {
    /* Reset the CCDS Bit */
    TIMx->CR2 &= CR2_CCDS_Reset;
   c:	8883      	ldrh	r3, [r0, #4]
   e:	f023 0308 	bic.w	r3, r3, #8
  12:	041b      	lsls	r3, r3, #16
  14:	0c1b      	lsrs	r3, r3, #16
  16:	8083      	strh	r3, [r0, #4]
  18:	4770      	bx	lr

Disassembly of section .text.TIM_CCPreloadControl:

00000000 <TIM_CCPreloadControl>:
TIM_CCPreloadControl():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1627
{ 
  /* Check the parameters */
  assert_param(IS_TIM_18_PERIPH(TIMx));
  assert_param(IS_FUNCTIONAL_STATE(NewState));

  if (NewState != DISABLE)
   0:	b121      	cbz	r1, c <TIM_CCPreloadControl+0xc>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1630
  {
    /* Set the CCPC Bit */
    TIMx->CR2 |= CR2_CCPC_Set;
   2:	8883      	ldrh	r3, [r0, #4]
   4:	b29b      	uxth	r3, r3
   6:	f043 0301 	orr.w	r3, r3, #1
   a:	e004      	b.n	16 <TIM_CCPreloadControl+0x16>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1635
  }
  else
  {
    /* Reset the CCPC Bit */
    TIMx->CR2 &= CR2_CCPC_Reset;
   c:	8883      	ldrh	r3, [r0, #4]
   e:	f023 0301 	bic.w	r3, r3, #1
  12:	041b      	lsls	r3, r3, #16
  14:	0c1b      	lsrs	r3, r3, #16
  16:	8083      	strh	r3, [r0, #4]
  18:	4770      	bx	lr

Disassembly of section .text.TIM_OC1PreloadConfig:

00000000 <TIM_OC1PreloadConfig>:
TIM_OC1PreloadConfig():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1660

  /* Check the parameters */
  assert_param(IS_TIM_123458_PERIPH(TIMx));
  assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));

  tmpccmr1 = TIMx->CCMR1;
   0:	8b03      	ldrh	r3, [r0, #24]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1663

  /* Reset the OC1PE Bit */
  tmpccmr1 &= CCMR_OC13PE_Reset;
   2:	f023 0308 	bic.w	r3, r3, #8
   6:	041b      	lsls	r3, r3, #16
   8:	0c1b      	lsrs	r3, r3, #16
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1666

  /* Enable or Disable the Output Compare Preload feature */
  tmpccmr1 |= TIM_OCPreload;
   a:	ea41 0303 	orr.w	r3, r1, r3
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1669

  /* Write to TIMx CCMR1 register */
  TIMx->CCMR1 = tmpccmr1;
   e:	8303      	strh	r3, [r0, #24]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1670
}
  10:	4770      	bx	lr

Disassembly of section .text.TIM_OC2PreloadConfig:

00000000 <TIM_OC2PreloadConfig>:
TIM_OC2PreloadConfig():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1693

  /* Check the parameters */
  assert_param(IS_TIM_123458_PERIPH(TIMx));
  assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));

  tmpccmr1 = TIMx->CCMR1;
   0:	8b03      	ldrh	r3, [r0, #24]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1696

  /* Reset the OC2PE Bit */
  tmpccmr1 &= CCMR_OC24PE_Reset;
   2:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
   6:	041b      	lsls	r3, r3, #16
   8:	0c1b      	lsrs	r3, r3, #16
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1699

  /* Enable or Disable the Output Compare Preload feature */
  tmpccmr1 |= (u16)(TIM_OCPreload << 8);
   a:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
   e:	b29b      	uxth	r3, r3
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1702

  /* Write to TIMx CCMR1 register */
  TIMx->CCMR1 = tmpccmr1;
  10:	8303      	strh	r3, [r0, #24]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1703
}
  12:	4770      	bx	lr

Disassembly of section .text.TIM_OC3PreloadConfig:

00000000 <TIM_OC3PreloadConfig>:
TIM_OC3PreloadConfig():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1726

  /* Check the parameters */
  assert_param(IS_TIM_123458_PERIPH(TIMx));
  assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));

  tmpccmr2 = TIMx->CCMR2;
   0:	8b83      	ldrh	r3, [r0, #28]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1729

  /* Reset the OC3PE Bit */
  tmpccmr2 &= CCMR_OC13PE_Reset;
   2:	f023 0308 	bic.w	r3, r3, #8
   6:	041b      	lsls	r3, r3, #16
   8:	0c1b      	lsrs	r3, r3, #16
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1732

  /* Enable or Disable the Output Compare Preload feature */
  tmpccmr2 |= TIM_OCPreload;
   a:	ea41 0303 	orr.w	r3, r1, r3
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1735

  /* Write to TIMx CCMR2 register */
  TIMx->CCMR2 = tmpccmr2;
   e:	8383      	strh	r3, [r0, #28]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1736
}
  10:	4770      	bx	lr

Disassembly of section .text.TIM_OC4PreloadConfig:

00000000 <TIM_OC4PreloadConfig>:
TIM_OC4PreloadConfig():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1759

  /* Check the parameters */
  assert_param(IS_TIM_123458_PERIPH(TIMx));
  assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));

  tmpccmr2 = TIMx->CCMR2;
   0:	8b83      	ldrh	r3, [r0, #28]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1762

  /* Reset the OC4PE Bit */
  tmpccmr2 &= CCMR_OC24PE_Reset;
   2:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
   6:	041b      	lsls	r3, r3, #16
   8:	0c1b      	lsrs	r3, r3, #16
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1765

  /* Enable or Disable the Output Compare Preload feature */
  tmpccmr2 |= (u16)(TIM_OCPreload << 8);
   a:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
   e:	b29b      	uxth	r3, r3
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1768

  /* Write to TIMx CCMR2 register */
  TIMx->CCMR2 = tmpccmr2;
  10:	8383      	strh	r3, [r0, #28]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1769
}
  12:	4770      	bx	lr

Disassembly of section .text.TIM_OC1FastConfig:

00000000 <TIM_OC1FastConfig>:
TIM_OC1FastConfig():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1792
  /* Check the parameters */
  assert_param(IS_TIM_123458_PERIPH(TIMx));
  assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));

  /* Get the TIMx CCMR1 register value */
  tmpccmr1 = TIMx->CCMR1;
   0:	8b03      	ldrh	r3, [r0, #24]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1795

  /* Reset the OC1FE Bit */
  tmpccmr1 &= CCMR_OC13FE_Reset;
   2:	f023 0304 	bic.w	r3, r3, #4
   6:	041b      	lsls	r3, r3, #16
   8:	0c1b      	lsrs	r3, r3, #16
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1798

  /* Enable or Disable the Output Compare Fast Bit */
  tmpccmr1 |= TIM_OCFast;
   a:	ea41 0303 	orr.w	r3, r1, r3
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1801

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmr1;
   e:	8303      	strh	r3, [r0, #24]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1802
}
  10:	4770      	bx	lr

Disassembly of section .text.TIM_OC2FastConfig:

00000000 <TIM_OC2FastConfig>:
TIM_OC2FastConfig():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1825
  /* Check the parameters */
  assert_param(IS_TIM_123458_PERIPH(TIMx));
  assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));

  /* Get the TIMx CCMR1 register value */
  tmpccmr1 = TIMx->CCMR1;
   0:	8b03      	ldrh	r3, [r0, #24]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1828

  /* Reset the OC2FE Bit */
  tmpccmr1 &= CCMR_OC24FE_Reset;
   2:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
   6:	041b      	lsls	r3, r3, #16
   8:	0c1b      	lsrs	r3, r3, #16
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1831

  /* Enable or Disable the Output Compare Fast Bit */
  tmpccmr1 |= (u16)(TIM_OCFast << 8);
   a:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
   e:	b29b      	uxth	r3, r3
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1834

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmr1;
  10:	8303      	strh	r3, [r0, #24]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1835
}
  12:	4770      	bx	lr

Disassembly of section .text.TIM_OC3FastConfig:

00000000 <TIM_OC3FastConfig>:
TIM_OC3FastConfig():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1858
  /* Check the parameters */
  assert_param(IS_TIM_123458_PERIPH(TIMx));
  assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));

  /* Get the TIMx CCMR2 register value */
  tmpccmr2 = TIMx->CCMR2;
   0:	8b83      	ldrh	r3, [r0, #28]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1861

  /* Reset the OC3FE Bit */
  tmpccmr2 &= CCMR_OC13FE_Reset;
   2:	f023 0304 	bic.w	r3, r3, #4
   6:	041b      	lsls	r3, r3, #16
   8:	0c1b      	lsrs	r3, r3, #16
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1864

  /* Enable or Disable the Output Compare Fast Bit */
  tmpccmr2 |= TIM_OCFast;
   a:	ea41 0303 	orr.w	r3, r1, r3
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1867

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmr2;
   e:	8383      	strh	r3, [r0, #28]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1868
}
  10:	4770      	bx	lr

Disassembly of section .text.TIM_OC4FastConfig:

00000000 <TIM_OC4FastConfig>:
TIM_OC4FastConfig():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1891
  /* Check the parameters */
  assert_param(IS_TIM_123458_PERIPH(TIMx));
  assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));

  /* Get the TIMx CCMR2 register value */
  tmpccmr2 = TIMx->CCMR2;
   0:	8b83      	ldrh	r3, [r0, #28]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1894

  /* Reset the OC4FE Bit */
  tmpccmr2 &= CCMR_OC24FE_Reset;
   2:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
   6:	041b      	lsls	r3, r3, #16
   8:	0c1b      	lsrs	r3, r3, #16
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1897

  /* Enable or Disable the Output Compare Fast Bit */
  tmpccmr2 |= (u16)(TIM_OCFast << 8);
   a:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
   e:	b29b      	uxth	r3, r3
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1900

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmr2;
  10:	8383      	strh	r3, [r0, #28]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1901
}
  12:	4770      	bx	lr

Disassembly of section .text.TIM_ClearOC1Ref:

00000000 <TIM_ClearOC1Ref>:
TIM_ClearOC1Ref():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1923

  /* Check the parameters */
  assert_param(IS_TIM_123458_PERIPH(TIMx));
  assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));

  tmpccmr1 = TIMx->CCMR1;
   0:	8b03      	ldrh	r3, [r0, #24]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1926

  /* Reset the OC1CE Bit */
  tmpccmr1 &= CCMR_OC13CE_Reset;
   2:	f023 0380 	bic.w	r3, r3, #128	; 0x80
   6:	041b      	lsls	r3, r3, #16
   8:	0c1b      	lsrs	r3, r3, #16
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1929

  /* Enable or Disable the Output Compare Clear Bit */
  tmpccmr1 |= TIM_OCClear;
   a:	ea41 0303 	orr.w	r3, r1, r3
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1932

  /* Write to TIMx CCMR1 register */
  TIMx->CCMR1 = tmpccmr1;
   e:	8303      	strh	r3, [r0, #24]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1933
}
  10:	4770      	bx	lr

Disassembly of section .text.TIM_ClearOC2Ref:

00000000 <TIM_ClearOC2Ref>:
TIM_ClearOC2Ref():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1955

  /* Check the parameters */
  assert_param(IS_TIM_123458_PERIPH(TIMx));
  assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));

  tmpccmr1 = TIMx->CCMR1;
   0:	8b03      	ldrh	r3, [r0, #24]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1958

  /* Reset the OC2CE Bit */
  tmpccmr1 &= CCMR_OC24CE_Reset;
   2:	045b      	lsls	r3, r3, #17
   4:	0c5b      	lsrs	r3, r3, #17
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1961

  /* Enable or Disable the Output Compare Clear Bit */
  tmpccmr1 |= (u16)(TIM_OCClear << 8);
   6:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
   a:	b29b      	uxth	r3, r3
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1964

  /* Write to TIMx CCMR1 register */
  TIMx->CCMR1 = tmpccmr1;
   c:	8303      	strh	r3, [r0, #24]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1965
}
   e:	4770      	bx	lr

Disassembly of section .text.TIM_ClearOC3Ref:

00000000 <TIM_ClearOC3Ref>:
TIM_ClearOC3Ref():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1987

  /* Check the parameters */
  assert_param(IS_TIM_123458_PERIPH(TIMx));
  assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));

  tmpccmr2 = TIMx->CCMR2;
   0:	8b83      	ldrh	r3, [r0, #28]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1990

  /* Reset the OC3CE Bit */
  tmpccmr2 &= CCMR_OC13CE_Reset;
   2:	f023 0380 	bic.w	r3, r3, #128	; 0x80
   6:	041b      	lsls	r3, r3, #16
   8:	0c1b      	lsrs	r3, r3, #16
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1993

  /* Enable or Disable the Output Compare Clear Bit */
  tmpccmr2 |= TIM_OCClear;
   a:	ea41 0303 	orr.w	r3, r1, r3
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1996

  /* Write to TIMx CCMR2 register */
  TIMx->CCMR2 = tmpccmr2;
   e:	8383      	strh	r3, [r0, #28]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:1997
}
  10:	4770      	bx	lr

Disassembly of section .text.TIM_ClearOC4Ref:

00000000 <TIM_ClearOC4Ref>:
TIM_ClearOC4Ref():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2019

  /* Check the parameters */
  assert_param(IS_TIM_123458_PERIPH(TIMx));
  assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));

  tmpccmr2 = TIMx->CCMR2;
   0:	8b83      	ldrh	r3, [r0, #28]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2022

  /* Reset the OC4CE Bit */
  tmpccmr2 &= CCMR_OC24CE_Reset;
   2:	045b      	lsls	r3, r3, #17
   4:	0c5b      	lsrs	r3, r3, #17
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2025

  /* Enable or Disable the Output Compare Clear Bit */
  tmpccmr2 |= (u16)(TIM_OCClear << 8);
   6:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
   a:	b29b      	uxth	r3, r3
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2028

  /* Write to TIMx CCMR2 register */
  TIMx->CCMR2 = tmpccmr2;
   c:	8383      	strh	r3, [r0, #28]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2029
}
   e:	4770      	bx	lr

Disassembly of section .text.TIM_OC1PolarityConfig:

00000000 <TIM_OC1PolarityConfig>:
TIM_OC1PolarityConfig():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2051

  /* Check the parameters */
  assert_param(IS_TIM_123458_PERIPH(TIMx));
  assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));

  tmpccer = TIMx->CCER;
   0:	8c03      	ldrh	r3, [r0, #32]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2054

  /* Set or Reset the CC1P Bit */
  tmpccer &= CCER_CC1P_Reset;
   2:	f023 0302 	bic.w	r3, r3, #2
   6:	041b      	lsls	r3, r3, #16
   8:	0c1b      	lsrs	r3, r3, #16
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2055
  tmpccer |= TIM_OCPolarity;
   a:	ea41 0303 	orr.w	r3, r1, r3
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2058

  /* Write to TIMx CCER register */
  TIMx->CCER = tmpccer;
   e:	8403      	strh	r3, [r0, #32]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2059
}
  10:	4770      	bx	lr

Disassembly of section .text.TIM_OC1NPolarityConfig:

00000000 <TIM_OC1NPolarityConfig>:
TIM_OC1NPolarityConfig():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2080

  /* Check the parameters */
  assert_param(IS_TIM_18_PERIPH(TIMx));
  assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
   
  tmpccer = TIMx->CCER;
   0:	8c03      	ldrh	r3, [r0, #32]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2083

  /* Set or Reset the CC1NP Bit */
  tmpccer &= CCER_CC1NP_Reset;
   2:	f023 0308 	bic.w	r3, r3, #8
   6:	041b      	lsls	r3, r3, #16
   8:	0c1b      	lsrs	r3, r3, #16
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2084
  tmpccer |= TIM_OCNPolarity;
   a:	ea41 0303 	orr.w	r3, r1, r3
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2087

  /* Write to TIMx CCER register */
  TIMx->CCER = tmpccer;
   e:	8403      	strh	r3, [r0, #32]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2088
}
  10:	4770      	bx	lr

Disassembly of section .text.TIM_OC2PolarityConfig:

00000000 <TIM_OC2PolarityConfig>:
TIM_OC2PolarityConfig():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2110

  /* Check the parameters */
  assert_param(IS_TIM_123458_PERIPH(TIMx));
  assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));

  tmpccer = TIMx->CCER;
   0:	8c03      	ldrh	r3, [r0, #32]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2113

  /* Set or Reset the CC2P Bit */
  tmpccer &= CCER_CC2P_Reset;
   2:	f023 0320 	bic.w	r3, r3, #32
   6:	041b      	lsls	r3, r3, #16
   8:	0c1b      	lsrs	r3, r3, #16
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2114
  tmpccer |= (u16)(TIM_OCPolarity << 4);
   a:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
   e:	b29b      	uxth	r3, r3
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2117

  /* Write to TIMx CCER register */
  TIMx->CCER = tmpccer;
  10:	8403      	strh	r3, [r0, #32]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2118
}
  12:	4770      	bx	lr

Disassembly of section .text.TIM_OC2NPolarityConfig:

00000000 <TIM_OC2NPolarityConfig>:
TIM_OC2NPolarityConfig():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2139

  /* Check the parameters */
  assert_param(IS_TIM_18_PERIPH(TIMx));
  assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
  
  tmpccer = TIMx->CCER;
   0:	8c03      	ldrh	r3, [r0, #32]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2142

  /* Set or Reset the CC2NP Bit */
  tmpccer &= CCER_CC2NP_Reset;
   2:	f023 0380 	bic.w	r3, r3, #128	; 0x80
   6:	041b      	lsls	r3, r3, #16
   8:	0c1b      	lsrs	r3, r3, #16
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2143
  tmpccer |= (u16)(TIM_OCNPolarity << 4);
   a:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
   e:	b29b      	uxth	r3, r3
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2146

  /* Write to TIMx CCER register */
  TIMx->CCER = tmpccer;
  10:	8403      	strh	r3, [r0, #32]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2147
}
  12:	4770      	bx	lr

Disassembly of section .text.TIM_OC3PolarityConfig:

00000000 <TIM_OC3PolarityConfig>:
TIM_OC3PolarityConfig():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2169

  /* Check the parameters */
  assert_param(IS_TIM_123458_PERIPH(TIMx));
  assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));

  tmpccer = TIMx->CCER;
   0:	8c03      	ldrh	r3, [r0, #32]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2172

  /* Set or Reset the CC3P Bit */
  tmpccer &= CCER_CC3P_Reset;
   2:	f423 7300 	bic.w	r3, r3, #512	; 0x200
   6:	041b      	lsls	r3, r3, #16
   8:	0c1b      	lsrs	r3, r3, #16
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2173
  tmpccer |= (u16)(TIM_OCPolarity << 8);
   a:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
   e:	b29b      	uxth	r3, r3
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2176

  /* Write to TIMx CCER register */
  TIMx->CCER = tmpccer;
  10:	8403      	strh	r3, [r0, #32]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2177
}
  12:	4770      	bx	lr

Disassembly of section .text.TIM_OC3NPolarityConfig:

00000000 <TIM_OC3NPolarityConfig>:
TIM_OC3NPolarityConfig():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2198
 
  /* Check the parameters */
  assert_param(IS_TIM_18_PERIPH(TIMx));
  assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
    
  tmpccer = TIMx->CCER;
   0:	8c03      	ldrh	r3, [r0, #32]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2201

  /* Set or Reset the CC3NP Bit */
  tmpccer &= CCER_CC3NP_Reset;
   2:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
   6:	041b      	lsls	r3, r3, #16
   8:	0c1b      	lsrs	r3, r3, #16
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2202
  tmpccer |= (u16)(TIM_OCNPolarity << 8);
   a:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
   e:	b29b      	uxth	r3, r3
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2205

  /* Write to TIMx CCER register */
  TIMx->CCER = tmpccer;
  10:	8403      	strh	r3, [r0, #32]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2206
}
  12:	4770      	bx	lr

Disassembly of section .text.TIM_OC4PolarityConfig:

00000000 <TIM_OC4PolarityConfig>:
TIM_OC4PolarityConfig():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2228

  /* Check the parameters */
  assert_param(IS_TIM_123458_PERIPH(TIMx));
  assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));

  tmpccer = TIMx->CCER;
   0:	8c03      	ldrh	r3, [r0, #32]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2231

  /* Set or Reset the CC4P Bit */
  tmpccer &= CCER_CC4P_Reset;
   2:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
   6:	041b      	lsls	r3, r3, #16
   8:	0c1b      	lsrs	r3, r3, #16
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2232
  tmpccer |= (u16)(TIM_OCPolarity << 12);
   a:	ea43 3301 	orr.w	r3, r3, r1, lsl #12
   e:	b29b      	uxth	r3, r3
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2235

  /* Write to TIMx CCER register */
  TIMx->CCER = tmpccer;
  10:	8403      	strh	r3, [r0, #32]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2236
}
  12:	4770      	bx	lr

Disassembly of section .text.TIM_CCxCmd:

00000000 <TIM_CCxCmd>:
TIM_CCxCmd():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2262
  assert_param(IS_TIM_123458_PERIPH(TIMx));
  assert_param(IS_TIM_CHANNEL(TIM_Channel));
  assert_param(IS_TIM_CCX(TIM_CCx));

  /* Reset the CCxE Bit */
  TIMx->CCER &= (u16)(~((u16)(CCER_CCE_Set << TIM_Channel)));
   0:	2301      	movs	r3, #1
   2:	408b      	lsls	r3, r1
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2265

  /* Set or reset the CCxE Bit */ 
  TIMx->CCER |=  (u16)(TIM_CCx << TIM_Channel);
   4:	fa12 f101 	lsls.w	r1, r2, r1
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2255
*                   This parameter can be: TIM_CCx_Enable or TIM_CCx_Disable. 
* Output         : None
* Return         : None
*******************************************************************************/
void TIM_CCxCmd(TIM_TypeDef* TIMx, u16 TIM_Channel, u16 TIM_CCx)
{
   8:	b510      	push	{r4, lr}
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2262
  assert_param(IS_TIM_123458_PERIPH(TIMx));
  assert_param(IS_TIM_CHANNEL(TIM_Channel));
  assert_param(IS_TIM_CCX(TIM_CCx));

  /* Reset the CCxE Bit */
  TIMx->CCER &= (u16)(~((u16)(CCER_CCE_Set << TIM_Channel)));
   a:	8c04      	ldrh	r4, [r0, #32]
   c:	b2a4      	uxth	r4, r4
   e:	ea24 0303 	bic.w	r3, r4, r3
  12:	8403      	strh	r3, [r0, #32]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2265

  /* Set or reset the CCxE Bit */ 
  TIMx->CCER |=  (u16)(TIM_CCx << TIM_Channel);
  14:	8c03      	ldrh	r3, [r0, #32]
  16:	ea41 0303 	orr.w	r3, r1, r3
  1a:	b29b      	uxth	r3, r3
  1c:	8403      	strh	r3, [r0, #32]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2266
}
  1e:	bd10      	pop	{r4, pc}

Disassembly of section .text.TIM_CCxNCmd:

00000000 <TIM_CCxNCmd>:
TIM_CCxNCmd():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2290
  assert_param(IS_TIM_18_PERIPH(TIMx));
  assert_param(IS_TIM_COMPLEMENTARY_CHANNEL(TIM_Channel));
  assert_param(IS_TIM_CCXN(TIM_CCxN));

  /* Reset the CCxNE Bit */
  TIMx->CCER &= (u16)(~((u16)(CCER_CCNE_Set << TIM_Channel)));
   0:	2304      	movs	r3, #4
   2:	408b      	lsls	r3, r1
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2293

  /* Set or reset the CCxNE Bit */ 
  TIMx->CCER |=  (u16)(TIM_CCxN << TIM_Channel);
   4:	fa12 f101 	lsls.w	r1, r2, r1
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2283
*                   This parameter can be: TIM_CCxN_Enable or TIM_CCxN_Disable. 
* Output         : None
* Return         : None
*******************************************************************************/
void TIM_CCxNCmd(TIM_TypeDef* TIMx, u16 TIM_Channel, u16 TIM_CCxN)
{
   8:	b510      	push	{r4, lr}
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2290
  assert_param(IS_TIM_18_PERIPH(TIMx));
  assert_param(IS_TIM_COMPLEMENTARY_CHANNEL(TIM_Channel));
  assert_param(IS_TIM_CCXN(TIM_CCxN));

  /* Reset the CCxNE Bit */
  TIMx->CCER &= (u16)(~((u16)(CCER_CCNE_Set << TIM_Channel)));
   a:	8c04      	ldrh	r4, [r0, #32]
   c:	b2a4      	uxth	r4, r4
   e:	ea24 0303 	bic.w	r3, r4, r3
  12:	8403      	strh	r3, [r0, #32]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2293

  /* Set or reset the CCxNE Bit */ 
  TIMx->CCER |=  (u16)(TIM_CCxN << TIM_Channel);
  14:	8c03      	ldrh	r3, [r0, #32]
  16:	ea41 0303 	orr.w	r3, r1, r3
  1a:	b29b      	uxth	r3, r3
  1c:	8403      	strh	r3, [r0, #32]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2294
}
  1e:	bd10      	pop	{r4, pc}

Disassembly of section .text.TIM_SelectOCxM:

00000000 <TIM_SelectOCxM>:
TIM_SelectOCxM():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2330
  assert_param(IS_TIM_123458_PERIPH(TIMx));
  assert_param(IS_TIM_CHANNEL(TIM_Channel));
  assert_param(IS_TIM_OCM(TIM_OCMode));
  
  /* Disable the Channel: Reset the CCxE Bit */
  TIMx->CCER &= (u16)(~((u16)(CCER_CCE_Set << TIM_Channel)));
   0:	2301      	movs	r3, #1
   2:	408b      	lsls	r3, r1
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2323
*                       - TIM_ForcedAction_InActive
* Output         : None
* Return         : None
*******************************************************************************/
void TIM_SelectOCxM(TIM_TypeDef* TIMx, u16 TIM_Channel, u16 TIM_OCMode)
{
   4:	b513      	push	{r0, r1, r4, lr}
   6:	9001      	str	r0, [sp, #4]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2330
  assert_param(IS_TIM_123458_PERIPH(TIMx));
  assert_param(IS_TIM_CHANNEL(TIM_Channel));
  assert_param(IS_TIM_OCM(TIM_OCMode));
  
  /* Disable the Channel: Reset the CCxE Bit */
  TIMx->CCER &= (u16)(~((u16)(CCER_CCE_Set << TIM_Channel)));
   8:	8c04      	ldrh	r4, [r0, #32]
   a:	b2a4      	uxth	r4, r4
   c:	ea24 0303 	bic.w	r3, r4, r3
  10:	8403      	strh	r3, [r0, #32]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2332

  if((TIM_Channel == TIM_Channel_1) ||(TIM_Channel == TIM_Channel_3))
  12:	b109      	cbz	r1, 18 <TIM_SelectOCxM+0x18>
  14:	2908      	cmp	r1, #8
  16:	d10f      	bne.n	38 <TIM_SelectOCxM+0x38>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2335
  {
    /* Reset the OCxM bits in the CCMRx register */
    *((vu32 *)((*(u32*)&TIMx) + CCMR_Offset + (TIM_Channel>>1))) &= CCMR_OC13M_Mask;
  18:	9801      	ldr	r0, [sp, #4]
  1a:	0849      	lsrs	r1, r1, #1
  1c:	3018      	adds	r0, #24
  1e:	5844      	ldr	r4, [r0, r1]
  20:	f64f 738f 	movw	r3, #65423	; 0xff8f
  24:	ea04 0303 	and.w	r3, r4, r3
  28:	5043      	str	r3, [r0, r1]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2338
   
    /* Configure the OCxM bits in the CCMRx register */
    *((vu32 *)((*(u32*)&TIMx) + CCMR_Offset + (TIM_Channel>>1))) |= TIM_OCMode;
  2a:	9b01      	ldr	r3, [sp, #4]
  2c:	3318      	adds	r3, #24
  2e:	5858      	ldr	r0, [r3, r1]
  30:	ea40 0202 	orr.w	r2, r0, r2
  34:	505a      	str	r2, [r3, r1]
  36:	e00f      	b.n	58 <TIM_SelectOCxM+0x58>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2344

  }
  else
  {
    /* Reset the OCxM bits in the CCMRx register */
    *((vu32 *)((*(u32*)&TIMx) + CCMR_Offset + ((u16)(TIM_Channel - 4)>> 1))) &= CCMR_OC24M_Mask;
  38:	3904      	subs	r1, #4
  3a:	b289      	uxth	r1, r1
  3c:	0849      	lsrs	r1, r1, #1
  3e:	3018      	adds	r0, #24
  40:	5844      	ldr	r4, [r0, r1]
  42:	f648 73ff 	movw	r3, #36863	; 0x8fff
  46:	ea04 0303 	and.w	r3, r4, r3
  4a:	5043      	str	r3, [r0, r1]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2347
    
    /* Configure the OCxM bits in the CCMRx register */
    *((vu32 *)((*(u32*)&TIMx) + CCMR_Offset + ((u16)(TIM_Channel - 4)>> 1))) |= (u16)(TIM_OCMode << 8);
  4c:	5843      	ldr	r3, [r0, r1]
  4e:	0212      	lsls	r2, r2, #8
  50:	b292      	uxth	r2, r2
  52:	ea43 0202 	orr.w	r2, r3, r2
  56:	5042      	str	r2, [r0, r1]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2349
  }
}
  58:	bd1c      	pop	{r2, r3, r4, pc}

Disassembly of section .text.TIM_UpdateDisableConfig:

00000000 <TIM_UpdateDisableConfig>:
TIM_UpdateDisableConfig():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2366
{
  /* Check the parameters */
  assert_param(IS_TIM_ALL_PERIPH(TIMx));
  assert_param(IS_FUNCTIONAL_STATE(NewState));

  if (NewState != DISABLE)
   0:	b121      	cbz	r1, c <TIM_UpdateDisableConfig+0xc>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2369
  {
    /* Set the Update Disable Bit */
    TIMx->CR1 |= CR1_UDIS_Set;
   2:	8803      	ldrh	r3, [r0, #0]
   4:	b29b      	uxth	r3, r3
   6:	f043 0302 	orr.w	r3, r3, #2
   a:	e004      	b.n	16 <TIM_UpdateDisableConfig+0x16>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2374
  }
  else
  {
    /* Reset the Update Disable Bit */
    TIMx->CR1 &= CR1_UDIS_Reset;
   c:	8803      	ldrh	r3, [r0, #0]
   e:	f023 0302 	bic.w	r3, r3, #2
  12:	059b      	lsls	r3, r3, #22
  14:	0d9b      	lsrs	r3, r3, #22
  16:	8003      	strh	r3, [r0, #0]
  18:	4770      	bx	lr

Disassembly of section .text.TIM_UpdateRequestConfig:

00000000 <TIM_UpdateRequestConfig>:
TIM_UpdateRequestConfig():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2395
{
  /* Check the parameters */
  assert_param(IS_TIM_ALL_PERIPH(TIMx));
  assert_param(IS_TIM_UPDATE_SOURCE(TIM_UpdateSource));

  if (TIM_UpdateSource != TIM_UpdateSource_Global)
   0:	b121      	cbz	r1, c <TIM_UpdateRequestConfig+0xc>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2398
  {
    /* Set the URS Bit */
    TIMx->CR1 |= CR1_URS_Set;
   2:	8803      	ldrh	r3, [r0, #0]
   4:	b29b      	uxth	r3, r3
   6:	f043 0304 	orr.w	r3, r3, #4
   a:	e004      	b.n	16 <TIM_UpdateRequestConfig+0x16>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2403
  }
  else
  {
    /* Reset the URS Bit */
    TIMx->CR1 &= CR1_URS_Reset;
   c:	8803      	ldrh	r3, [r0, #0]
   e:	f023 0304 	bic.w	r3, r3, #4
  12:	059b      	lsls	r3, r3, #22
  14:	0d9b      	lsrs	r3, r3, #22
  16:	8003      	strh	r3, [r0, #0]
  18:	4770      	bx	lr

Disassembly of section .text.TIM_SelectHallSensor:

00000000 <TIM_SelectHallSensor>:
TIM_SelectHallSensor():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2422
{
  /* Check the parameters */
  assert_param(IS_TIM_123458_PERIPH(TIMx));
  assert_param(IS_FUNCTIONAL_STATE(NewState));

  if (NewState != DISABLE)
   0:	b121      	cbz	r1, c <TIM_SelectHallSensor+0xc>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2425
  {
    /* Set the TI1S Bit */
    TIMx->CR2 |= CR2_TI1S_Set;
   2:	8883      	ldrh	r3, [r0, #4]
   4:	b29b      	uxth	r3, r3
   6:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   a:	e004      	b.n	16 <TIM_SelectHallSensor+0x16>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2430
  }
  else
  {
    /* Reset the TI1S Bit */
    TIMx->CR2 &= CR2_TI1S_Reset;
   c:	8883      	ldrh	r3, [r0, #4]
   e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  12:	041b      	lsls	r3, r3, #16
  14:	0c1b      	lsrs	r3, r3, #16
  16:	8083      	strh	r3, [r0, #4]
  18:	4770      	bx	lr

Disassembly of section .text.TIM_SelectOnePulseMode:

00000000 <TIM_SelectOnePulseMode>:
TIM_SelectOnePulseMode():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2452
  /* Check the parameters */
  assert_param(IS_TIM_ALL_PERIPH(TIMx));
  assert_param(IS_TIM_OPM_MODE(TIM_OPMode));

  /* Reset the OPM Bit */
  TIMx->CR1 &= CR1_OPM_Reset;
   0:	8803      	ldrh	r3, [r0, #0]
   2:	f023 0308 	bic.w	r3, r3, #8
   6:	059b      	lsls	r3, r3, #22
   8:	0d9b      	lsrs	r3, r3, #22
   a:	8003      	strh	r3, [r0, #0]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2455

  /* Configure the OPM Mode */
  TIMx->CR1 |= TIM_OPMode;
   c:	8803      	ldrh	r3, [r0, #0]
   e:	b29b      	uxth	r3, r3
  10:	ea41 0303 	orr.w	r3, r1, r3
  14:	8003      	strh	r3, [r0, #0]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2456
}
  16:	4770      	bx	lr

Disassembly of section .text.TIM_SelectOutputTrigger:

00000000 <TIM_SelectOutputTrigger>:
TIM_SelectOutputTrigger():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2486
  assert_param(IS_TIM_ALL_PERIPH(TIMx));
  assert_param(IS_TIM_TRGO_SOURCE(TIM_TRGOSource));
  assert_param(IS_TIM_PERIPH_TRGO(TIMx, TIM_TRGOSource));

  /* Reset the MMS Bits */
  TIMx->CR2 &= CR2_MMS_Mask;
   0:	8883      	ldrh	r3, [r0, #4]
   2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
   6:	041b      	lsls	r3, r3, #16
   8:	0c1b      	lsrs	r3, r3, #16
   a:	8083      	strh	r3, [r0, #4]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2489

  /* Select the TRGO source */
  TIMx->CR2 |=  TIM_TRGOSource;
   c:	8883      	ldrh	r3, [r0, #4]
   e:	b29b      	uxth	r3, r3
  10:	ea41 0303 	orr.w	r3, r1, r3
  14:	8083      	strh	r3, [r0, #4]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2490
}
  16:	4770      	bx	lr

Disassembly of section .text.TIM_SelectSlaveMode:

00000000 <TIM_SelectSlaveMode>:
TIM_SelectSlaveMode():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2513
  /* Check the parameters */
  assert_param(IS_TIM_123458_PERIPH(TIMx));
  assert_param(IS_TIM_SLAVE_MODE(TIM_SlaveMode));

  /* Reset the SMS Bits */
  TIMx->SMCR &= SMCR_SMS_Mask;
   0:	8903      	ldrh	r3, [r0, #8]
   2:	f023 0307 	bic.w	r3, r3, #7
   6:	041b      	lsls	r3, r3, #16
   8:	0c1b      	lsrs	r3, r3, #16
   a:	8103      	strh	r3, [r0, #8]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2516

  /* Select the Slave Mode */
  TIMx->SMCR |= TIM_SlaveMode;
   c:	8903      	ldrh	r3, [r0, #8]
   e:	b29b      	uxth	r3, r3
  10:	ea41 0303 	orr.w	r3, r1, r3
  14:	8103      	strh	r3, [r0, #8]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2517
}
  16:	4770      	bx	lr

Disassembly of section .text.TIM_SelectMasterSlaveMode:

00000000 <TIM_SelectMasterSlaveMode>:
TIM_SelectMasterSlaveMode():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2539
  /* Check the parameters */
  assert_param(IS_TIM_123458_PERIPH(TIMx));
  assert_param(IS_TIM_MSM_STATE(TIM_MasterSlaveMode));

  /* Reset the MSM Bit */
  TIMx->SMCR &= SMCR_MSM_Reset;
   0:	8903      	ldrh	r3, [r0, #8]
   2:	f023 0380 	bic.w	r3, r3, #128	; 0x80
   6:	041b      	lsls	r3, r3, #16
   8:	0c1b      	lsrs	r3, r3, #16
   a:	8103      	strh	r3, [r0, #8]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2542
  
  /* Set or Reset the MSM Bit */
  TIMx->SMCR |= TIM_MasterSlaveMode;
   c:	8903      	ldrh	r3, [r0, #8]
   e:	b29b      	uxth	r3, r3
  10:	ea41 0303 	orr.w	r3, r1, r3
  14:	8103      	strh	r3, [r0, #8]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2543
}
  16:	4770      	bx	lr

Disassembly of section .text.TIM_SetCounter:

00000000 <TIM_SetCounter>:
TIM_SetCounter():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2559
{
  /* Check the parameters */
  assert_param(IS_TIM_ALL_PERIPH(TIMx));

  /* Set the Counter Register value */
  TIMx->CNT = Counter;
   0:	8481      	strh	r1, [r0, #36]	; 0x24
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2560
}
   2:	4770      	bx	lr

Disassembly of section .text.TIM_SetAutoreload:

00000000 <TIM_SetAutoreload>:
TIM_SetAutoreload():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2576
{
  /* Check the parameters */
  assert_param(IS_TIM_ALL_PERIPH(TIMx));

  /* Set the Autoreload Register value */
  TIMx->ARR = Autoreload;
   0:	8581      	strh	r1, [r0, #44]	; 0x2c
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2577
}
   2:	4770      	bx	lr

Disassembly of section .text.TIM_SetCompare1:

00000000 <TIM_SetCompare1>:
TIM_SetCompare1():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2594
{
  /* Check the parameters */
  assert_param(IS_TIM_123458_PERIPH(TIMx));

  /* Set the Capture Compare1 Register value */
  TIMx->CCR1 = Compare1;
   0:	8681      	strh	r1, [r0, #52]	; 0x34
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2595
}
   2:	4770      	bx	lr

Disassembly of section .text.TIM_SetCompare2:

00000000 <TIM_SetCompare2>:
TIM_SetCompare2():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2612
{
  /* Check the parameters */
  assert_param(IS_TIM_123458_PERIPH(TIMx));

  /* Set the Capture Compare2 Register value */
  TIMx->CCR2 = Compare2;
   0:	8701      	strh	r1, [r0, #56]	; 0x38
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2613
}
   2:	4770      	bx	lr

Disassembly of section .text.TIM_SetCompare3:

00000000 <TIM_SetCompare3>:
TIM_SetCompare3():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2630
{
  /* Check the parameters */
  assert_param(IS_TIM_123458_PERIPH(TIMx));

  /* Set the Capture Compare3 Register value */
  TIMx->CCR3 = Compare3;
   0:	8781      	strh	r1, [r0, #60]	; 0x3c
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2631
}
   2:	4770      	bx	lr

Disassembly of section .text.TIM_SetCompare4:

00000000 <TIM_SetCompare4>:
TIM_SetCompare4():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2648
{
  /* Check the parameters */
  assert_param(IS_TIM_123458_PERIPH(TIMx));

  /* Set the Capture Compare4 Register value */
  TIMx->CCR4 = Compare4;
   0:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2649
}
   4:	4770      	bx	lr

Disassembly of section .text.TIM_SetIC1Prescaler:

00000000 <TIM_SetIC1Prescaler>:
TIM_SetIC1Prescaler():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2673
  /* Check the parameters */
  assert_param(IS_TIM_123458_PERIPH(TIMx));
  assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));

  /* Reset the IC1PSC Bits */
  TIMx->CCMR1 &= CCMR_IC13PSC_Mask;
   0:	8b03      	ldrh	r3, [r0, #24]
   2:	f023 030c 	bic.w	r3, r3, #12
   6:	041b      	lsls	r3, r3, #16
   8:	0c1b      	lsrs	r3, r3, #16
   a:	8303      	strh	r3, [r0, #24]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2676

  /* Set the IC1PSC value */
  TIMx->CCMR1 |= TIM_ICPSC;
   c:	8b03      	ldrh	r3, [r0, #24]
   e:	b29b      	uxth	r3, r3
  10:	ea41 0303 	orr.w	r3, r1, r3
  14:	8303      	strh	r3, [r0, #24]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2677
}
  16:	4770      	bx	lr

Disassembly of section .text.TIM_SetIC2Prescaler:

00000000 <TIM_SetIC2Prescaler>:
TIM_SetIC2Prescaler():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2701
  /* Check the parameters */
  assert_param(IS_TIM_123458_PERIPH(TIMx));
  assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));

  /* Reset the IC2PSC Bits */
  TIMx->CCMR1 &= CCMR_IC24PSC_Mask;
   0:	8b03      	ldrh	r3, [r0, #24]
   2:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
   6:	041b      	lsls	r3, r3, #16
   8:	0c1b      	lsrs	r3, r3, #16
   a:	8303      	strh	r3, [r0, #24]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2704

  /* Set the IC2PSC value */
  TIMx->CCMR1 |= (u16)(TIM_ICPSC << 8);
   c:	8b03      	ldrh	r3, [r0, #24]
   e:	b29b      	uxth	r3, r3
  10:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
  14:	b29b      	uxth	r3, r3
  16:	8303      	strh	r3, [r0, #24]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2705
}
  18:	4770      	bx	lr

Disassembly of section .text.TIM_PWMIConfig:

00000000 <TIM_PWMIConfig>:
TIM_PWMIConfig():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:651
*                    TIM peripheral.
* Output         : None
* Return         : None
*******************************************************************************/
void TIM_PWMIConfig(TIM_TypeDef* TIMx, TIM_ICInitTypeDef* TIM_ICInitStruct)
{
   0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   4:	460c      	mov	r4, r1
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:669
  {
    icoppositepolarity = TIM_ICPolarity_Rising;
  }

  /* Select the Opposite Input */
  if (TIM_ICInitStruct->TIM_ICSelection == TIM_ICSelection_DirectTI)
   6:	88a2      	ldrh	r2, [r4, #4]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:659

  /* Check the parameters */
  assert_param(IS_TIM_123458_PERIPH(TIMx));

  /* Select the Opposite Input Polarity */
  if (TIM_ICInitStruct->TIM_ICPolarity == TIM_ICPolarity_Rising)
   8:	8849      	ldrh	r1, [r1, #2]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:678
  else
  {
    icoppositeselection = TIM_ICSelection_DirectTI;
  }

  if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_1)
   a:	f8b4 e000 	ldrh.w	lr, [r4]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:651
*                    TIM peripheral.
* Output         : None
* Return         : None
*******************************************************************************/
void TIM_PWMIConfig(TIM_TypeDef* TIMx, TIM_ICInitTypeDef* TIM_ICInitStruct)
{
   e:	4605      	mov	r5, r0
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:661
  assert_param(IS_TIM_123458_PERIPH(TIMx));

  /* Select the Opposite Input Polarity */
  if (TIM_ICInitStruct->TIM_ICPolarity == TIM_ICPolarity_Rising)
  {
    icoppositepolarity = TIM_ICPolarity_Falling;
  10:	2900      	cmp	r1, #0
  12:	bf0c      	ite	eq
  14:	2702      	moveq	r7, #2
  16:	2700      	movne	r7, #0
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:671
  }

  /* Select the Opposite Input */
  if (TIM_ICInitStruct->TIM_ICSelection == TIM_ICSelection_DirectTI)
  {
    icoppositeselection = TIM_ICSelection_IndirectTI;
  18:	2a01      	cmp	r2, #1
  1a:	bf14      	ite	ne
  1c:	2601      	movne	r6, #1
  1e:	2602      	moveq	r6, #2
  20:	8923      	ldrh	r3, [r4, #8]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:678
  else
  {
    icoppositeselection = TIM_ICSelection_DirectTI;
  }

  if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_1)
  22:	f1be 0f00 	cmp.w	lr, #0
  26:	d111      	bne.n	26 <TIM_PWMIConfig+0x26>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:681
  {
    /* TI1 Configuration */
    TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
  28:	f7ff fffe 	bl	0 <TIM_PWMIConfig>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:685
               TIM_ICInitStruct->TIM_ICFilter);

    /* Set the Input Capture Prescaler value */
    TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
  2c:	4628      	mov	r0, r5
  2e:	88e1      	ldrh	r1, [r4, #6]
  30:	f7ff fffe 	bl	0 <TIM_PWMIConfig>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:688

    /* TI2 Configuration */
    TI2_Config(TIMx, icoppositepolarity, icoppositeselection, TIM_ICInitStruct->TIM_ICFilter);
  34:	4628      	mov	r0, r5
  36:	4639      	mov	r1, r7
  38:	4632      	mov	r2, r6
  3a:	8923      	ldrh	r3, [r4, #8]
  3c:	f7ff fffe 	bl	0 <TIM_PWMIConfig>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:691

    /* Set the Input Capture Prescaler value */
    TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
  40:	88e1      	ldrh	r1, [r4, #6]
  42:	4628      	mov	r0, r5
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:708
    TI1_Config(TIMx, icoppositepolarity, icoppositeselection, TIM_ICInitStruct->TIM_ICFilter);

    /* Set the Input Capture Prescaler value */
    TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
  }
}
  44:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:691

    /* TI2 Configuration */
    TI2_Config(TIMx, icoppositepolarity, icoppositeselection, TIM_ICInitStruct->TIM_ICFilter);

    /* Set the Input Capture Prescaler value */
    TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
  48:	f7ff bffe 	b.w	0 <TIM_PWMIConfig>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:696
  }
  else
  { 
    /* TI2 Configuration */
    TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
  4c:	f7ff fffe 	bl	0 <TIM_PWMIConfig>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:700
               TIM_ICInitStruct->TIM_ICFilter);

    /* Set the Input Capture Prescaler value */
    TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
  50:	4628      	mov	r0, r5
  52:	88e1      	ldrh	r1, [r4, #6]
  54:	f7ff fffe 	bl	0 <TIM_PWMIConfig>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:703

    /* TI1 Configuration */
    TI1_Config(TIMx, icoppositepolarity, icoppositeselection, TIM_ICInitStruct->TIM_ICFilter);
  58:	4628      	mov	r0, r5
  5a:	4639      	mov	r1, r7
  5c:	4632      	mov	r2, r6
  5e:	8923      	ldrh	r3, [r4, #8]
  60:	f7ff fffe 	bl	0 <TIM_PWMIConfig>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:706

    /* Set the Input Capture Prescaler value */
    TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
  64:	88e1      	ldrh	r1, [r4, #6]
  66:	4628      	mov	r0, r5
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:708
  }
}
  68:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:706

    /* TI1 Configuration */
    TI1_Config(TIMx, icoppositepolarity, icoppositeselection, TIM_ICInitStruct->TIM_ICFilter);

    /* Set the Input Capture Prescaler value */
    TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
  6c:	f7ff bffe 	b.w	0 <TIM_PWMIConfig>

Disassembly of section .text.TIM_SetIC3Prescaler:

00000000 <TIM_SetIC3Prescaler>:
TIM_SetIC3Prescaler():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2729
  /* Check the parameters */
  assert_param(IS_TIM_123458_PERIPH(TIMx));
  assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));

  /* Reset the IC3PSC Bits */
  TIMx->CCMR2 &= CCMR_IC13PSC_Mask;
   0:	8b83      	ldrh	r3, [r0, #28]
   2:	f023 030c 	bic.w	r3, r3, #12
   6:	041b      	lsls	r3, r3, #16
   8:	0c1b      	lsrs	r3, r3, #16
   a:	8383      	strh	r3, [r0, #28]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2732

  /* Set the IC3PSC value */
  TIMx->CCMR2 |= TIM_ICPSC;
   c:	8b83      	ldrh	r3, [r0, #28]
   e:	b29b      	uxth	r3, r3
  10:	ea41 0303 	orr.w	r3, r1, r3
  14:	8383      	strh	r3, [r0, #28]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2733
}
  16:	4770      	bx	lr

Disassembly of section .text.TIM_SetIC4Prescaler:

00000000 <TIM_SetIC4Prescaler>:
TIM_SetIC4Prescaler():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2757
  /* Check the parameters */
  assert_param(IS_TIM_123458_PERIPH(TIMx));
  assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));

  /* Reset the IC4PSC Bits */
  TIMx->CCMR2 &= CCMR_IC24PSC_Mask;
   0:	8b83      	ldrh	r3, [r0, #28]
   2:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
   6:	041b      	lsls	r3, r3, #16
   8:	0c1b      	lsrs	r3, r3, #16
   a:	8383      	strh	r3, [r0, #28]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2760

  /* Set the IC4PSC value */
  TIMx->CCMR2 |= (u16)(TIM_ICPSC << 8);
   c:	8b83      	ldrh	r3, [r0, #28]
   e:	b29b      	uxth	r3, r3
  10:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
  14:	b29b      	uxth	r3, r3
  16:	8383      	strh	r3, [r0, #28]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2761
}
  18:	4770      	bx	lr

Disassembly of section .text.TIM_ICInit:

00000000 <TIM_ICInit>:
TIM_ICInit():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:595
  assert_param(IS_TIM_IC_POLARITY(TIM_ICInitStruct->TIM_ICPolarity));
  assert_param(IS_TIM_IC_SELECTION(TIM_ICInitStruct->TIM_ICSelection));
  assert_param(IS_TIM_IC_PRESCALER(TIM_ICInitStruct->TIM_ICPrescaler));
  assert_param(IS_TIM_IC_FILTER(TIM_ICInitStruct->TIM_ICFilter));
  
  if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_1)
   0:	880b      	ldrh	r3, [r1, #0]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:586
*                    TIM peripheral.
* Output         : None
* Return         : None
*******************************************************************************/
void TIM_ICInit(TIM_TypeDef* TIMx, TIM_ICInitTypeDef* TIM_ICInitStruct)
{
   2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   6:	460d      	mov	r5, r1
   8:	4604      	mov	r4, r0
   a:	8849      	ldrh	r1, [r1, #2]
   c:	88aa      	ldrh	r2, [r5, #4]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:595
  assert_param(IS_TIM_IC_POLARITY(TIM_ICInitStruct->TIM_ICPolarity));
  assert_param(IS_TIM_IC_SELECTION(TIM_ICInitStruct->TIM_ICSelection));
  assert_param(IS_TIM_IC_PRESCALER(TIM_ICInitStruct->TIM_ICPrescaler));
  assert_param(IS_TIM_IC_FILTER(TIM_ICInitStruct->TIM_ICFilter));
  
  if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_1)
   e:	b943      	cbnz	r3, 22 <TIM_ICInit+0x22>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:598
  {
    /* TI1 Configuration */
    TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
  10:	892b      	ldrh	r3, [r5, #8]
  12:	f7ff fffe 	bl	0 <TIM_ICInit>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:603
               TIM_ICInitStruct->TIM_ICSelection,
               TIM_ICInitStruct->TIM_ICFilter);

    /* Set the Input Capture Prescaler value */
    TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
  16:	88e9      	ldrh	r1, [r5, #6]
  18:	4620      	mov	r0, r4
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:635
               TIM_ICInitStruct->TIM_ICFilter);

    /* Set the Input Capture Prescaler value */
    TIM_SetIC4Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
  }
}
  1a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:603
    TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
               TIM_ICInitStruct->TIM_ICSelection,
               TIM_ICInitStruct->TIM_ICFilter);

    /* Set the Input Capture Prescaler value */
    TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
  1e:	f7ff bffe 	b.w	0 <TIM_ICInit>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:605
  }
  else if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_2)
  22:	2b04      	cmp	r3, #4
  24:	d108      	bne.n	38 <TIM_ICInit+0x38>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:608
  {
    /* TI2 Configuration */
    TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
  26:	892b      	ldrh	r3, [r5, #8]
  28:	f7ff fffe 	bl	0 <TIM_ICInit>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:613
               TIM_ICInitStruct->TIM_ICSelection,
               TIM_ICInitStruct->TIM_ICFilter);

    /* Set the Input Capture Prescaler value */
    TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
  2c:	88e9      	ldrh	r1, [r5, #6]
  2e:	4620      	mov	r0, r4
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:635
               TIM_ICInitStruct->TIM_ICFilter);

    /* Set the Input Capture Prescaler value */
    TIM_SetIC4Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
  }
}
  30:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:613
    TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
               TIM_ICInitStruct->TIM_ICSelection,
               TIM_ICInitStruct->TIM_ICFilter);

    /* Set the Input Capture Prescaler value */
    TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
  34:	f7ff bffe 	b.w	0 <TIM_ICInit>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:615
  }
  else if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_3)
  38:	2b08      	cmp	r3, #8
  3a:	f8b5 8008 	ldrh.w	r8, [r5, #8]
  3e:	d124      	bne.n	8a <TIM_ICInit+0x8a>
TI3_Config():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3153
                       u16 TIM_ICFilter)
{
  u16 tmpccmr2 = 0, tmpccer = 0, tmp = 0;

  /* Disable the Channel 3: Reset the CC3E Bit */
  TIMx->CCER &= CCER_CC3E_Reset;
  40:	f8b0 c020 	ldrh.w	ip, [r0, #32]
  44:	f42c 7c80 	bic.w	ip, ip, #256	; 0x100
  48:	ea4f 4c0c 	mov.w	ip, ip, lsl #16
  4c:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
  50:	f8a0 c020 	strh.w	ip, [r0, #32]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3155

  tmpccmr2 = TIMx->CCMR2;
  54:	8b87      	ldrh	r7, [r0, #28]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3156
  tmpccer = TIMx->CCER;
  56:	8c06      	ldrh	r6, [r0, #32]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3160
  tmp = (u16)(TIM_ICPolarity << 8);

  /* Select the Input and set the filter */
  tmpccmr2 &= CCMR_CC13S_Mask & CCMR_IC13F_Mask;
  58:	f027 07f3 	bic.w	r7, r7, #243	; 0xf3
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3164
  tmpccmr2 |= TIM_ICSelection | (u16)(TIM_ICFilter << 4);

  /* Select the Polarity and set the CC3E Bit */
  tmpccer &= CCER_CC3P_Reset;
  5c:	f426 7600 	bic.w	r6, r6, #512	; 0x200
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3160
  tmpccmr2 = TIMx->CCMR2;
  tmpccer = TIMx->CCER;
  tmp = (u16)(TIM_ICPolarity << 8);

  /* Select the Input and set the filter */
  tmpccmr2 &= CCMR_CC13S_Mask & CCMR_IC13F_Mask;
  60:	043f      	lsls	r7, r7, #16
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3164
  tmpccmr2 |= TIM_ICSelection | (u16)(TIM_ICFilter << 4);

  /* Select the Polarity and set the CC3E Bit */
  tmpccer &= CCER_CC3P_Reset;
  62:	0436      	lsls	r6, r6, #16
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3160
  tmpccmr2 = TIMx->CCMR2;
  tmpccer = TIMx->CCER;
  tmp = (u16)(TIM_ICPolarity << 8);

  /* Select the Input and set the filter */
  tmpccmr2 &= CCMR_CC13S_Mask & CCMR_IC13F_Mask;
  64:	0c3f      	lsrs	r7, r7, #16
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3164
  tmpccmr2 |= TIM_ICSelection | (u16)(TIM_ICFilter << 4);

  /* Select the Polarity and set the CC3E Bit */
  tmpccer &= CCER_CC3P_Reset;
  66:	0c36      	lsrs	r6, r6, #16
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3161
  tmpccer = TIMx->CCER;
  tmp = (u16)(TIM_ICPolarity << 8);

  /* Select the Input and set the filter */
  tmpccmr2 &= CCMR_CC13S_Mask & CCMR_IC13F_Mask;
  tmpccmr2 |= TIM_ICSelection | (u16)(TIM_ICFilter << 4);
  68:	ea47 1708 	orr.w	r7, r7, r8, lsl #4
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3165

  /* Select the Polarity and set the CC3E Bit */
  tmpccer &= CCER_CC3P_Reset;
  tmpccer |= tmp | CCER_CC3E_Set;
  6c:	ea46 2101 	orr.w	r1, r6, r1, lsl #8
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3161
  tmpccer = TIMx->CCER;
  tmp = (u16)(TIM_ICPolarity << 8);

  /* Select the Input and set the filter */
  tmpccmr2 &= CCMR_CC13S_Mask & CCMR_IC13F_Mask;
  tmpccmr2 |= TIM_ICSelection | (u16)(TIM_ICFilter << 4);
  70:	b2bf      	uxth	r7, r7
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3165

  /* Select the Polarity and set the CC3E Bit */
  tmpccer &= CCER_CC3P_Reset;
  tmpccer |= tmp | CCER_CC3E_Set;
  72:	b289      	uxth	r1, r1
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3161
  tmpccer = TIMx->CCER;
  tmp = (u16)(TIM_ICPolarity << 8);

  /* Select the Input and set the filter */
  tmpccmr2 &= CCMR_CC13S_Mask & CCMR_IC13F_Mask;
  tmpccmr2 |= TIM_ICSelection | (u16)(TIM_ICFilter << 4);
  74:	ea47 0202 	orr.w	r2, r7, r2
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3165

  /* Select the Polarity and set the CC3E Bit */
  tmpccer &= CCER_CC3P_Reset;
  tmpccer |= tmp | CCER_CC3E_Set;
  78:	f441 7180 	orr.w	r1, r1, #256	; 0x100
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3168

  /* Write to TIMx CCMR2 and CCER registers */
  TIMx->CCMR2 = tmpccmr2;
  7c:	8382      	strh	r2, [r0, #28]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3169
  TIMx->CCER = tmpccer;
  7e:	8401      	strh	r1, [r0, #32]
TIM_ICInit():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:623
    TI3_Config(TIMx,  TIM_ICInitStruct->TIM_ICPolarity,
               TIM_ICInitStruct->TIM_ICSelection,
               TIM_ICInitStruct->TIM_ICFilter);

    /* Set the Input Capture Prescaler value */
    TIM_SetIC3Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
  80:	88e9      	ldrh	r1, [r5, #6]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:635
               TIM_ICInitStruct->TIM_ICFilter);

    /* Set the Input Capture Prescaler value */
    TIM_SetIC4Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
  }
}
  82:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:623
    TI3_Config(TIMx,  TIM_ICInitStruct->TIM_ICPolarity,
               TIM_ICInitStruct->TIM_ICSelection,
               TIM_ICInitStruct->TIM_ICFilter);

    /* Set the Input Capture Prescaler value */
    TIM_SetIC3Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
  86:	f7ff bffe 	b.w	0 <TIM_ICInit>
TI4_Config():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3200
                       u16 TIM_ICFilter)
{
  u16 tmpccmr2 = 0, tmpccer = 0, tmp = 0;

  /* Disable the Channel 4: Reset the CC4E Bit */
  TIMx->CCER &= CCER_CC4E_Reset;
  8a:	8c07      	ldrh	r7, [r0, #32]
  8c:	f427 5780 	bic.w	r7, r7, #4096	; 0x1000
  90:	043f      	lsls	r7, r7, #16
  92:	0c3f      	lsrs	r7, r7, #16
  94:	8407      	strh	r7, [r0, #32]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3202

  tmpccmr2 = TIMx->CCMR2;
  96:	8b86      	ldrh	r6, [r0, #28]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3203
  tmpccer = TIMx->CCER;
  98:	8c03      	ldrh	r3, [r0, #32]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3207
  tmp = (u16)(TIM_ICPolarity << 12);

  /* Select the Input and set the filter */
  tmpccmr2 &= CCMR_CC24S_Mask & CCMR_IC24F_Mask;
  9a:	f426 7640 	bic.w	r6, r6, #768	; 0x300
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3211
  tmpccmr2 |= (u16)(TIM_ICSelection << 8) | (u16)(TIM_ICFilter << 12);

  /* Select the Polarity and set the CC4E Bit */
  tmpccer &= CCER_CC4P_Reset;
  9e:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3207
  tmpccmr2 = TIMx->CCMR2;
  tmpccer = TIMx->CCER;
  tmp = (u16)(TIM_ICPolarity << 12);

  /* Select the Input and set the filter */
  tmpccmr2 &= CCMR_CC24S_Mask & CCMR_IC24F_Mask;
  a2:	0536      	lsls	r6, r6, #20
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3211
  tmpccmr2 |= (u16)(TIM_ICSelection << 8) | (u16)(TIM_ICFilter << 12);

  /* Select the Polarity and set the CC4E Bit */
  tmpccer &= CCER_CC4P_Reset;
  a4:	041b      	lsls	r3, r3, #16
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3207
  tmpccmr2 = TIMx->CCMR2;
  tmpccer = TIMx->CCER;
  tmp = (u16)(TIM_ICPolarity << 12);

  /* Select the Input and set the filter */
  tmpccmr2 &= CCMR_CC24S_Mask & CCMR_IC24F_Mask;
  a6:	0d36      	lsrs	r6, r6, #20
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3211
  tmpccmr2 |= (u16)(TIM_ICSelection << 8) | (u16)(TIM_ICFilter << 12);

  /* Select the Polarity and set the CC4E Bit */
  tmpccer &= CCER_CC4P_Reset;
  a8:	0c1b      	lsrs	r3, r3, #16
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3208
  tmpccer = TIMx->CCER;
  tmp = (u16)(TIM_ICPolarity << 12);

  /* Select the Input and set the filter */
  tmpccmr2 &= CCMR_CC24S_Mask & CCMR_IC24F_Mask;
  tmpccmr2 |= (u16)(TIM_ICSelection << 8) | (u16)(TIM_ICFilter << 12);
  aa:	ea46 2202 	orr.w	r2, r6, r2, lsl #8
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3212

  /* Select the Polarity and set the CC4E Bit */
  tmpccer &= CCER_CC4P_Reset;
  tmpccer |= tmp | CCER_CC4E_Set;
  ae:	ea43 3301 	orr.w	r3, r3, r1, lsl #12
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3208
  tmpccer = TIMx->CCER;
  tmp = (u16)(TIM_ICPolarity << 12);

  /* Select the Input and set the filter */
  tmpccmr2 &= CCMR_CC24S_Mask & CCMR_IC24F_Mask;
  tmpccmr2 |= (u16)(TIM_ICSelection << 8) | (u16)(TIM_ICFilter << 12);
  b2:	ea42 3208 	orr.w	r2, r2, r8, lsl #12
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3212

  /* Select the Polarity and set the CC4E Bit */
  tmpccer &= CCER_CC4P_Reset;
  tmpccer |= tmp | CCER_CC4E_Set;
  b6:	b29b      	uxth	r3, r3
TIM_ICInit():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:633
    TI4_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
               TIM_ICInitStruct->TIM_ICSelection,
               TIM_ICInitStruct->TIM_ICFilter);

    /* Set the Input Capture Prescaler value */
    TIM_SetIC4Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
  b8:	88e9      	ldrh	r1, [r5, #6]
TI4_Config():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3208
  tmpccer = TIMx->CCER;
  tmp = (u16)(TIM_ICPolarity << 12);

  /* Select the Input and set the filter */
  tmpccmr2 &= CCMR_CC24S_Mask & CCMR_IC24F_Mask;
  tmpccmr2 |= (u16)(TIM_ICSelection << 8) | (u16)(TIM_ICFilter << 12);
  ba:	b292      	uxth	r2, r2
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3212

  /* Select the Polarity and set the CC4E Bit */
  tmpccer &= CCER_CC4P_Reset;
  tmpccer |= tmp | CCER_CC4E_Set;
  bc:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3215

  /* Write to TIMx CCMR2 and CCER registers */
  TIMx->CCMR2 = tmpccmr2;
  c0:	8382      	strh	r2, [r0, #28]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3216
  TIMx->CCER = tmpccer ;
  c2:	8403      	strh	r3, [r0, #32]
TIM_ICInit():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:635
               TIM_ICInitStruct->TIM_ICFilter);

    /* Set the Input Capture Prescaler value */
    TIM_SetIC4Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
  }
}
  c4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:633
    TI4_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
               TIM_ICInitStruct->TIM_ICSelection,
               TIM_ICInitStruct->TIM_ICFilter);

    /* Set the Input Capture Prescaler value */
    TIM_SetIC4Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
  c8:	f7ff bffe 	b.w	0 <TIM_ICInit>

Disassembly of section .text.TIM_SetClockDivision:

00000000 <TIM_SetClockDivision>:
TIM_SetClockDivision():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2783
  /* Check the parameters */
  assert_param(IS_TIM_123458_PERIPH(TIMx));
  assert_param(IS_TIM_CKD_DIV(TIM_CKD));

  /* Reset the CKD Bits */
  TIMx->CR1 &= CR1_CKD_Mask;
   0:	8803      	ldrh	r3, [r0, #0]
   2:	b2db      	uxtb	r3, r3
   4:	8003      	strh	r3, [r0, #0]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2786

  /* Set the CKD value */
  TIMx->CR1 |= TIM_CKD;
   6:	8803      	ldrh	r3, [r0, #0]
   8:	b29b      	uxth	r3, r3
   a:	ea41 0303 	orr.w	r3, r1, r3
   e:	8003      	strh	r3, [r0, #0]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2787
}
  10:	4770      	bx	lr

Disassembly of section .text.TIM_GetCapture1:

00000000 <TIM_GetCapture1>:
TIM_GetCapture1():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2802
{
  /* Check the parameters */
  assert_param(IS_TIM_123458_PERIPH(TIMx));

  /* Get the Capture 1 Register value */
  return TIMx->CCR1;
   0:	8e80      	ldrh	r0, [r0, #52]	; 0x34
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2803
}
   2:	b280      	uxth	r0, r0
   4:	4770      	bx	lr

Disassembly of section .text.TIM_GetCapture2:

00000000 <TIM_GetCapture2>:
TIM_GetCapture2():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2819
{
  /* Check the parameters */
  assert_param(IS_TIM_123458_PERIPH(TIMx));

  /* Get the Capture 2 Register value */
  return TIMx->CCR2;
   0:	8f00      	ldrh	r0, [r0, #56]	; 0x38
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2820
}
   2:	b280      	uxth	r0, r0
   4:	4770      	bx	lr

Disassembly of section .text.TIM_GetCapture3:

00000000 <TIM_GetCapture3>:
TIM_GetCapture3():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2836
{
  /* Check the parameters */
  assert_param(IS_TIM_123458_PERIPH(TIMx)); 

  /* Get the Capture 3 Register value */
  return TIMx->CCR3;
   0:	8f80      	ldrh	r0, [r0, #60]	; 0x3c
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2837
}
   2:	b280      	uxth	r0, r0
   4:	4770      	bx	lr

Disassembly of section .text.TIM_GetCapture4:

00000000 <TIM_GetCapture4>:
TIM_GetCapture4():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2853
{
  /* Check the parameters */
  assert_param(IS_TIM_123458_PERIPH(TIMx));

  /* Get the Capture 4 Register value */
  return TIMx->CCR4;
   0:	f8b0 0040 	ldrh.w	r0, [r0, #64]	; 0x40
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2854
}
   4:	b280      	uxth	r0, r0
   6:	4770      	bx	lr

Disassembly of section .text.TIM_GetCounter:

00000000 <TIM_GetCounter>:
TIM_GetCounter():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2869
{
  /* Check the parameters */
  assert_param(IS_TIM_ALL_PERIPH(TIMx));

  /* Get the Counter Register value */
  return TIMx->CNT;
   0:	8c80      	ldrh	r0, [r0, #36]	; 0x24
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2870
}
   2:	b280      	uxth	r0, r0
   4:	4770      	bx	lr

Disassembly of section .text.TIM_GetPrescaler:

00000000 <TIM_GetPrescaler>:
TIM_GetPrescaler():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2885
{
  /* Check the parameters */
  assert_param(IS_TIM_ALL_PERIPH(TIMx));

  /* Get the Prescaler Register value */
  return TIMx->PSC;
   0:	8d00      	ldrh	r0, [r0, #40]	; 0x28
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2886
}
   2:	b280      	uxth	r0, r0
   4:	4770      	bx	lr

Disassembly of section .text.TIM_GetFlagStatus:

00000000 <TIM_GetFlagStatus>:
TIM_GetFlagStatus():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2918
  /* Check the parameters */
  assert_param(IS_TIM_ALL_PERIPH(TIMx));
  assert_param(IS_TIM_GET_FLAG(TIM_FLAG));
  assert_param(IS_TIM_PERIPH_FLAG(TIMx, TIM_FLAG));
  
  if ((TIMx->SR & TIM_FLAG) != (u16)RESET)
   0:	8a03      	ldrh	r3, [r0, #16]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2920
  {
    bitstatus = SET;
   2:	4219      	tst	r1, r3
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2927
  else
  {
    bitstatus = RESET;
  }
  return bitstatus;
}
   4:	bf0c      	ite	eq
   6:	2000      	moveq	r0, #0
   8:	2001      	movne	r0, #1
   a:	4770      	bx	lr

Disassembly of section .text.TIM_ClearFlag:

00000000 <TIM_ClearFlag>:
TIM_ClearFlag():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2957
  /* Check the parameters */
  assert_param(IS_TIM_ALL_PERIPH(TIMx));
  assert_param(IS_TIM_CLEAR_FLAG(TIMx, TIM_FLAG));
   
  /* Clear the flags */
  TIMx->SR = (u16)~TIM_FLAG;
   0:	43c9      	mvns	r1, r1
   2:	b289      	uxth	r1, r1
   4:	8201      	strh	r1, [r0, #16]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2958
}
   6:	4770      	bx	lr

Disassembly of section .text.TIM_GetITStatus:

00000000 <TIM_GetITStatus>:
TIM_GetITStatus():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2988
  /* Check the parameters */
  assert_param(IS_TIM_ALL_PERIPH(TIMx));
  assert_param(IS_TIM_GET_IT(TIM_IT));
  assert_param(IS_TIM_PERIPH_IT(TIMx, TIM_IT));
   
  itstatus = TIMx->SR & TIM_IT;
   0:	8a03      	ldrh	r3, [r0, #16]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2990
  
  itenable = TIMx->DIER & TIM_IT;
   2:	8982      	ldrh	r2, [r0, #12]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2992

  if ((itstatus != (u16)RESET) && (itenable != (u16)RESET))
   4:	ea11 0003 	ands.w	r0, r1, r3
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2990
  assert_param(IS_TIM_GET_IT(TIM_IT));
  assert_param(IS_TIM_PERIPH_IT(TIMx, TIM_IT));
   
  itstatus = TIMx->SR & TIM_IT;
  
  itenable = TIMx->DIER & TIM_IT;
   8:	b292      	uxth	r2, r2
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2992

  if ((itstatus != (u16)RESET) && (itenable != (u16)RESET))
   a:	d003      	beq.n	14 <TIM_GetITStatus+0x14>
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:2994
  {
    bitstatus = SET;
   c:	4211      	tst	r1, r2
   e:	bf0c      	ite	eq
  10:	2000      	moveq	r0, #0
  12:	2001      	movne	r0, #1
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3001
  else
  {
    bitstatus = RESET;
  }
  return bitstatus;
}
  14:	4770      	bx	lr

Disassembly of section .text.TIM_ClearITPendingBit:

00000000 <TIM_ClearITPendingBit>:
TIM_ClearITPendingBit():
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3028
  /* Check the parameters */
  assert_param(IS_TIM_ALL_PERIPH(TIMx));
  assert_param(IS_TIM_PERIPH_IT(TIMx, TIM_IT));

  /* Clear the IT pending Bit */
  TIMx->SR = (u16)~TIM_IT;
   0:	43c9      	mvns	r1, r1
   2:	b289      	uxth	r1, r1
   4:	8201      	strh	r1, [r0, #16]
C:\cortex\dimmers\stlibrary\src/stm32f10x_tim.c:3029
}
   6:	4770      	bx	lr
