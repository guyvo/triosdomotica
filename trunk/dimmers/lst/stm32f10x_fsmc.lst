
C:\cortex\dimmers\hex\stm32f10x_fsmc.o:     file format elf32-littlearm
C:\cortex\dimmers\hex\stm32f10x_fsmc.o


Disassembly of section .text.FSMC_NORSRAMDeInit:

00000000 <FSMC_NORSRAMDeInit>:
FSMC_NORSRAMDeInit():
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:54
*                       - FSMC_Bank1_NORSRAM4: FSMC Bank1 NOR/SRAM4                       
* Output         : None
* Return         : None
*******************************************************************************/
void FSMC_NORSRAMDeInit(u32 FSMC_Bank)
{
   0:	f04f 4320 	mov.w	r3, #2684354560	; 0xa0000000
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:59
  /* Check the parameter */
  assert_param(IS_FSMC_NORSRAM_BANK(FSMC_Bank));
  
  /* FSMC_Bank1_NORSRAM1 */
  if(FSMC_Bank == FSMC_Bank1_NORSRAM1)
   4:	b918      	cbnz	r0, e <FSMC_NORSRAMDeInit+0xe>
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:61
  {
    FSMC_Bank1->BTCR[FSMC_Bank] = 0x000030DB;    
   6:	f243 02db 	movw	r2, #12507	; 0x30db
   a:	601a      	str	r2, [r3, #0]
   c:	e003      	b.n	16 <FSMC_NORSRAMDeInit+0x16>
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:66
  }
  /* FSMC_Bank1_NORSRAM2,  FSMC_Bank1_NORSRAM3 or FSMC_Bank1_NORSRAM4 */
  else
  {   
    FSMC_Bank1->BTCR[FSMC_Bank] = 0x000030D2; 
   e:	f243 02d2 	movw	r2, #12498	; 0x30d2
  12:	f843 2020 	str.w	r2, [r3, r0, lsl #2]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:69
  }

  FSMC_Bank1->BTCR[FSMC_Bank + 1] = 0x0FFFFFFF;
  16:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
  1a:	f04f 4220 	mov.w	r2, #2684354560	; 0xa0000000
  1e:	1c41      	adds	r1, r0, #1
  20:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:70
  FSMC_Bank1E->BWTR[FSMC_Bank] = 0x0FFFFFFF;  
  24:	4a01      	ldr	r2, [pc, #4]	; (2c <FSMC_NORSRAMDeInit+0x2c>)
  26:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:71
}
  2a:	4770      	bx	lr
  2c:	a0000104 	.word	0xa0000104

Disassembly of section .text.FSMC_NANDDeInit:

00000000 <FSMC_NANDDeInit>:
FSMC_NANDDeInit():
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:89
void FSMC_NANDDeInit(u32 FSMC_Bank)
{
  /* Check the parameter */
  assert_param(IS_FSMC_NAND_BANK(FSMC_Bank));
  
  if(FSMC_Bank == FSMC_Bank2_NAND)
   0:	bf0c2810 	.word	0xbf0c2810
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:92
  {
    /* Set the FSMC_Bank2 registers to their reset values */
    FSMC_Bank2->PCR2 = 0x00000018;
   4:	4b05      	ldreq	r3, [pc, #20]	; (1c <FSMC_NANDDeInit+0x1c>)
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:101
  }
  /* FSMC_Bank3_NAND */  
  else
  {
    /* Set the FSMC_Bank3 registers to their reset values */
    FSMC_Bank3->PCR3 = 0x00000018;
   6:	4b06      	ldrne	r3, [pc, #24]	; (20 <FSMC_NANDDeInit+0x20>)
   8:	2240      	movs	r2, #64	; 0x40
   a:	2118      	movs	r1, #24
   c:	6019      	str	r1, [r3, #0]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:102
    FSMC_Bank3->SR3 = 0x00000040;
   e:	605a      	str	r2, [r3, #4]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:103
    FSMC_Bank3->PMEM3 = 0xFCFCFCFC;
  10:	f04f 32fc 	mov.w	r2, #4244438268	; 0xfcfcfcfc
  14:	609a      	str	r2, [r3, #8]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:104
    FSMC_Bank3->PATT3 = 0xFCFCFCFC; 
  16:	60da      	str	r2, [r3, #12]
  18:	4770      	bx	lr
  1a:	bf00      	nop
  1c:	a0000060 	.word	0xa0000060
  20:	a0000080 	.word	0xa0000080

Disassembly of section .text.FSMC_PCCARDDeInit:

00000000 <FSMC_PCCARDDeInit>:
FSMC_PCCARDDeInit():
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:119
* Return         : None
*******************************************************************************/
void FSMC_PCCARDDeInit(void)
{
  /* Set the FSMC_Bank4 registers to their reset values */
  FSMC_Bank4->PCR4 = 0x00000018; 
   0:	22184b05 	.word	0x22184b05
   4:	601a      	str	r2, [r3, #0]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:120
  FSMC_Bank4->SR4 = 0x00000000;	
   6:	3a18      	subs	r2, #24
   8:	605a      	str	r2, [r3, #4]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:121
  FSMC_Bank4->PMEM4 = 0xFCFCFCFC;
   a:	f04f 32fc 	mov.w	r2, #4244438268	; 0xfcfcfcfc
   e:	609a      	str	r2, [r3, #8]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:122
  FSMC_Bank4->PATT4 = 0xFCFCFCFC;
  10:	60da      	str	r2, [r3, #12]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:123
  FSMC_Bank4->PIO4 = 0xFCFCFCFC;
  12:	611a      	str	r2, [r3, #16]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:124
}
  14:	4770      	bx	lr
  16:	bf00      	nop
  18:	a00000a0 	.word	0xa00000a0

Disassembly of section .text.FSMC_NORSRAMInit:

00000000 <FSMC_NORSRAMInit>:
FSMC_NORSRAMInit():
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:137
*                  the FSMC NOR/SRAM specified Banks.                       
* Output         : None
* Return         : None
*******************************************************************************/
void FSMC_NORSRAMInit(FSMC_NORSRAMInitTypeDef* FSMC_NORSRAMInitStruct)
{ 
   0:	b570      	push	{r4, r5, r6, lr}
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:162
  assert_param(IS_FSMC_ACCESS_MODE(FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AccessMode)); 
  
  /* Bank1 NOR/SRAM control register configuration */ 
  FSMC_Bank1->BTCR[FSMC_NORSRAMInitStruct->FSMC_Bank] = 
            (u32)FSMC_NORSRAMInitStruct->FSMC_DataAddressMux |
            FSMC_NORSRAMInitStruct->FSMC_MemoryType |
   2:	6884      	ldr	r4, [r0, #8]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:161
  assert_param(IS_FSMC_DATA_LATENCY(FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_DataLatency));
  assert_param(IS_FSMC_ACCESS_MODE(FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AccessMode)); 
  
  /* Bank1 NOR/SRAM control register configuration */ 
  FSMC_Bank1->BTCR[FSMC_NORSRAMInitStruct->FSMC_Bank] = 
            (u32)FSMC_NORSRAMInitStruct->FSMC_DataAddressMux |
   4:	6845      	ldr	r5, [r0, #4]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:162
            FSMC_NORSRAMInitStruct->FSMC_MemoryType |
   6:	68c3      	ldr	r3, [r0, #12]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:161
  assert_param(IS_FSMC_DATA_LATENCY(FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_DataLatency));
  assert_param(IS_FSMC_ACCESS_MODE(FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AccessMode)); 
  
  /* Bank1 NOR/SRAM control register configuration */ 
  FSMC_Bank1->BTCR[FSMC_NORSRAMInitStruct->FSMC_Bank] = 
            (u32)FSMC_NORSRAMInitStruct->FSMC_DataAddressMux |
   8:	ea44 0505 	orr.w	r5, r4, r5
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:162
            FSMC_NORSRAMInitStruct->FSMC_MemoryType |
   c:	431d      	orrs	r5, r3
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:163
            FSMC_NORSRAMInitStruct->FSMC_MemoryDataWidth |
   e:	6903      	ldr	r3, [r0, #16]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:170
            FSMC_NORSRAMInitStruct->FSMC_WaitSignalPolarity |
            FSMC_NORSRAMInitStruct->FSMC_WrapMode |
            FSMC_NORSRAMInitStruct->FSMC_WaitSignalActive |
            FSMC_NORSRAMInitStruct->FSMC_WriteOperation |
            FSMC_NORSRAMInitStruct->FSMC_WaitSignal |
            FSMC_NORSRAMInitStruct->FSMC_ExtendedMode |
  10:	6a81      	ldr	r1, [r0, #40]	; 0x28
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:163
  
  /* Bank1 NOR/SRAM control register configuration */ 
  FSMC_Bank1->BTCR[FSMC_NORSRAMInitStruct->FSMC_Bank] = 
            (u32)FSMC_NORSRAMInitStruct->FSMC_DataAddressMux |
            FSMC_NORSRAMInitStruct->FSMC_MemoryType |
            FSMC_NORSRAMInitStruct->FSMC_MemoryDataWidth |
  12:	431d      	orrs	r5, r3
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:164
            FSMC_NORSRAMInitStruct->FSMC_BurstAccessMode |
  14:	6943      	ldr	r3, [r0, #20]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:160
  assert_param(IS_FSMC_CLK_DIV(FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_CLKDivision));
  assert_param(IS_FSMC_DATA_LATENCY(FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_DataLatency));
  assert_param(IS_FSMC_ACCESS_MODE(FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AccessMode)); 
  
  /* Bank1 NOR/SRAM control register configuration */ 
  FSMC_Bank1->BTCR[FSMC_NORSRAMInitStruct->FSMC_Bank] = 
  16:	6802      	ldr	r2, [r0, #0]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:164
            (u32)FSMC_NORSRAMInitStruct->FSMC_DataAddressMux |
            FSMC_NORSRAMInitStruct->FSMC_MemoryType |
            FSMC_NORSRAMInitStruct->FSMC_MemoryDataWidth |
            FSMC_NORSRAMInitStruct->FSMC_BurstAccessMode |
  18:	431d      	orrs	r5, r3
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:165
            FSMC_NORSRAMInitStruct->FSMC_WaitSignalPolarity |
  1a:	6983      	ldr	r3, [r0, #24]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:173
            FSMC_NORSRAMInitStruct->FSMC_WriteOperation |
            FSMC_NORSRAMInitStruct->FSMC_WaitSignal |
            FSMC_NORSRAMInitStruct->FSMC_ExtendedMode |
            FSMC_NORSRAMInitStruct->FSMC_WriteBurst;

  if(FSMC_NORSRAMInitStruct->FSMC_MemoryType == FSMC_MemoryType_NOR)
  1c:	2c08      	cmp	r4, #8
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:165
  FSMC_Bank1->BTCR[FSMC_NORSRAMInitStruct->FSMC_Bank] = 
            (u32)FSMC_NORSRAMInitStruct->FSMC_DataAddressMux |
            FSMC_NORSRAMInitStruct->FSMC_MemoryType |
            FSMC_NORSRAMInitStruct->FSMC_MemoryDataWidth |
            FSMC_NORSRAMInitStruct->FSMC_BurstAccessMode |
            FSMC_NORSRAMInitStruct->FSMC_WaitSignalPolarity |
  1e:	ea45 0503 	orr.w	r5, r5, r3
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:166
            FSMC_NORSRAMInitStruct->FSMC_WrapMode |
  22:	69c3      	ldr	r3, [r0, #28]
  24:	ea45 0503 	orr.w	r5, r5, r3
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:167
            FSMC_NORSRAMInitStruct->FSMC_WaitSignalActive |
  28:	6a03      	ldr	r3, [r0, #32]
  2a:	ea45 0503 	orr.w	r5, r5, r3
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:168
            FSMC_NORSRAMInitStruct->FSMC_WriteOperation |
  2e:	6a43      	ldr	r3, [r0, #36]	; 0x24
  30:	ea45 0503 	orr.w	r5, r5, r3
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:170
            FSMC_NORSRAMInitStruct->FSMC_WaitSignal |
            FSMC_NORSRAMInitStruct->FSMC_ExtendedMode |
  34:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:169
            FSMC_NORSRAMInitStruct->FSMC_BurstAccessMode |
            FSMC_NORSRAMInitStruct->FSMC_WaitSignalPolarity |
            FSMC_NORSRAMInitStruct->FSMC_WrapMode |
            FSMC_NORSRAMInitStruct->FSMC_WaitSignalActive |
            FSMC_NORSRAMInitStruct->FSMC_WriteOperation |
            FSMC_NORSRAMInitStruct->FSMC_WaitSignal |
  36:	ea45 0501 	orr.w	r5, r5, r1
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:170
            FSMC_NORSRAMInitStruct->FSMC_ExtendedMode |
  3a:	ea45 0503 	orr.w	r5, r5, r3
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:160
  assert_param(IS_FSMC_CLK_DIV(FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_CLKDivision));
  assert_param(IS_FSMC_DATA_LATENCY(FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_DataLatency));
  assert_param(IS_FSMC_ACCESS_MODE(FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AccessMode)); 
  
  /* Bank1 NOR/SRAM control register configuration */ 
  FSMC_Bank1->BTCR[FSMC_NORSRAMInitStruct->FSMC_Bank] = 
  3e:	f04f 4320 	mov.w	r3, #2684354560	; 0xa0000000
  42:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:173
            FSMC_NORSRAMInitStruct->FSMC_WriteOperation |
            FSMC_NORSRAMInitStruct->FSMC_WaitSignal |
            FSMC_NORSRAMInitStruct->FSMC_ExtendedMode |
            FSMC_NORSRAMInitStruct->FSMC_WriteBurst;

  if(FSMC_NORSRAMInitStruct->FSMC_MemoryType == FSMC_MemoryType_NOR)
  46:	d105      	bne.n	54 <FSMC_NORSRAMInit+0x54>
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:175
  {
    FSMC_Bank1->BTCR[FSMC_NORSRAMInitStruct->FSMC_Bank] |= (u32)BCR_FACCEN_Set;
  48:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
  4c:	f044 0440 	orr.w	r4, r4, #64	; 0x40
  50:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:180
  }

  /* Bank1 NOR/SRAM timing register configuration */
  FSMC_Bank1->BTCR[FSMC_NORSRAMInitStruct->FSMC_Bank+1] = 
            (u32)FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AddressSetupTime |
  54:	6b03      	ldr	r3, [r0, #48]	; 0x30
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:179
  {
    FSMC_Bank1->BTCR[FSMC_NORSRAMInitStruct->FSMC_Bank] |= (u32)BCR_FACCEN_Set;
  }

  /* Bank1 NOR/SRAM timing register configuration */
  FSMC_Bank1->BTCR[FSMC_NORSRAMInitStruct->FSMC_Bank+1] = 
  56:	1c54      	adds	r4, r2, #1
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:180
            (u32)FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AddressSetupTime |
  58:	699e      	ldr	r6, [r3, #24]
  5a:	681d      	ldr	r5, [r3, #0]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:191
             FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AccessMode;
            

    
  /* Bank1 NOR/SRAM timing register for write configuration, if extended mode is used */
  if(FSMC_NORSRAMInitStruct->FSMC_ExtendedMode == FSMC_ExtendedMode_Enable)
  5c:	f5b1 4f80 	cmp.w	r1, #16384	; 0x4000
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:180
    FSMC_Bank1->BTCR[FSMC_NORSRAMInitStruct->FSMC_Bank] |= (u32)BCR_FACCEN_Set;
  }

  /* Bank1 NOR/SRAM timing register configuration */
  FSMC_Bank1->BTCR[FSMC_NORSRAMInitStruct->FSMC_Bank+1] = 
            (u32)FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AddressSetupTime |
  60:	ea46 0505 	orr.w	r5, r6, r5
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:181
            (FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AddressHoldTime << 4) |
  64:	685e      	ldr	r6, [r3, #4]
  66:	ea45 1506 	orr.w	r5, r5, r6, lsl #4
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:182
            (FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_DataSetupTime << 8) |
  6a:	689e      	ldr	r6, [r3, #8]
  6c:	ea45 2506 	orr.w	r5, r5, r6, lsl #8
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:183
            (FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_BusTurnAroundDuration << 16) |
  70:	68de      	ldr	r6, [r3, #12]
  72:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:184
            (FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_CLKDivision << 20) |
  76:	691e      	ldr	r6, [r3, #16]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:185
            (FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_DataLatency << 24) |
  78:	695b      	ldr	r3, [r3, #20]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:184
  FSMC_Bank1->BTCR[FSMC_NORSRAMInitStruct->FSMC_Bank+1] = 
            (u32)FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AddressSetupTime |
            (FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AddressHoldTime << 4) |
            (FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_DataSetupTime << 8) |
            (FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_BusTurnAroundDuration << 16) |
            (FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_CLKDivision << 20) |
  7a:	ea45 5506 	orr.w	r5, r5, r6, lsl #20
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:185
            (FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_DataLatency << 24) |
  7e:	ea45 6503 	orr.w	r5, r5, r3, lsl #24
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:179
  {
    FSMC_Bank1->BTCR[FSMC_NORSRAMInitStruct->FSMC_Bank] |= (u32)BCR_FACCEN_Set;
  }

  /* Bank1 NOR/SRAM timing register configuration */
  FSMC_Bank1->BTCR[FSMC_NORSRAMInitStruct->FSMC_Bank+1] = 
  82:	f04f 4320 	mov.w	r3, #2684354560	; 0xa0000000
  86:	f843 5024 	str.w	r5, [r3, r4, lsl #2]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:191
             FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AccessMode;
            

    
  /* Bank1 NOR/SRAM timing register for write configuration, if extended mode is used */
  if(FSMC_NORSRAMInitStruct->FSMC_ExtendedMode == FSMC_ExtendedMode_Enable)
  8a:	d111      	bne.n	b0 <FSMC_NORSRAMInit+0xb0>
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:201
    assert_param(IS_FSMC_CLK_DIV(FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_CLKDivision));
    assert_param(IS_FSMC_DATA_LATENCY(FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_DataLatency));
    assert_param(IS_FSMC_ACCESS_MODE(FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_AccessMode));

    FSMC_Bank1E->BWTR[FSMC_NORSRAMInitStruct->FSMC_Bank] = 
              (u32)FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_AddressSetupTime |
  8c:	6b43      	ldr	r3, [r0, #52]	; 0x34
  8e:	6998      	ldr	r0, [r3, #24]
  90:	6819      	ldr	r1, [r3, #0]
  92:	ea40 0101 	orr.w	r1, r0, r1
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:202
              (FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_AddressHoldTime << 4 )|
  96:	6858      	ldr	r0, [r3, #4]
  98:	ea41 1100 	orr.w	r1, r1, r0, lsl #4
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:203
              (FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_DataSetupTime << 8) |
  9c:	6898      	ldr	r0, [r3, #8]
  9e:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:204
              (FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_CLKDivision << 20) |
  a2:	6918      	ldr	r0, [r3, #16]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:205
              (FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_DataLatency << 24) |
  a4:	695b      	ldr	r3, [r3, #20]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:204

    FSMC_Bank1E->BWTR[FSMC_NORSRAMInitStruct->FSMC_Bank] = 
              (u32)FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_AddressSetupTime |
              (FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_AddressHoldTime << 4 )|
              (FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_DataSetupTime << 8) |
              (FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_CLKDivision << 20) |
  a6:	ea41 5100 	orr.w	r1, r1, r0, lsl #20
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:205
              (FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_DataLatency << 24) |
  aa:	ea41 6103 	orr.w	r1, r1, r3, lsl #24
  ae:	e001      	b.n	b4 <FSMC_NORSRAMInit+0xb4>
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:210
               FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_AccessMode;
  }
  else
  {
    FSMC_Bank1E->BWTR[FSMC_NORSRAMInitStruct->FSMC_Bank] = 0x0FFFFFFF;
  b0:	f06f 4170 	mvn.w	r1, #4026531840	; 0xf0000000
  b4:	4b01      	ldr	r3, [pc, #4]	; (bc <FSMC_NORSRAMInit+0xbc>)
  b6:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  ba:	bd70      	pop	{r4, r5, r6, pc}
  bc:	a0000104 	.word	0xa0000104

Disassembly of section .text.FSMC_NANDInit:

00000000 <FSMC_NANDInit>:
FSMC_NANDInit():
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:225
*                    the FSMC NAND specified Banks.                       
* Output         : None
* Return         : None
*******************************************************************************/
void FSMC_NANDInit(FSMC_NANDInitTypeDef* FSMC_NANDInitStruct)
{
   0:	6883b530 	.word	0x6883b530
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:250
  assert_param(IS_FSMC_HOLD_TIME(FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HoldSetupTime));
  assert_param(IS_FSMC_HIZ_TIME(FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HiZSetupTime));
  
  /* Set the tmppcr value according to FSMC_NANDInitStruct parameters */
  tmppcr = (u32)FSMC_NANDInitStruct->FSMC_Waitfeature |
            PCR_MemoryType_NAND |
   4:	6844      	ldr	r4, [r0, #4]
   6:	431c      	orrs	r4, r3
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:252
            FSMC_NANDInitStruct->FSMC_MemoryDataWidth |
            FSMC_NANDInitStruct->FSMC_ECC |
   8:	68c3      	ldr	r3, [r0, #12]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:251
  assert_param(IS_FSMC_HIZ_TIME(FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HiZSetupTime));
  
  /* Set the tmppcr value according to FSMC_NANDInitStruct parameters */
  tmppcr = (u32)FSMC_NANDInitStruct->FSMC_Waitfeature |
            PCR_MemoryType_NAND |
            FSMC_NANDInitStruct->FSMC_MemoryDataWidth |
   a:	f044 0408 	orr.w	r4, r4, #8
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:252
            FSMC_NANDInitStruct->FSMC_ECC |
   e:	431c      	orrs	r4, r3
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:253
            FSMC_NANDInitStruct->FSMC_ECCPageSize |
  10:	6903      	ldr	r3, [r0, #16]
  12:	431c      	orrs	r4, r3
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:254
            FSMC_NANDInitStruct->FSMC_AddressLowMapping |
  14:	6943      	ldr	r3, [r0, #20]
  16:	431c      	orrs	r4, r3
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:255
            (FSMC_NANDInitStruct->FSMC_TCLRSetupTime << 9 )|
  18:	6983      	ldr	r3, [r0, #24]
  1a:	ea44 2443 	orr.w	r4, r4, r3, lsl #9
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:256
            (FSMC_NANDInitStruct->FSMC_TARSetupTime << 13);
  1e:	69c3      	ldr	r3, [r0, #28]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:249
  assert_param(IS_FSMC_WAIT_TIME(FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_WaitSetupTime));
  assert_param(IS_FSMC_HOLD_TIME(FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HoldSetupTime));
  assert_param(IS_FSMC_HIZ_TIME(FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HiZSetupTime));
  
  /* Set the tmppcr value according to FSMC_NANDInitStruct parameters */
  tmppcr = (u32)FSMC_NANDInitStruct->FSMC_Waitfeature |
  20:	ea44 3443 	orr.w	r4, r4, r3, lsl #13
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:259
            FSMC_NANDInitStruct->FSMC_AddressLowMapping |
            (FSMC_NANDInitStruct->FSMC_TCLRSetupTime << 9 )|
            (FSMC_NANDInitStruct->FSMC_TARSetupTime << 13);
            
  /* Set tmppmem value according to FSMC_CommonSpaceTimingStructure parameters */
  tmppmem = (u32)FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTime |
  24:	6a03      	ldr	r3, [r0, #32]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:261
            (FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_WaitSetupTime << 8) |
            (FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HoldSetupTime << 16)|
  26:	6899      	ldr	r1, [r3, #8]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:260
            (FSMC_NANDInitStruct->FSMC_TCLRSetupTime << 9 )|
            (FSMC_NANDInitStruct->FSMC_TARSetupTime << 13);
            
  /* Set tmppmem value according to FSMC_CommonSpaceTimingStructure parameters */
  tmppmem = (u32)FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTime |
            (FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_WaitSetupTime << 8) |
  28:	685a      	ldr	r2, [r3, #4]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:261
            (FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HoldSetupTime << 16)|
  2a:	0409      	lsls	r1, r1, #16
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:259
            FSMC_NANDInitStruct->FSMC_AddressLowMapping |
            (FSMC_NANDInitStruct->FSMC_TCLRSetupTime << 9 )|
            (FSMC_NANDInitStruct->FSMC_TARSetupTime << 13);
            
  /* Set tmppmem value according to FSMC_CommonSpaceTimingStructure parameters */
  tmppmem = (u32)FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTime |
  2c:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:260
            (FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_WaitSetupTime << 8) |
  30:	681a      	ldr	r2, [r3, #0]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:262
            (FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HoldSetupTime << 16)|
            (FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HiZSetupTime << 24); 
  32:	68db      	ldr	r3, [r3, #12]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:260
            (FSMC_NANDInitStruct->FSMC_TCLRSetupTime << 9 )|
            (FSMC_NANDInitStruct->FSMC_TARSetupTime << 13);
            
  /* Set tmppmem value according to FSMC_CommonSpaceTimingStructure parameters */
  tmppmem = (u32)FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTime |
            (FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_WaitSetupTime << 8) |
  34:	4311      	orrs	r1, r2
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:259
            FSMC_NANDInitStruct->FSMC_AddressLowMapping |
            (FSMC_NANDInitStruct->FSMC_TCLRSetupTime << 9 )|
            (FSMC_NANDInitStruct->FSMC_TARSetupTime << 13);
            
  /* Set tmppmem value according to FSMC_CommonSpaceTimingStructure parameters */
  tmppmem = (u32)FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTime |
  36:	ea41 6103 	orr.w	r1, r1, r3, lsl #24
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:265
            (FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_WaitSetupTime << 8) |
            (FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HoldSetupTime << 16)|
            (FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HiZSetupTime << 24); 
            
  /* Set tmppatt value according to FSMC_AttributeSpaceTimingStructure parameters */
  tmppatt = (u32)FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_SetupTime |
  3a:	6a43      	ldr	r3, [r0, #36]	; 0x24
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:267
            (FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_WaitSetupTime << 8) |
            (FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HoldSetupTime << 16)|
  3c:	689a      	ldr	r2, [r3, #8]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:266
            (FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HoldSetupTime << 16)|
            (FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HiZSetupTime << 24); 
            
  /* Set tmppatt value according to FSMC_AttributeSpaceTimingStructure parameters */
  tmppatt = (u32)FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_SetupTime |
            (FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_WaitSetupTime << 8) |
  3e:	685d      	ldr	r5, [r3, #4]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:267
            (FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HoldSetupTime << 16)|
  40:	0412      	lsls	r2, r2, #16
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:265
            (FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_WaitSetupTime << 8) |
            (FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HoldSetupTime << 16)|
            (FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HiZSetupTime << 24); 
            
  /* Set tmppatt value according to FSMC_AttributeSpaceTimingStructure parameters */
  tmppatt = (u32)FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_SetupTime |
  42:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:266
            (FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_WaitSetupTime << 8) |
  46:	681d      	ldr	r5, [r3, #0]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:268
            (FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HoldSetupTime << 16)|
            (FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HiZSetupTime << 24);
  48:	68db      	ldr	r3, [r3, #12]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:266
            (FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HoldSetupTime << 16)|
            (FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HiZSetupTime << 24); 
            
  /* Set tmppatt value according to FSMC_AttributeSpaceTimingStructure parameters */
  tmppatt = (u32)FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_SetupTime |
            (FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_WaitSetupTime << 8) |
  4a:	432a      	orrs	r2, r5
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:265
            (FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_WaitSetupTime << 8) |
            (FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HoldSetupTime << 16)|
            (FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HiZSetupTime << 24); 
            
  /* Set tmppatt value according to FSMC_AttributeSpaceTimingStructure parameters */
  tmppatt = (u32)FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_SetupTime |
  4c:	ea42 6203 	orr.w	r2, r2, r3, lsl #24
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:270
            (FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_WaitSetupTime << 8) |
            (FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HoldSetupTime << 16)|
            (FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HiZSetupTime << 24);
  
  if(FSMC_NANDInitStruct->FSMC_Bank == FSMC_Bank2_NAND)
  50:	6803      	ldr	r3, [r0, #0]
  52:	2b10      	cmp	r3, #16
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:273
  {
    /* FSMC_Bank2_NAND registers configuration */
    FSMC_Bank2->PCR2 = tmppcr;
  54:	bf0c      	ite	eq
  56:	4b03      	ldreq	r3, [pc, #12]	; (64 <FSMC_NANDInit+0x64>)
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:280
    FSMC_Bank2->PATT2 = tmppatt;
  }
  else
  {
    /* FSMC_Bank3_NAND registers configuration */
    FSMC_Bank3->PCR3 = tmppcr;
  58:	4b03      	ldrne	r3, [pc, #12]	; (68 <FSMC_NANDInit+0x68>)
  5a:	601c      	str	r4, [r3, #0]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:281
    FSMC_Bank3->PMEM3 = tmppmem;
  5c:	6099      	str	r1, [r3, #8]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:282
    FSMC_Bank3->PATT3 = tmppatt;
  5e:	60da      	str	r2, [r3, #12]
  60:	bd30      	pop	{r4, r5, pc}
  62:	bf00      	nop
  64:	a0000060 	.word	0xa0000060
  68:	a0000080 	.word	0xa0000080

Disassembly of section .text.FSMC_PCCARDInit:

00000000 <FSMC_PCCARDInit>:
FSMC_PCCARDInit():
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:322
  assert_param(IS_FSMC_HOLD_TIME(FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_HoldSetupTime));
  assert_param(IS_FSMC_HIZ_TIME(FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_HiZSetupTime));
  
  /* Set the PCR4 register value according to FSMC_PCCARDInitStruct parameters */
  FSMC_Bank4->PCR4 = (u32)FSMC_PCCARDInitStruct->FSMC_Waitfeature |
                     FSMC_MemoryDataWidth_16b |  
   0:	6843      	ldr	r3, [r0, #4]
   2:	6802      	ldr	r2, [r0, #0]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:297
*                    the FSMC PCCARD Bank.                       
* Output         : None
* Return         : None
*******************************************************************************/
void FSMC_PCCARDInit(FSMC_PCCARDInitTypeDef* FSMC_PCCARDInitStruct)
{
   4:	b510      	push	{r4, lr}
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:322
  assert_param(IS_FSMC_HOLD_TIME(FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_HoldSetupTime));
  assert_param(IS_FSMC_HIZ_TIME(FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_HiZSetupTime));
  
  /* Set the PCR4 register value according to FSMC_PCCARDInitStruct parameters */
  FSMC_Bank4->PCR4 = (u32)FSMC_PCCARDInitStruct->FSMC_Waitfeature |
                     FSMC_MemoryDataWidth_16b |  
   6:	431a      	orrs	r2, r3
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:324
                     FSMC_PCCARDInitStruct->FSMC_AddressLowMapping |
                     (FSMC_PCCARDInitStruct->FSMC_TCLRSetupTime << 9) |
   8:	6883      	ldr	r3, [r0, #8]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:323
  assert_param(IS_FSMC_HIZ_TIME(FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_HiZSetupTime));
  
  /* Set the PCR4 register value according to FSMC_PCCARDInitStruct parameters */
  FSMC_Bank4->PCR4 = (u32)FSMC_PCCARDInitStruct->FSMC_Waitfeature |
                     FSMC_MemoryDataWidth_16b |  
                     FSMC_PCCARDInitStruct->FSMC_AddressLowMapping |
   a:	f042 0210 	orr.w	r2, r2, #16
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:324
                     (FSMC_PCCARDInitStruct->FSMC_TCLRSetupTime << 9) |
   e:	ea42 2243 	orr.w	r2, r2, r3, lsl #9
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:325
                     (FSMC_PCCARDInitStruct->FSMC_TARSetupTime << 13);
  12:	68c3      	ldr	r3, [r0, #12]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:324
  
  /* Set the PCR4 register value according to FSMC_PCCARDInitStruct parameters */
  FSMC_Bank4->PCR4 = (u32)FSMC_PCCARDInitStruct->FSMC_Waitfeature |
                     FSMC_MemoryDataWidth_16b |  
                     FSMC_PCCARDInitStruct->FSMC_AddressLowMapping |
                     (FSMC_PCCARDInitStruct->FSMC_TCLRSetupTime << 9) |
  14:	ea42 3243 	orr.w	r2, r2, r3, lsl #13
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:321
  assert_param(IS_FSMC_WAIT_TIME(FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_WaitSetupTime));
  assert_param(IS_FSMC_HOLD_TIME(FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_HoldSetupTime));
  assert_param(IS_FSMC_HIZ_TIME(FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_HiZSetupTime));
  
  /* Set the PCR4 register value according to FSMC_PCCARDInitStruct parameters */
  FSMC_Bank4->PCR4 = (u32)FSMC_PCCARDInitStruct->FSMC_Waitfeature |
  18:	4b13      	ldr	r3, [pc, #76]	; (68 <FSMC_PCCARDInit+0x68>)
  1a:	601a      	str	r2, [r3, #0]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:328
                     FSMC_PCCARDInitStruct->FSMC_AddressLowMapping |
                     (FSMC_PCCARDInitStruct->FSMC_TCLRSetupTime << 9) |
                     (FSMC_PCCARDInitStruct->FSMC_TARSetupTime << 13);
            
  /* Set PMEM4 register value according to FSMC_CommonSpaceTimingStructure parameters */
  FSMC_Bank4->PMEM4 = (u32)FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTime |
  1c:	6902      	ldr	r2, [r0, #16]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:330
                      (FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_WaitSetupTime << 8) |
                      (FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HoldSetupTime << 16)|
  1e:	6891      	ldr	r1, [r2, #8]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:329
                     (FSMC_PCCARDInitStruct->FSMC_TCLRSetupTime << 9) |
                     (FSMC_PCCARDInitStruct->FSMC_TARSetupTime << 13);
            
  /* Set PMEM4 register value according to FSMC_CommonSpaceTimingStructure parameters */
  FSMC_Bank4->PMEM4 = (u32)FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTime |
                      (FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_WaitSetupTime << 8) |
  20:	6854      	ldr	r4, [r2, #4]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:330
                      (FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HoldSetupTime << 16)|
  22:	0409      	lsls	r1, r1, #16
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:328
                     FSMC_PCCARDInitStruct->FSMC_AddressLowMapping |
                     (FSMC_PCCARDInitStruct->FSMC_TCLRSetupTime << 9) |
                     (FSMC_PCCARDInitStruct->FSMC_TARSetupTime << 13);
            
  /* Set PMEM4 register value according to FSMC_CommonSpaceTimingStructure parameters */
  FSMC_Bank4->PMEM4 = (u32)FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTime |
  24:	ea41 2104 	orr.w	r1, r1, r4, lsl #8
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:329
                      (FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_WaitSetupTime << 8) |
  28:	6814      	ldr	r4, [r2, #0]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:331
                      (FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HoldSetupTime << 16)|
                      (FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HiZSetupTime << 24); 
  2a:	68d2      	ldr	r2, [r2, #12]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:329
                     (FSMC_PCCARDInitStruct->FSMC_TCLRSetupTime << 9) |
                     (FSMC_PCCARDInitStruct->FSMC_TARSetupTime << 13);
            
  /* Set PMEM4 register value according to FSMC_CommonSpaceTimingStructure parameters */
  FSMC_Bank4->PMEM4 = (u32)FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTime |
                      (FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_WaitSetupTime << 8) |
  2c:	4321      	orrs	r1, r4
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:330
                      (FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HoldSetupTime << 16)|
  2e:	ea41 6202 	orr.w	r2, r1, r2, lsl #24
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:328
                     FSMC_PCCARDInitStruct->FSMC_AddressLowMapping |
                     (FSMC_PCCARDInitStruct->FSMC_TCLRSetupTime << 9) |
                     (FSMC_PCCARDInitStruct->FSMC_TARSetupTime << 13);
            
  /* Set PMEM4 register value according to FSMC_CommonSpaceTimingStructure parameters */
  FSMC_Bank4->PMEM4 = (u32)FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTime |
  32:	609a      	str	r2, [r3, #8]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:334
                      (FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_WaitSetupTime << 8) |
                      (FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HoldSetupTime << 16)|
                      (FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HiZSetupTime << 24); 
            
  /* Set PATT4 register value according to FSMC_AttributeSpaceTimingStructure parameters */
  FSMC_Bank4->PATT4 = (u32)FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_SetupTime |
  34:	6942      	ldr	r2, [r0, #20]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:336
                      (FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_WaitSetupTime << 8) |
                      (FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HoldSetupTime << 16)|
  36:	6891      	ldr	r1, [r2, #8]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:335
                      (FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HoldSetupTime << 16)|
                      (FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HiZSetupTime << 24); 
            
  /* Set PATT4 register value according to FSMC_AttributeSpaceTimingStructure parameters */
  FSMC_Bank4->PATT4 = (u32)FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_SetupTime |
                      (FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_WaitSetupTime << 8) |
  38:	6854      	ldr	r4, [r2, #4]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:336
                      (FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HoldSetupTime << 16)|
  3a:	0409      	lsls	r1, r1, #16
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:334
                      (FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_WaitSetupTime << 8) |
                      (FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HoldSetupTime << 16)|
                      (FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HiZSetupTime << 24); 
            
  /* Set PATT4 register value according to FSMC_AttributeSpaceTimingStructure parameters */
  FSMC_Bank4->PATT4 = (u32)FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_SetupTime |
  3c:	ea41 2104 	orr.w	r1, r1, r4, lsl #8
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:335
                      (FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_WaitSetupTime << 8) |
  40:	6814      	ldr	r4, [r2, #0]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:337
                      (FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HoldSetupTime << 16)|
                      (FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HiZSetupTime << 24);	
  42:	68d2      	ldr	r2, [r2, #12]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:335
                      (FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HoldSetupTime << 16)|
                      (FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HiZSetupTime << 24); 
            
  /* Set PATT4 register value according to FSMC_AttributeSpaceTimingStructure parameters */
  FSMC_Bank4->PATT4 = (u32)FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_SetupTime |
                      (FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_WaitSetupTime << 8) |
  44:	4321      	orrs	r1, r4
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:336
                      (FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HoldSetupTime << 16)|
  46:	ea41 6202 	orr.w	r2, r1, r2, lsl #24
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:334
                      (FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_WaitSetupTime << 8) |
                      (FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HoldSetupTime << 16)|
                      (FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HiZSetupTime << 24); 
            
  /* Set PATT4 register value according to FSMC_AttributeSpaceTimingStructure parameters */
  FSMC_Bank4->PATT4 = (u32)FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_SetupTime |
  4a:	60da      	str	r2, [r3, #12]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:340
                      (FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_WaitSetupTime << 8) |
                      (FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HoldSetupTime << 16)|
                      (FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HiZSetupTime << 24);	
            
  /* Set PIO4 register value according to FSMC_IOSpaceTimingStructure parameters */
  FSMC_Bank4->PIO4 = (u32)FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_SetupTime |
  4c:	6982      	ldr	r2, [r0, #24]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:342
                     (FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_WaitSetupTime << 8) |
                     (FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_HoldSetupTime << 16)|
  4e:	6891      	ldr	r1, [r2, #8]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:341
                      (FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HoldSetupTime << 16)|
                      (FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HiZSetupTime << 24);	
            
  /* Set PIO4 register value according to FSMC_IOSpaceTimingStructure parameters */
  FSMC_Bank4->PIO4 = (u32)FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_SetupTime |
                     (FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_WaitSetupTime << 8) |
  50:	6850      	ldr	r0, [r2, #4]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:342
                     (FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_HoldSetupTime << 16)|
  52:	0409      	lsls	r1, r1, #16
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:340
                      (FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_WaitSetupTime << 8) |
                      (FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HoldSetupTime << 16)|
                      (FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HiZSetupTime << 24);	
            
  /* Set PIO4 register value according to FSMC_IOSpaceTimingStructure parameters */
  FSMC_Bank4->PIO4 = (u32)FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_SetupTime |
  54:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:341
                     (FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_WaitSetupTime << 8) |
  58:	6810      	ldr	r0, [r2, #0]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:343
                     (FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_HoldSetupTime << 16)|
                     (FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_HiZSetupTime << 24);             
  5a:	68d2      	ldr	r2, [r2, #12]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:341
                      (FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HoldSetupTime << 16)|
                      (FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HiZSetupTime << 24);	
            
  /* Set PIO4 register value according to FSMC_IOSpaceTimingStructure parameters */
  FSMC_Bank4->PIO4 = (u32)FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_SetupTime |
                     (FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_WaitSetupTime << 8) |
  5c:	4301      	orrs	r1, r0
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:342
                     (FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_HoldSetupTime << 16)|
  5e:	ea41 6202 	orr.w	r2, r1, r2, lsl #24
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:340
                      (FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_WaitSetupTime << 8) |
                      (FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HoldSetupTime << 16)|
                      (FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HiZSetupTime << 24);	
            
  /* Set PIO4 register value according to FSMC_IOSpaceTimingStructure parameters */
  FSMC_Bank4->PIO4 = (u32)FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_SetupTime |
  62:	611a      	str	r2, [r3, #16]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:344
                     (FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_WaitSetupTime << 8) |
                     (FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_HoldSetupTime << 16)|
                     (FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_HiZSetupTime << 24);             
}
  64:	bd10      	pop	{r4, pc}
  66:	bf00      	nop
  68:	a00000a0 	.word	0xa00000a0

Disassembly of section .text.FSMC_NORSRAMStructInit:

00000000 <FSMC_NORSRAMStructInit>:
FSMC_NORSRAMStructInit():
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:358
*******************************************************************************/
void FSMC_NORSRAMStructInit(FSMC_NORSRAMInitTypeDef* FSMC_NORSRAMInitStruct)
{  
  /* Reset NOR/SRAM Init structure parameters values */
  FSMC_NORSRAMInitStruct->FSMC_Bank = FSMC_Bank1_NORSRAM1;
  FSMC_NORSRAMInitStruct->FSMC_DataAddressMux = FSMC_DataAddressMux_Enable;
   0:	2202      	movs	r2, #2
   2:	6042      	str	r2, [r0, #4]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:365
  FSMC_NORSRAMInitStruct->FSMC_MemoryDataWidth = FSMC_MemoryDataWidth_8b;
  FSMC_NORSRAMInitStruct->FSMC_BurstAccessMode = FSMC_BurstAccessMode_Disable;
  FSMC_NORSRAMInitStruct->FSMC_WaitSignalPolarity = FSMC_WaitSignalPolarity_Low;
  FSMC_NORSRAMInitStruct->FSMC_WrapMode = FSMC_WrapMode_Disable;
  FSMC_NORSRAMInitStruct->FSMC_WaitSignalActive = FSMC_WaitSignalActive_BeforeWaitState;
  FSMC_NORSRAMInitStruct->FSMC_WriteOperation = FSMC_WriteOperation_Enable;
   4:	f44f 5280 	mov.w	r2, #4096	; 0x1000
   8:	6202      	str	r2, [r0, #32]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:369
  FSMC_NORSRAMInitStruct->FSMC_WaitSignal = FSMC_WaitSignal_Enable;
  FSMC_NORSRAMInitStruct->FSMC_ExtendedMode = FSMC_ExtendedMode_Disable;
  FSMC_NORSRAMInitStruct->FSMC_WriteBurst = FSMC_WriteBurst_Disable;
  FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AddressSetupTime = 0xF;
   a:	6b01      	ldr	r1, [r0, #48]	; 0x30
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:366
  FSMC_NORSRAMInitStruct->FSMC_BurstAccessMode = FSMC_BurstAccessMode_Disable;
  FSMC_NORSRAMInitStruct->FSMC_WaitSignalPolarity = FSMC_WaitSignalPolarity_Low;
  FSMC_NORSRAMInitStruct->FSMC_WrapMode = FSMC_WrapMode_Disable;
  FSMC_NORSRAMInitStruct->FSMC_WaitSignalActive = FSMC_WaitSignalActive_BeforeWaitState;
  FSMC_NORSRAMInitStruct->FSMC_WriteOperation = FSMC_WriteOperation_Enable;
  FSMC_NORSRAMInitStruct->FSMC_WaitSignal = FSMC_WaitSignal_Enable;
   c:	f44f 5200 	mov.w	r2, #8192	; 0x2000
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:355
*                    structure which will be initialized.
* Output         : None
* Return         : None
*******************************************************************************/
void FSMC_NORSRAMStructInit(FSMC_NORSRAMInitTypeDef* FSMC_NORSRAMInitStruct)
{  
  10:	b510      	push	{r4, lr}
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:366
  FSMC_NORSRAMInitStruct->FSMC_BurstAccessMode = FSMC_BurstAccessMode_Disable;
  FSMC_NORSRAMInitStruct->FSMC_WaitSignalPolarity = FSMC_WaitSignalPolarity_Low;
  FSMC_NORSRAMInitStruct->FSMC_WrapMode = FSMC_WrapMode_Disable;
  FSMC_NORSRAMInitStruct->FSMC_WaitSignalActive = FSMC_WaitSignalActive_BeforeWaitState;
  FSMC_NORSRAMInitStruct->FSMC_WriteOperation = FSMC_WriteOperation_Enable;
  FSMC_NORSRAMInitStruct->FSMC_WaitSignal = FSMC_WaitSignal_Enable;
  12:	6242      	str	r2, [r0, #36]	; 0x24
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:357
* Return         : None
*******************************************************************************/
void FSMC_NORSRAMStructInit(FSMC_NORSRAMInitTypeDef* FSMC_NORSRAMInitStruct)
{  
  /* Reset NOR/SRAM Init structure parameters values */
  FSMC_NORSRAMInitStruct->FSMC_Bank = FSMC_Bank1_NORSRAM1;
  14:	2300      	movs	r3, #0
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:369
  FSMC_NORSRAMInitStruct->FSMC_WaitSignalActive = FSMC_WaitSignalActive_BeforeWaitState;
  FSMC_NORSRAMInitStruct->FSMC_WriteOperation = FSMC_WriteOperation_Enable;
  FSMC_NORSRAMInitStruct->FSMC_WaitSignal = FSMC_WaitSignal_Enable;
  FSMC_NORSRAMInitStruct->FSMC_ExtendedMode = FSMC_ExtendedMode_Disable;
  FSMC_NORSRAMInitStruct->FSMC_WriteBurst = FSMC_WriteBurst_Disable;
  FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AddressSetupTime = 0xF;
  16:	220f      	movs	r2, #15
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:371
  FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AddressHoldTime = 0xF;
  FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_DataSetupTime = 0xFF;
  18:	24ff      	movs	r4, #255	; 0xff
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:357
* Return         : None
*******************************************************************************/
void FSMC_NORSRAMStructInit(FSMC_NORSRAMInitTypeDef* FSMC_NORSRAMInitStruct)
{  
  /* Reset NOR/SRAM Init structure parameters values */
  FSMC_NORSRAMInitStruct->FSMC_Bank = FSMC_Bank1_NORSRAM1;
  1a:	6003      	str	r3, [r0, #0]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:359
  FSMC_NORSRAMInitStruct->FSMC_DataAddressMux = FSMC_DataAddressMux_Enable;
  FSMC_NORSRAMInitStruct->FSMC_MemoryType = FSMC_MemoryType_SRAM;
  1c:	6083      	str	r3, [r0, #8]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:360
  FSMC_NORSRAMInitStruct->FSMC_MemoryDataWidth = FSMC_MemoryDataWidth_8b;
  1e:	60c3      	str	r3, [r0, #12]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:361
  FSMC_NORSRAMInitStruct->FSMC_BurstAccessMode = FSMC_BurstAccessMode_Disable;
  20:	6103      	str	r3, [r0, #16]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:362
  FSMC_NORSRAMInitStruct->FSMC_WaitSignalPolarity = FSMC_WaitSignalPolarity_Low;
  22:	6143      	str	r3, [r0, #20]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:363
  FSMC_NORSRAMInitStruct->FSMC_WrapMode = FSMC_WrapMode_Disable;
  24:	6183      	str	r3, [r0, #24]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:364
  FSMC_NORSRAMInitStruct->FSMC_WaitSignalActive = FSMC_WaitSignalActive_BeforeWaitState;
  26:	61c3      	str	r3, [r0, #28]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:367
  FSMC_NORSRAMInitStruct->FSMC_WriteOperation = FSMC_WriteOperation_Enable;
  FSMC_NORSRAMInitStruct->FSMC_WaitSignal = FSMC_WaitSignal_Enable;
  FSMC_NORSRAMInitStruct->FSMC_ExtendedMode = FSMC_ExtendedMode_Disable;
  28:	6283      	str	r3, [r0, #40]	; 0x28
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:368
  FSMC_NORSRAMInitStruct->FSMC_WriteBurst = FSMC_WriteBurst_Disable;
  2a:	62c3      	str	r3, [r0, #44]	; 0x2c
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:369
  FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AddressSetupTime = 0xF;
  2c:	600a      	str	r2, [r1, #0]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:370
  FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AddressHoldTime = 0xF;
  2e:	604a      	str	r2, [r1, #4]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:371
  FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_DataSetupTime = 0xFF;
  30:	608c      	str	r4, [r1, #8]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:372
  FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_BusTurnAroundDuration = 0xF;
  32:	60ca      	str	r2, [r1, #12]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:373
  FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_CLKDivision = 0xF;
  34:	610a      	str	r2, [r1, #16]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:374
  FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_DataLatency = 0xF;
  36:	614a      	str	r2, [r1, #20]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:375
  FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AccessMode = FSMC_AccessMode_A; 
  38:	618b      	str	r3, [r1, #24]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:376
  FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_AddressSetupTime = 0xF;
  3a:	6b41      	ldr	r1, [r0, #52]	; 0x34
  3c:	600a      	str	r2, [r1, #0]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:377
  FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_AddressHoldTime = 0xF;
  3e:	604a      	str	r2, [r1, #4]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:378
  FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_DataSetupTime = 0xFF;
  40:	608c      	str	r4, [r1, #8]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:379
  FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_BusTurnAroundDuration = 0xF;
  42:	60ca      	str	r2, [r1, #12]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:380
  FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_CLKDivision = 0xF;
  44:	610a      	str	r2, [r1, #16]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:381
  FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_DataLatency = 0xF;
  46:	614a      	str	r2, [r1, #20]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:382
  FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_AccessMode = FSMC_AccessMode_A;
  48:	618b      	str	r3, [r1, #24]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:383
}
  4a:	bd10      	pop	{r4, pc}

Disassembly of section .text.FSMC_NANDStructInit:

00000000 <FSMC_NANDStructInit>:
FSMC_NANDStructInit():
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:396
* Return         : None
*******************************************************************************/
void FSMC_NANDStructInit(FSMC_NANDInitTypeDef* FSMC_NANDInitStruct)
{ 
  /* Reset NAND Init structure parameters values */
  FSMC_NANDInitStruct->FSMC_Bank = FSMC_Bank2_NAND;
   0:	2310      	movs	r3, #16
   2:	6003      	str	r3, [r0, #0]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:404
  FSMC_NANDInitStruct->FSMC_ECC = FSMC_ECC_Disable;
  FSMC_NANDInitStruct->FSMC_ECCPageSize = FSMC_ECCPageSize_256Bytes;
  FSMC_NANDInitStruct->FSMC_AddressLowMapping = FSMC_AddressLowMapping_Direct;
  FSMC_NANDInitStruct->FSMC_TCLRSetupTime = 0x0;
  FSMC_NANDInitStruct->FSMC_TARSetupTime = 0x0;
  FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTime = 0xFC;
   4:	6a02      	ldr	r2, [r0, #32]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:397
*******************************************************************************/
void FSMC_NANDStructInit(FSMC_NANDInitTypeDef* FSMC_NANDInitStruct)
{ 
  /* Reset NAND Init structure parameters values */
  FSMC_NANDInitStruct->FSMC_Bank = FSMC_Bank2_NAND;
  FSMC_NANDInitStruct->FSMC_Waitfeature = FSMC_Waitfeature_Disable;
   6:	3b10      	subs	r3, #16
   8:	6043      	str	r3, [r0, #4]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:398
  FSMC_NANDInitStruct->FSMC_MemoryDataWidth = FSMC_MemoryDataWidth_8b;
   a:	6083      	str	r3, [r0, #8]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:399
  FSMC_NANDInitStruct->FSMC_ECC = FSMC_ECC_Disable;
   c:	60c3      	str	r3, [r0, #12]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:400
  FSMC_NANDInitStruct->FSMC_ECCPageSize = FSMC_ECCPageSize_256Bytes;
   e:	6103      	str	r3, [r0, #16]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:401
  FSMC_NANDInitStruct->FSMC_AddressLowMapping = FSMC_AddressLowMapping_Direct;
  10:	6143      	str	r3, [r0, #20]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:402
  FSMC_NANDInitStruct->FSMC_TCLRSetupTime = 0x0;
  12:	6183      	str	r3, [r0, #24]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:403
  FSMC_NANDInitStruct->FSMC_TARSetupTime = 0x0;
  14:	61c3      	str	r3, [r0, #28]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:404
  FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTime = 0xFC;
  16:	33fc      	adds	r3, #252	; 0xfc
  18:	6013      	str	r3, [r2, #0]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:405
  FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_WaitSetupTime = 0xFC;
  1a:	6053      	str	r3, [r2, #4]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:406
  FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HoldSetupTime = 0xFC;
  1c:	6093      	str	r3, [r2, #8]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:407
  FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HiZSetupTime = 0xFC;
  1e:	60d3      	str	r3, [r2, #12]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:408
  FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_SetupTime = 0xFC;
  20:	6a42      	ldr	r2, [r0, #36]	; 0x24
  22:	6013      	str	r3, [r2, #0]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:409
  FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_WaitSetupTime = 0xFC;
  24:	6053      	str	r3, [r2, #4]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:410
  FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HoldSetupTime = 0xFC;
  26:	6093      	str	r3, [r2, #8]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:411
  FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HiZSetupTime = 0xFC;	  
  28:	60d3      	str	r3, [r2, #12]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:412
}
  2a:	4770      	bx	lr

Disassembly of section .text.FSMC_PCCARDStructInit:

00000000 <FSMC_PCCARDStructInit>:
FSMC_PCCARDStructInit():
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:429
  /* Reset PCCARD Init structure parameters values */
  FSMC_PCCARDInitStruct->FSMC_Waitfeature = FSMC_Waitfeature_Disable;
  FSMC_PCCARDInitStruct->FSMC_AddressLowMapping = FSMC_AddressLowMapping_Direct;
  FSMC_PCCARDInitStruct->FSMC_TCLRSetupTime = 0x0;
  FSMC_PCCARDInitStruct->FSMC_TARSetupTime = 0x0;
  FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTime = 0xFC;
   0:	6902      	ldr	r2, [r0, #16]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:425
* Return         : None
*******************************************************************************/
void FSMC_PCCARDStructInit(FSMC_PCCARDInitTypeDef* FSMC_PCCARDInitStruct)
{
  /* Reset PCCARD Init structure parameters values */
  FSMC_PCCARDInitStruct->FSMC_Waitfeature = FSMC_Waitfeature_Disable;
   2:	2300      	movs	r3, #0
   4:	6003      	str	r3, [r0, #0]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:426
  FSMC_PCCARDInitStruct->FSMC_AddressLowMapping = FSMC_AddressLowMapping_Direct;
   6:	6043      	str	r3, [r0, #4]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:427
  FSMC_PCCARDInitStruct->FSMC_TCLRSetupTime = 0x0;
   8:	6083      	str	r3, [r0, #8]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:428
  FSMC_PCCARDInitStruct->FSMC_TARSetupTime = 0x0;
   a:	60c3      	str	r3, [r0, #12]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:429
  FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTime = 0xFC;
   c:	33fc      	adds	r3, #252	; 0xfc
   e:	6013      	str	r3, [r2, #0]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:430
  FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_WaitSetupTime = 0xFC;
  10:	6053      	str	r3, [r2, #4]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:431
  FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HoldSetupTime = 0xFC;
  12:	6093      	str	r3, [r2, #8]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:432
  FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HiZSetupTime = 0xFC;
  14:	60d3      	str	r3, [r2, #12]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:433
  FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_SetupTime = 0xFC;
  16:	6942      	ldr	r2, [r0, #20]
  18:	6013      	str	r3, [r2, #0]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:434
  FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_WaitSetupTime = 0xFC;
  1a:	6053      	str	r3, [r2, #4]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:435
  FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HoldSetupTime = 0xFC;
  1c:	6093      	str	r3, [r2, #8]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:436
  FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HiZSetupTime = 0xFC;	
  1e:	60d3      	str	r3, [r2, #12]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:437
  FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_SetupTime = 0xFC;
  20:	6982      	ldr	r2, [r0, #24]
  22:	6013      	str	r3, [r2, #0]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:438
  FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_WaitSetupTime = 0xFC;
  24:	6053      	str	r3, [r2, #4]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:439
  FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_HoldSetupTime = 0xFC;
  26:	6093      	str	r3, [r2, #8]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:440
  FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_HiZSetupTime = 0xFC;
  28:	60d3      	str	r3, [r2, #12]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:441
}
  2a:	4770      	bx	lr

Disassembly of section .text.FSMC_NORSRAMCmd:

00000000 <FSMC_NORSRAMCmd>:
FSMC_NORSRAMCmd():
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:458
*                    This parameter can be: ENABLE or DISABLE.
* Output         : None
* Return         : None
*******************************************************************************/
void FSMC_NORSRAMCmd(u32 FSMC_Bank, FunctionalState NewState)
{
   0:	f04f 4320 	mov.w	r3, #2684354560	; 0xa0000000
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:462
  assert_param(IS_FSMC_NORSRAM_BANK(FSMC_Bank));
  assert_param(IS_FUNCTIONAL_STATE(NewState));
  
  if (NewState != DISABLE)
   4:	b121      	cbz	r1, 10 <FSMC_NORSRAMCmd+0x10>
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:465
  {
    /* Enable the selected NOR/SRAM Bank by setting the PBKEN bit in the BCRx register */
    FSMC_Bank1->BTCR[FSMC_Bank] |= BCR_MBKEN_Set;
   6:	f853 2020 	ldr.w	r2, [r3, r0, lsl #2]
   a:	f042 0201 	orr.w	r2, r2, #1
   e:	e004      	b.n	1a <FSMC_NORSRAMCmd+0x1a>
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:470
  }
  else
  {
    /* Disable the selected NOR/SRAM Bank by clearing the PBKEN bit in the BCRx register */
    FSMC_Bank1->BTCR[FSMC_Bank] &= BCR_MBKEN_Reset;
  10:	f853 1020 	ldr.w	r1, [r3, r0, lsl #2]
  14:	4a02      	ldr	r2, [pc, #8]	; (20 <FSMC_NORSRAMCmd+0x20>)
  16:	ea01 0202 	and.w	r2, r1, r2
  1a:	f843 2020 	str.w	r2, [r3, r0, lsl #2]
  1e:	4770      	bx	lr
  20:	000ffffe 	.word	0x000ffffe

Disassembly of section .text.FSMC_NANDCmd:

00000000 <FSMC_NANDCmd>:
FSMC_NANDCmd():
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:491
void FSMC_NANDCmd(u32 FSMC_Bank, FunctionalState NewState)
{
  assert_param(IS_FSMC_NAND_BANK(FSMC_Bank));
  assert_param(IS_FUNCTIONAL_STATE(NewState));
  
  if (NewState != DISABLE)
   0:	b141      	cbz	r1, 14 <FSMC_NANDCmd+0x14>
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:494
  {
    /* Enable the selected NAND Bank by setting the PBKEN bit in the PCRx register */
    if(FSMC_Bank == FSMC_Bank2_NAND)
   2:	2810      	cmp	r0, #16
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:496
    {
      FSMC_Bank2->PCR2 |= PCR_PBKEN_Set;
   4:	bf0c      	ite	eq
   6:	4b08      	ldreq	r3, [pc, #32]	; (28 <FSMC_NANDCmd+0x28>)
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:500
    }
    else
    {
      FSMC_Bank3->PCR3 |= PCR_PBKEN_Set;
   8:	4b08      	ldrne	r3, [pc, #32]	; (2c <FSMC_NANDCmd+0x2c>)
   a:	681a      	ldr	r2, [r3, #0]
   c:	f042 0204 	orr.w	r2, r2, #4
  10:	601a      	str	r2, [r3, #0]
  12:	4770      	bx	lr
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:506
    }
  }
  else
  {
    /* Disable the selected NAND Bank by clearing the PBKEN bit in the PCRx register */
    if(FSMC_Bank == FSMC_Bank2_NAND)
  14:	2810      	cmp	r0, #16
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:508
    {
      FSMC_Bank2->PCR2 &= PCR_PBKEN_Reset;
  16:	bf0c      	ite	eq
  18:	4a03      	ldreq	r2, [pc, #12]	; (28 <FSMC_NANDCmd+0x28>)
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:512
    }
    else
    {
      FSMC_Bank3->PCR3 &= PCR_PBKEN_Reset;
  1a:	4a04      	ldrne	r2, [pc, #16]	; (2c <FSMC_NANDCmd+0x2c>)
  1c:	4b04      	ldr	r3, [pc, #16]	; (30 <FSMC_NANDCmd+0x30>)
  1e:	6811      	ldr	r1, [r2, #0]
  20:	ea01 0303 	and.w	r3, r1, r3
  24:	6013      	str	r3, [r2, #0]
  26:	4770      	bx	lr
  28:	a0000060 	.word	0xa0000060
  2c:	a0000080 	.word	0xa0000080
  30:	000ffffb 	.word	0x000ffffb

Disassembly of section .text.FSMC_PCCARDCmd:

00000000 <FSMC_PCCARDCmd>:
FSMC_PCCARDCmd():
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:526
*                    This parameter can be: ENABLE or DISABLE.
* Output         : None
* Return         : None
*******************************************************************************/
void FSMC_PCCARDCmd(FunctionalState NewState)
{
   0:	b1184b05 	.word	0xb1184b05
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:532
  assert_param(IS_FUNCTIONAL_STATE(NewState));
  
  if (NewState != DISABLE)
  {
    /* Enable the PCCARD Bank by setting the PBKEN bit in the PCR4 register */
    FSMC_Bank4->PCR4 |= PCR_PBKEN_Set;
   4:	681a      	ldr	r2, [r3, #0]
   6:	f042 0204 	orr.w	r2, r2, #4
   a:	e003      	b.n	14 <FSMC_PCCARDCmd+0x14>
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:537
  }
  else
  {
    /* Disable the PCCARD Bank by clearing the PBKEN bit in the PCR4 register */
    FSMC_Bank4->PCR4 &= PCR_PBKEN_Reset;
   c:	6819      	ldr	r1, [r3, #0]
   e:	4a03      	ldr	r2, [pc, #12]	; (1c <FSMC_PCCARDCmd+0x1c>)
  10:	ea01 0202 	and.w	r2, r1, r2
  14:	601a      	str	r2, [r3, #0]
  16:	4770      	bx	lr
  18:	a00000a0 	.word	0xa00000a0
  1c:	000ffffb 	.word	0x000ffffb

Disassembly of section .text.FSMC_NANDECCCmd:

00000000 <FSMC_NANDECCCmd>:
FSMC_NANDECCCmd():
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:558
void FSMC_NANDECCCmd(u32 FSMC_Bank, FunctionalState NewState)
{
  assert_param(IS_FSMC_NAND_BANK(FSMC_Bank));
  assert_param(IS_FUNCTIONAL_STATE(NewState));
  
  if (NewState != DISABLE)
   0:	b141      	cbz	r1, 14 <FSMC_NANDECCCmd+0x14>
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:561
  {
    /* Enable the selected NAND Bank ECC function by setting the ECCEN bit in the PCRx register */
    if(FSMC_Bank == FSMC_Bank2_NAND)
   2:	2810      	cmp	r0, #16
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:563
    {
      FSMC_Bank2->PCR2 |= PCR_ECCEN_Set;
   4:	bf0c      	ite	eq
   6:	4b08      	ldreq	r3, [pc, #32]	; (28 <FSMC_NANDECCCmd+0x28>)
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:567
    }
    else
    {
      FSMC_Bank3->PCR3 |= PCR_ECCEN_Set;
   8:	4b08      	ldrne	r3, [pc, #32]	; (2c <FSMC_NANDECCCmd+0x2c>)
   a:	681a      	ldr	r2, [r3, #0]
   c:	f042 0240 	orr.w	r2, r2, #64	; 0x40
  10:	601a      	str	r2, [r3, #0]
  12:	4770      	bx	lr
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:573
    }
  }
  else
  {
    /* Disable the selected NAND Bank ECC function by clearing the ECCEN bit in the PCRx register */
    if(FSMC_Bank == FSMC_Bank2_NAND)
  14:	2810      	cmp	r0, #16
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:575
    {
      FSMC_Bank2->PCR2 &= PCR_ECCEN_Reset;
  16:	bf0c      	ite	eq
  18:	4a03      	ldreq	r2, [pc, #12]	; (28 <FSMC_NANDECCCmd+0x28>)
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:579
    }
    else
    {
      FSMC_Bank3->PCR3 &= PCR_ECCEN_Reset;
  1a:	4a04      	ldrne	r2, [pc, #16]	; (2c <FSMC_NANDECCCmd+0x2c>)
  1c:	4b04      	ldr	r3, [pc, #16]	; (30 <FSMC_NANDECCCmd+0x30>)
  1e:	6811      	ldr	r1, [r2, #0]
  20:	ea01 0303 	and.w	r3, r1, r3
  24:	6013      	str	r3, [r2, #0]
  26:	4770      	bx	lr
  28:	a0000060 	.word	0xa0000060
  2c:	a0000080 	.word	0xa0000080
  30:	000fffbf 	.word	0x000fffbf

Disassembly of section .text.FSMC_GetECC:

00000000 <FSMC_GetECC>:
FSMC_GetECC():
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:598
*******************************************************************************/
u32 FSMC_GetECC(u32 FSMC_Bank)
{
  u32 eccval = 0x00000000;
  
  if(FSMC_Bank == FSMC_Bank2_NAND)
   0:	d1022810 	.word	0xd1022810
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:601
  {
    /* Get the ECCR2 register value */
    eccval = FSMC_Bank2->ECCR2;
   4:	4b02      	ldr	r3, [pc, #8]	; (10 <FSMC_GetECC+0x10>)
   6:	6958      	ldr	r0, [r3, #20]
   8:	4770      	bx	lr
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:606
  }
  else
  {
    /* Get the ECCR3 register value */
    eccval = FSMC_Bank3->ECCR3;
   a:	4b02      	ldr	r3, [pc, #8]	; (14 <FSMC_GetECC+0x14>)
   c:	6958      	ldr	r0, [r3, #20]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:610
  }
  /* Return the error correction code value */
  return(eccval);
}
   e:	4770      	bx	lr
  10:	a0000060 	.word	0xa0000060
  14:	a0000080 	.word	0xa0000080

Disassembly of section .text.FSMC_ITConfig:

00000000 <FSMC_ITConfig>:
FSMC_ITConfig():
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:637
{
  assert_param(IS_FSMC_IT_BANK(FSMC_Bank));
  assert_param(IS_FSMC_IT(FSMC_IT));	
  assert_param(IS_FUNCTIONAL_STATE(NewState));
  
  if (NewState != DISABLE)
   0:	b162      	cbz	r2, 1c <FSMC_ITConfig+0x1c>
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:640
  {
    /* Enable the selected FSMC_Bank2 interrupts */
    if(FSMC_Bank == FSMC_Bank2_NAND)
   2:	2810      	cmp	r0, #16
   4:	d101      	bne.n	a <FSMC_ITConfig+0xa>
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:642
    {
      FSMC_Bank2->SR2 |= FSMC_IT;
   6:	4b0e      	ldr	r3, [pc, #56]	; (40 <FSMC_ITConfig+0x40>)
   8:	e003      	b.n	12 <FSMC_ITConfig+0x12>
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:645
    }
    /* Enable the selected FSMC_Bank3 interrupts */
    else if (FSMC_Bank == FSMC_Bank3_NAND)
   a:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
   e:	d103      	bne.n	18 <FSMC_ITConfig+0x18>
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:647
    {
      FSMC_Bank3->SR3 |= FSMC_IT;
  10:	4b0c      	ldr	r3, [pc, #48]	; (44 <FSMC_ITConfig+0x44>)
  12:	685a      	ldr	r2, [r3, #4]
  14:	4311      	orrs	r1, r2
  16:	e010      	b.n	3a <FSMC_ITConfig+0x3a>
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:652
    }
    /* Enable the selected FSMC_Bank4 interrupts */
    else
    {
      FSMC_Bank4->SR4 |= FSMC_IT;    
  18:	4b0b      	ldr	r3, [pc, #44]	; (48 <FSMC_ITConfig+0x48>)
  1a:	e7fa      	b.n	12 <FSMC_ITConfig+0x12>
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:658
    }
  }
  else
  {
    /* Disable the selected FSMC_Bank2 interrupts */
    if(FSMC_Bank == FSMC_Bank2_NAND)
  1c:	2810      	cmp	r0, #16
  1e:	d104      	bne.n	2a <FSMC_ITConfig+0x2a>
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:661
    {
      
      FSMC_Bank2->SR2 &= (u32)~FSMC_IT;
  20:	4b07      	ldr	r3, [pc, #28]	; (40 <FSMC_ITConfig+0x40>)
  22:	685a      	ldr	r2, [r3, #4]
  24:	ea22 0101 	bic.w	r1, r2, r1
  28:	e007      	b.n	3a <FSMC_ITConfig+0x3a>
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:664
    }
    /* Disable the selected FSMC_Bank3 interrupts */
    else if (FSMC_Bank == FSMC_Bank3_NAND)
  2a:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:666
    {
      FSMC_Bank3->SR3 &= (u32)~FSMC_IT;
  2e:	bf0c      	ite	eq
  30:	4b04      	ldreq	r3, [pc, #16]	; (44 <FSMC_ITConfig+0x44>)
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:671
    }
    /* Disable the selected FSMC_Bank4 interrupts */
    else
    {
      FSMC_Bank4->SR4 &= (u32)~FSMC_IT;    
  32:	4b05      	ldrne	r3, [pc, #20]	; (48 <FSMC_ITConfig+0x48>)
  34:	43c9      	mvns	r1, r1
  36:	685a      	ldr	r2, [r3, #4]
  38:	4011      	ands	r1, r2
  3a:	6059      	str	r1, [r3, #4]
  3c:	4770      	bx	lr
  3e:	bf00      	nop
  40:	a0000060 	.word	0xa0000060
  44:	a0000080 	.word	0xa0000080
  48:	a00000a0 	.word	0xa00000a0

Disassembly of section .text.FSMC_GetFlagStatus:

00000000 <FSMC_GetFlagStatus>:
FSMC_GetFlagStatus():
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:702
  
  /* Check the parameters */
  assert_param(IS_FSMC_GETFLAG_BANK(FSMC_Bank));
  assert_param(IS_FSMC_GET_FLAG(FSMC_FLAG));
  
  if(FSMC_Bank == FSMC_Bank2_NAND)
   0:	d1012810 	.word	0xd1012810
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:704
  {
    tmpsr = FSMC_Bank2->SR2;
   4:	4b06      	ldr	r3, [pc, #24]	; (20 <FSMC_GetFlagStatus+0x20>)
   6:	e004      	b.n	12 <FSMC_GetFlagStatus+0x12>
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:706
  }  
  else if(FSMC_Bank == FSMC_Bank3_NAND)
   8:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:708
  {
    tmpsr = FSMC_Bank3->SR3;
   c:	bf0c      	ite	eq
   e:	4b05      	ldreq	r3, [pc, #20]	; (24 <FSMC_GetFlagStatus+0x24>)
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:713
  }
  /* FSMC_Bank4_PCCARD*/
  else
  {
    tmpsr = FSMC_Bank4->SR4;
  10:	4b05      	ldrne	r3, [pc, #20]	; (28 <FSMC_GetFlagStatus+0x28>)
  12:	685b      	ldr	r3, [r3, #4]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:719
  } 
  
  /* Get the flag status */
  if ((tmpsr & FSMC_FLAG) != (u16)RESET )
  {
    bitstatus = SET;
  14:	420b      	tst	r3, r1
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:727
  {
    bitstatus = RESET;
  }
  /* Return the flag status */
  return bitstatus;
}
  16:	bf0c      	ite	eq
  18:	2000      	moveq	r0, #0
  1a:	2001      	movne	r0, #1
  1c:	4770      	bx	lr
  1e:	bf00      	nop
  20:	a0000060 	.word	0xa0000060
  24:	a0000080 	.word	0xa0000080
  28:	a00000a0 	.word	0xa00000a0

Disassembly of section .text.FSMC_ClearFlag:

00000000 <FSMC_ClearFlag>:
FSMC_ClearFlag():
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:751
{
 /* Check the parameters */
  assert_param(IS_FSMC_GETFLAG_BANK(FSMC_Bank));
  assert_param(IS_FSMC_CLEAR_FLAG(FSMC_FLAG)) ;
    
  if(FSMC_Bank == FSMC_Bank2_NAND)
   0:	2810      	cmp	r0, #16
   2:	d104      	bne.n	e <FSMC_ClearFlag+0xe>
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:753
  {
    FSMC_Bank2->SR2 &= ~FSMC_FLAG; 
   4:	4b07      	ldr	r3, [pc, #28]	; (24 <FSMC_ClearFlag+0x24>)
   6:	685a      	ldr	r2, [r3, #4]
   8:	ea22 0101 	bic.w	r1, r2, r1
   c:	e007      	b.n	1e <FSMC_ClearFlag+0x1e>
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:755
  }  
  else if(FSMC_Bank == FSMC_Bank3_NAND)
   e:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:757
  {
    FSMC_Bank3->SR3 &= ~FSMC_FLAG;
  12:	bf0c      	ite	eq
  14:	4b04      	ldreq	r3, [pc, #16]	; (28 <FSMC_ClearFlag+0x28>)
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:762
  }
  /* FSMC_Bank4_PCCARD*/
  else
  {
    FSMC_Bank4->SR4 &= ~FSMC_FLAG;
  16:	4b05      	ldrne	r3, [pc, #20]	; (2c <FSMC_ClearFlag+0x2c>)
  18:	43c9      	mvns	r1, r1
  1a:	685a      	ldr	r2, [r3, #4]
  1c:	4011      	ands	r1, r2
  1e:	6059      	str	r1, [r3, #4]
  20:	4770      	bx	lr
  22:	bf00      	nop
  24:	a0000060 	.word	0xa0000060
  28:	a0000080 	.word	0xa0000080
  2c:	a00000a0 	.word	0xa00000a0

Disassembly of section .text.FSMC_GetITStatus:

00000000 <FSMC_GetITStatus>:
FSMC_GetITStatus():
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:791
  
  /* Check the parameters */
  assert_param(IS_FSMC_IT_BANK(FSMC_Bank));
  assert_param(IS_FSMC_GET_IT(FSMC_IT));
  
  if(FSMC_Bank == FSMC_Bank2_NAND)
   0:	2810      	cmp	r0, #16
   2:	d101      	bne.n	8 <FSMC_GetITStatus+0x8>
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:793
  {
    tmpsr = FSMC_Bank2->SR2;
   4:	4b08      	ldr	r3, [pc, #32]	; (28 <FSMC_GetITStatus+0x28>)
   6:	e004      	b.n	12 <FSMC_GetITStatus+0x12>
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:795
  }  
  else if(FSMC_Bank == FSMC_Bank3_NAND)
   8:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:797
  {
    tmpsr = FSMC_Bank3->SR3;
   c:	bf0c      	ite	eq
   e:	4b07      	ldreq	r3, [pc, #28]	; (2c <FSMC_GetITStatus+0x2c>)
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:802
  }
  /* FSMC_Bank4_PCCARD*/
  else
  {
    tmpsr = FSMC_Bank4->SR4;
  10:	4b07      	ldrne	r3, [pc, #28]	; (30 <FSMC_GetITStatus+0x30>)
  12:	685b      	ldr	r3, [r3, #4]
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:809
  
  itstatus = tmpsr & FSMC_IT;
  
  itenable = tmpsr & (FSMC_IT >> 3);

  if ((itstatus != (u32)RESET)  && (itenable != (u32)RESET))
  14:	ea13 0001 	ands.w	r0, r3, r1
  18:	d004      	beq.n	24 <FSMC_GetITStatus+0x24>
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:811
  {
    bitstatus = SET;
  1a:	ea13 01d1 	ands.w	r1, r3, r1, lsr #3
  1e:	bf0c      	ite	eq
  20:	2000      	moveq	r0, #0
  22:	2001      	movne	r0, #1
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:818
  else
  {
    bitstatus = RESET;
  }
  return bitstatus; 
}
  24:	4770      	bx	lr
  26:	bf00      	nop
  28:	a0000060 	.word	0xa0000060
  2c:	a0000080 	.word	0xa0000080
  30:	a00000a0 	.word	0xa00000a0

Disassembly of section .text.FSMC_ClearITPendingBit:

00000000 <FSMC_ClearITPendingBit>:
FSMC_ClearITPendingBit():
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:842
{
  /* Check the parameters */
  assert_param(IS_FSMC_IT_BANK(FSMC_Bank));
  assert_param(IS_FSMC_IT(FSMC_IT));
    
  if(FSMC_Bank == FSMC_Bank2_NAND)
   0:	d1042810 	.word	0xd1042810
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:844
  {
    FSMC_Bank2->SR2 &= ~(FSMC_IT >> 3); 
   4:	4b07      	ldr	r3, [pc, #28]	; (24 <FSMC_ClearITPendingBit+0x24>)
   6:	685a      	ldr	r2, [r3, #4]
   8:	ea22 01d1 	bic.w	r1, r2, r1, lsr #3
   c:	e008      	b.n	20 <FSMC_ClearITPendingBit+0x20>
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:846
  }  
  else if(FSMC_Bank == FSMC_Bank3_NAND)
   e:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:848
  {
    FSMC_Bank3->SR3 &= ~(FSMC_IT >> 3);
  12:	bf0c      	ite	eq
  14:	4b04      	ldreq	r3, [pc, #16]	; (28 <FSMC_ClearITPendingBit+0x28>)
C:\cortex\dimmers\stlibrary\src/stm32f10x_fsmc.c:853
  }
  /* FSMC_Bank4_PCCARD*/
  else
  {
    FSMC_Bank4->SR4 &= ~(FSMC_IT >> 3);
  16:	4b05      	ldrne	r3, [pc, #20]	; (2c <FSMC_ClearITPendingBit+0x2c>)
  18:	08c9      	lsrs	r1, r1, #3
  1a:	685a      	ldr	r2, [r3, #4]
  1c:	ea22 0101 	bic.w	r1, r2, r1
  20:	6059      	str	r1, [r3, #4]
  22:	4770      	bx	lr
  24:	a0000060 	.word	0xa0000060
  28:	a0000080 	.word	0xa0000080
  2c:	a00000a0 	.word	0xa00000a0
